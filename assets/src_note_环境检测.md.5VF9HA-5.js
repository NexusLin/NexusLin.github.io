import{_ as e,c as s,o as i,ag as n}from"./chunks/framework.DnwzncJk.js";const u=JSON.parse('{"title":"环境检测","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/note/环境检测.md","filePath":"src/note/环境检测.md","lastUpdated":1743124685000}'),o={name:"src/note/环境检测.md"};function t(l,a,p,d,c,r){return i(),s("div",null,a[0]||(a[0]=[n(`<h1 id="环境检测" tabindex="-1">环境检测 <a class="header-anchor" href="#环境检测" aria-label="Permalink to &quot;环境检测&quot;">​</a></h1><p>本篇文章主要检测本地环境中各种开发语言的安装情况，可以通过以下几种方式实现：</p><h3 id="_1-检测-node-js-环境" tabindex="-1">1. <strong>检测 Node.js 环境</strong> <a class="header-anchor" href="#_1-检测-node-js-环境" aria-label="Permalink to &quot;1. **检测 Node.js 环境**&quot;">​</a></h3><p>Node.js 是一个流行的 JavaScript 运行时，通常用于前端和后端开发。你可以通过命令行来检查它是否安装。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node -v</span></span></code></pre></div><ul><li><p>如果安装了 Node.js，它会返回版本号，例如 <code>v16.13.0</code>。</p></li><li><p>如果未安装，命令行会提示找不到 <code>node</code>。</p></li><li><p>如果你本地安装的nvm，也可以通过nvm的方法来检测</p></li></ul><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm list  // 查看本地安装的node版本</span></span>
<span class="line"><span>node -v   // 查看当前使用的node版本</span></span></code></pre></div><h3 id="_2-检测-python-环境" tabindex="-1">2. <strong>检测 Python 环境</strong> <a class="header-anchor" href="#_2-检测-python-环境" aria-label="Permalink to &quot;2. **检测 Python 环境**&quot;">​</a></h3><p>Python 是常见的开发语言之一。你可以通过以下命令检查是否已安装 Python。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python --version</span></span>
<span class="line"><span># 或者</span></span>
<span class="line"><span>python3 --version</span></span></code></pre></div><ul><li>如果安装了 Python，它会显示类似 <code>Python 3.8.5</code> 的版本号。</li><li>如果没有安装，命令行会提示找不到 <code>python</code> 或 <code>python3</code>。</li></ul><h3 id="_3-检测-java-环境" tabindex="-1">3. <strong>检测 Java 环境</strong> <a class="header-anchor" href="#_3-检测-java-环境" aria-label="Permalink to &quot;3. **检测 Java 环境**&quot;">​</a></h3><p>Java 是另一种常见的编程语言，通常用于开发 Android 应用或企业级应用。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>java -version</span></span></code></pre></div><ul><li>如果 Java 已安装，它会返回类似 <code>openjdk version &quot;11.0.8&quot;</code> 的版本信息。</li><li>如果没有安装，命令行会提示找不到 <code>java</code>。</li></ul><h3 id="_4-检测-ruby-环境" tabindex="-1">4. <strong>检测 Ruby 环境</strong> <a class="header-anchor" href="#_4-检测-ruby-环境" aria-label="Permalink to &quot;4. **检测 Ruby 环境**&quot;">​</a></h3><p>Ruby 常用于 web 开发，尤其是 Ruby on Rails 框架。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ruby -v</span></span></code></pre></div><ul><li>如果 Ruby 安装了，会显示版本号，如 <code>ruby 2.7.0</code>。</li><li>如果没有安装，命令行会提示找不到 <code>ruby</code>。</li></ul><h3 id="_5-检测-php-环境" tabindex="-1">5. <strong>检测 PHP 环境</strong> <a class="header-anchor" href="#_5-检测-php-环境" aria-label="Permalink to &quot;5. **检测 PHP 环境**&quot;">​</a></h3><p>PHP 是一种常用于 Web 开发的语言，尤其在服务器端应用中。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>php -v</span></span></code></pre></div><ul><li>如果 PHP 安装了，命令行会显示类似 <code>PHP 7.4.3</code> 的版本号。</li><li>如果没有安装，命令行会提示找不到 <code>php</code>。</li></ul><h3 id="_6-检测-go-环境" tabindex="-1">6. <strong>检测 Go 环境</strong> <a class="header-anchor" href="#_6-检测-go-环境" aria-label="Permalink to &quot;6. **检测 Go 环境**&quot;">​</a></h3><p>Go（又称 Golang）是一种由 Google 开发的编程语言。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>go version</span></span></code></pre></div><ul><li>如果 Go 安装了，它会返回类似 <code>go version go1.15.7 linux/amd64</code> 的信息。</li><li>如果没有安装，命令行会提示找不到 <code>go</code>。</li></ul><h3 id="_7-检测-rust-环境" tabindex="-1">7. <strong>检测 Rust 环境</strong> <a class="header-anchor" href="#_7-检测-rust-环境" aria-label="Permalink to &quot;7. **检测 Rust 环境**&quot;">​</a></h3><p>Rust 是一门注重性能和安全性的编程语言。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rustc --version</span></span></code></pre></div><ul><li>如果 Rust 安装了，它会显示类似 <code>rustc 1.48.0</code> 的版本号。</li><li>如果没有安装，命令行会提示找不到 <code>rustc</code>。</li></ul><h3 id="_8-检测-net-环境" tabindex="-1">8. <strong>检测 .NET 环境</strong> <a class="header-anchor" href="#_8-检测-net-环境" aria-label="Permalink to &quot;8. **检测 .NET 环境**&quot;">​</a></h3><p>.NET 是一个由 Microsoft 开发的跨平台开发框架，主要用于 Windows 和 Web 应用开发。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dotnet --version</span></span></code></pre></div><ul><li>如果 .NET 安装了，它会返回类似 <code>5.0.100</code> 的版本号。</li><li>如果没有安装，命令行会提示找不到 <code>dotnet</code>。</li></ul><h3 id="_9-检测-c-c-编译器" tabindex="-1">9. <strong>检测 C/C++ 编译器</strong> <a class="header-anchor" href="#_9-检测-c-c-编译器" aria-label="Permalink to &quot;9. **检测 C/C++ 编译器**&quot;">​</a></h3><p>C 和 C++ 是经典的编程语言，通常使用 GCC（GNU 编译器集合）进行开发。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gcc --version</span></span></code></pre></div><ul><li>如果安装了 GCC 编译器，它会返回类似 <code>gcc (Ubuntu 10.2.0-13ubuntu1) 10.2.0</code> 的版本信息。</li><li>如果没有安装，命令行会提示找不到 <code>gcc</code>。</li></ul><h3 id="_10-检测数据库mysql环境" tabindex="-1">10. <strong>检测数据库Mysql环境</strong> <a class="header-anchor" href="#_10-检测数据库mysql环境" aria-label="Permalink to &quot;10. **检测数据库Mysql环境**&quot;">​</a></h3><p>如果你在本地开发涉及数据库的应用，通常会使用数据库系统如 MySQL、PostgreSQL 或 MongoDB。</p><h4 id="mysql" tabindex="-1">MySQL: <a class="header-anchor" href="#mysql" aria-label="Permalink to &quot;MySQL:&quot;">​</a></h4><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mysql --version</span></span></code></pre></div><ul><li>如果 MySQL 安装了，它会显示版本号。</li><li>如果没有安装，命令行会提示找不到 <code>mysql</code>。</li></ul><h4 id="postgresql" tabindex="-1">PostgreSQL: <a class="header-anchor" href="#postgresql" aria-label="Permalink to &quot;PostgreSQL:&quot;">​</a></h4><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>psql --version</span></span></code></pre></div><ul><li>如果 PostgreSQL 安装了，它会返回版本号。</li><li>如果没有安装，命令行会提示找不到 <code>psql</code>。</li></ul><h4 id="mongodb" tabindex="-1">MongoDB: <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;MongoDB:&quot;">​</a></h4><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mongod --version</span></span></code></pre></div><ul><li>如果 MongoDB 安装了，它会返回类似 <code>db version v4.4.6</code> 的版本号。</li><li>如果没有安装，命令行会提示找不到 <code>mongod</code>。</li></ul><h3 id="_11-检测-git-环境" tabindex="-1">11. <strong>检测 Git 环境</strong> <a class="header-anchor" href="#_11-检测-git-环境" aria-label="Permalink to &quot;11. **检测 Git 环境**&quot;">​</a></h3><p>Git 是一个版本控制工具，几乎所有的开发人员都需要它。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git --version</span></span></code></pre></div><ul><li>如果 Git 安装了，它会显示类似 <code>git version 2.29.2</code> 的信息。</li><li>如果没有安装，命令行会提示找不到 <code>git</code>。</li></ul><h3 id="_12-检测-docker-环境" tabindex="-1">12. <strong>检测 Docker 环境</strong> <a class="header-anchor" href="#_12-检测-docker-环境" aria-label="Permalink to &quot;12. **检测 Docker 环境**&quot;">​</a></h3><p>Docker 是一个用于创建、部署和运行应用的开源平台。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker --version</span></span></code></pre></div><ul><li>如果 Docker 安装了，它会返回版本信息，例如 <code>Docker version 20.10.7, build f0df350</code>。</li><li>如果没有安装，命令行会提示找不到 <code>docker</code>。</li></ul><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>通过以上命令，可以检查系统上是否安装了常见的开发语言和工具。如果某个工具或语言没有安装，你通常会看到命令行提示找不到相应的命令，或者需要安装该语言或工具的相关信息。</p>`,60)]))}const g=e(o,[["render",t]]);export{u as __pageData,g as default};
