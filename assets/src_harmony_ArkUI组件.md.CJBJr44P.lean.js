import{_ as i,c as n,G as l,w as r,j as t,a as o,ag as d,B as s,o as h}from"./chunks/framework.wRLzwZz-.js";const u="/Harmony/harmony-ArkUI1.png",w=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/harmony/ArkUI组件.md","filePath":"src/harmony/ArkUI组件.md"}'),b={name:"src/harmony/ArkUI组件.md"},p={id:"_1、认识arkui",tabindex:"-1"},c={id:"声明式开发范式",tabindex:"-1"},f={id:"类web开发范式",tabindex:"-1"},k={id:"_2、开发布局",tabindex:"-1"};function m(g,a,q,_,x,P){const e=s("font");return h(),n("div",null,[l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[0]||(a[0]=[o("ArkUI组件是基于ArkTs的声明式开发范式组件，")])),_:1}),l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[1]||(a[1]=[o("包括基础组件、容器组件和媒体组件。")])),_:1}),l(e,{style:{color:"rgb(38, 38, 38)"}}),t("h2",p,[l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[2]||(a[2]=[o("1、认识")])),_:1}),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[3]||(a[3]=[o("ArkUI")])),_:1}),a[4]||(a[4]=o()),a[5]||(a[5]=t("a",{class:"header-anchor",href:"#_1、认识arkui","aria-label":'Permalink to "<font style="color:rgb(38, 38, 38);">1、认识</font><font style="color:#DF2A3F;">ArkUI</font>"'},"​",-1))]),l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[6]||(a[6]=[o("ArkUl 是一套声明式开发框架，它具备简洁自然的语法、丰富的 UI 组件、多维状态管理，以及实时多维度预览能力，多设备兼容。")])),_:1}),l(e,{style:{color:"rgb(38, 38, 38)"}}),l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[7]||(a[7]=[o("换句话说，这就是")])),_:1}),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[8]||(a[8]=[o("基于ArkTs")])),_:1}),a[35]||(a[35]=o("为我们搭建的UI组件库，接下来我们就简单学习和使用一下")),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[9]||(a[9]=[o("ArkUI组件库，")])),_:1}),a[36]||(a[36]=o("然后完成我们的开发和项目搭建。")),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[10]||(a[10]=[o("ArkUI")])),_:1}),l(e,{style:{color:"#FFFFFF","background-color":"#D22D8D"}},{default:r(()=>a[11]||(a[11]=[o("（方舟UI框架）")])),_:1}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[12]||(a[12]=[o("提供了两种开发范式:")])),_:1}),t("blockquote",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[13]||(a[13]=[o("基于ArkTS的声明式开发范式（简称“声明式开发范式”）")])),_:1})]),t("blockquote",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[14]||(a[14]=[o("兼容JS的类Web开发范式")])),_:1}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[15]||(a[15]=[o("（简称“类Web开发范式”）")])),_:1})]),t("h4",c,[l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[16]||(a[16]=[o("声明式开发范式")])),_:1}),a[17]||(a[17]=o()),a[18]||(a[18]=t("a",{class:"header-anchor",href:"#声明式开发范式","aria-label":'Permalink to "<font style="color:rgb(36, 39, 40);">声明式开发范式</font>"'},"​",-1))]),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[19]||(a[19]=[o("采用基于TypeScript声明式UI语法扩展而来的")])),_:1}),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[20]||(a[20]=[o("ArkTS语言")])),_:1}),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[21]||(a[21]=[o("，从组件、动画和状态管理三个维度提供UI绘制能力。")])),_:1}),t("h4",f,[l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[22]||(a[22]=[o("类Web开发范式：")])),_:1}),a[23]||(a[23]=o()),a[24]||(a[24]=t("a",{class:"header-anchor",href:"#类web开发范式","aria-label":'Permalink to "<font style="color:rgb(36, 39, 40);">类Web开发范式：</font>"'},"​",-1))]),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[25]||(a[25]=[o("采用经典的HML、CSS、JavaScript三段式开发方式，也就是我们前端基础")])),_:1}),t("p",null,[a[28]||(a[28]=o("接下来我们的部分主要使用的就是上面的")),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[26]||(a[26]=[o("声明式开发范式")])),_:1}),l(e,{style:{color:"#000000"}},{default:r(()=>a[27]||(a[27]=[o("来进行开发。")])),_:1})]),l(e,{style:{color:"#000000"}}),t("h2",k,[l(e,{style:{color:"#000000"}},{default:r(()=>a[29]||(a[29]=[o("2、")])),_:1}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[30]||(a[30]=[o("开发布局")])),_:1}),a[31]||(a[31]=o()),a[32]||(a[32]=t("a",{class:"header-anchor",href:"#_2、开发布局","aria-label":'Permalink to "<font style="color:#000000;">2、</font><font style="color:rgba(0, 0, 0, 0.9);">开发布局</font>"'},"​",-1))]),t("p",null,[a[34]||(a[34]=o("在开发过程之中我们经常会使用到布局，")),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[33]||(a[33]=[o("常见页面结构图如下图")])),_:1})]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}}),a[37]||(a[37]=d("",91))])}const A=i(b,[["render",m]]);export{w as __pageData,A as default};
