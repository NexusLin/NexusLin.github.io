import{_ as d,c as a,o as e,ag as s}from"./chunks/framework.DnwzncJk.js";const k=JSON.parse('{"title":"项目规范文件","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/tg/tgapi/code.md","filePath":"src/tg/tgapi/code.md","lastUpdated":1757912914000}'),i={name:"src/tg/tgapi/code.md"};function h(l,t,n,r,o,p){return e(),a("div",null,t[0]||(t[0]=[s(`<h1 id="项目规范文件" tabindex="-1">项目规范文件 <a class="header-anchor" href="#项目规范文件" aria-label="Permalink to &quot;项目规范文件&quot;">​</a></h1><h2 id="接口公共规范" tabindex="-1">接口公共规范 <a class="header-anchor" href="#接口公共规范" aria-label="Permalink to &quot;接口公共规范&quot;">​</a></h2><h3 id="api接口" tabindex="-1">API接口 <a class="header-anchor" href="#api接口" aria-label="Permalink to &quot;API接口&quot;">​</a></h3><ul><li>（API相关说明）</li></ul><table tabindex="0"><thead><tr><th>接口相关</th><th>值</th><th>备注</th></tr></thead><tbody><tr><td>接口前缀</td><td><code>/api</code></td><td>(不分环境使用这个)</td></tr><tr><td>开发环境</td><td>/dev-api</td><td>即测试环境</td></tr><tr><td>生产环境</td><td>/prod-api</td><td>即线上环境</td></tr></tbody></table><h3 id="token认证" tabindex="-1">Token认证 <a class="header-anchor" href="#token认证" aria-label="Permalink to &quot;Token认证&quot;">​</a></h3><table tabindex="0"><thead><tr><th>接口相关</th><th>值</th><th>备注</th></tr></thead><tbody><tr><td>token请求头</td><td>&#39;Bearer &#39;+&#39;token部分xxx&#39;</td><td>--</td></tr></tbody></table><h2 id="code码" tabindex="-1">Code码 <a class="header-anchor" href="#code码" aria-label="Permalink to &quot;Code码&quot;">​</a></h2><table tabindex="0"><thead><tr><th>状态码</th><th>含义</th><th>示例</th><th>功能使用</th></tr></thead><tbody><tr><td>200</td><td>OK：请求成功</td><td><code>HttpStatus.OK</code></td><td>操作成功</td></tr><tr><td>201</td><td>Created：资源已成功创建</td><td><code>HttpStatus.CREATED</code></td><td></td></tr><tr><td>204</td><td>No Content：请求成功，但无内容返回</td><td><code>HttpStatus.NO_CONTENT</code></td><td></td></tr><tr><td>400</td><td>Bad Request：请求无效，服务器无法理解</td><td><code>HttpStatus.BAD_REQUEST</code></td><td></td></tr><tr><td>401</td><td>Unauthorized：未授权</td><td><code>HttpStatus.UNAUTHORIZED</code></td><td>账号密码不正确</td></tr><tr><td>403</td><td>Forbidden：禁止访问</td><td><code>HttpStatus.FORBIDDEN</code></td><td></td></tr><tr><td>404</td><td>Not Found：资源未找到</td><td><code>HttpStatus.NOT_FOUND</code></td><td>资源未找到</td></tr><tr><td>405</td><td>Method Not Allowed：请求方法不被允许</td><td><code>HttpStatus.METHOD_NOT_ALLOWED</code></td><td></td></tr><tr><td>409</td><td>Conflict：请求冲突</td><td><code>HttpStatus.CONFLICT</code></td><td></td></tr><tr><td>410</td><td>Gone：资源已永久删除</td><td><code>HttpStatus.GONE</code></td><td></td></tr><tr><td>422</td><td>Unprocessable Entity：请求格式正确，但无法处理</td><td><code>HttpStatus.UNPROCESSABLE_ENTITY</code></td><td></td></tr><tr><td>500</td><td>Internal Server Error：服务器内部错误</td><td><code>HttpStatus.INTERNAL_SERVER_ERROR</code></td><td></td></tr><tr><td>502</td><td>Bad Gateway：无效网关</td><td><code>HttpStatus.BAD_GATEWAY</code></td><td></td></tr><tr><td>503</td><td>Service Unavailable：服务不可用</td><td><code>HttpStatus.SERVICE_UNAVAILABLE</code></td><td></td></tr></tbody></table><h2 id="方法规范" tabindex="-1">方法规范 <a class="header-anchor" href="#方法规范" aria-label="Permalink to &quot;方法规范&quot;">​</a></h2><h3 id="后端规范" tabindex="-1">后端规范 <a class="header-anchor" href="#后端规范" aria-label="Permalink to &quot;后端规范&quot;">​</a></h3><p>🍎 采取NestJS Modules命名规范</p><table tabindex="0"><thead><tr><th>操作</th><th>接口命名</th><th>备注</th><th>非特殊统一命名</th></tr></thead><tbody><tr><td>查询</td><td><code>getXXX</code></td><td><code>XXX</code>为资源名称，例如<code>getUsers</code></td><td>getAll</td></tr><tr><td>创建</td><td><code>createXXX</code></td><td><code>XXX</code>为资源名称，例如<code>createUser</code></td><td>getOne</td></tr><tr><td>更新</td><td><code>updateXXX</code></td><td><code>XXX</code>为资源名称，例如<code>updateUser</code></td><td>updateOne</td></tr><tr><td>删除</td><td><code>deleteXXX</code></td><td><code>XXX</code>为资源名称，例如<code>deleteUser</code></td><td>deleteOne</td></tr></tbody></table><h3 id="前端规范" tabindex="-1">前端规范 <a class="header-anchor" href="#前端规范" aria-label="Permalink to &quot;前端规范&quot;">​</a></h3><table tabindex="0"><thead><tr><th>接口命名</th><th>操作</th><th>备注</th></tr></thead><tbody><tr><td><code>handleQuery()</code></td><td>搜索查询</td><td>搜索按钮操作，初始化操作，查询页面为1</td></tr><tr><td><code>getList</code></td><td>分页查询</td><td>带参数分页查询列表</td></tr><tr><td><code>handleAdd</code></td><td>新增添加</td><td>--</td></tr><tr><td><code>handleSubmit</code></td><td>处理表单提交函数</td><td>--</td></tr><tr><td><code>handleSubmit</code></td><td>处理表单提交函数</td><td>--</td></tr></tbody></table><h2 id="前端参数规范" tabindex="-1">前端参数规范 <a class="header-anchor" href="#前端参数规范" aria-label="Permalink to &quot;前端参数规范&quot;">​</a></h2><h3 id="crud参数" tabindex="-1">CRUD参数 <a class="header-anchor" href="#crud参数" aria-label="Permalink to &quot;CRUD参数&quot;">​</a></h3><table tabindex="0"><thead><tr><th><code>参数名</code></th><th>参数值</th><th><code>参数名</code></th><th>参数值</th></tr></thead><tbody><tr><td><code>loading</code></td><td>遮罩层，true开启，false关闭</td><td><code>single</code></td><td>非单个禁用，true禁用，false非禁用</td></tr><tr><td><code>ids</code></td><td>选中数组 []</td><td><code>multiple</code></td><td>非多个禁用（true开启，false关闭）</td></tr><tr><td><code>total</code></td><td>总条数，默认0</td><td><code>tableList</code></td><td>用户表格数据,格式[]</td></tr><tr><td><code>title</code></td><td>弹出层标题</td><td><code>deptOptions</code></td><td>部门树选项[]</td></tr></tbody></table><h3 id="查询参数" tabindex="-1">查询参数 <a class="header-anchor" href="#查询参数" aria-label="Permalink to &quot;查询参数&quot;">​</a></h3><div class="language-JS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pageNum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //页码数（也就是当前是多少页）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pageSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //页条数（也就是当前页是多少条）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dateRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 日期范围</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deptOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 部门树选项</span></span></code></pre></div><h3 id="表单名称" tabindex="-1">表单名称 <a class="header-anchor" href="#表单名称" aria-label="Permalink to &quot;表单名称&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">queryForm  查询表单</span></span></code></pre></div><h2 id="hooks方法" tabindex="-1">Hooks方法 <a class="header-anchor" href="#hooks方法" aria-label="Permalink to &quot;Hooks方法&quot;">​</a></h2><h3 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端&quot;">​</a></h3><div class="language-JS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//表格性别进行条件渲染</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">judigSex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(row, column, cellValue) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cellValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;男&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;女&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表格身高进行条件渲染</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">judiguserHeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(row, column, cellValue) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cellValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cm&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表格体重进行条件渲染</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">judiguserWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(row, column, cellValue) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cellValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div>`,25)]))}const u=d(i,[["render",h]]);export{k as __pageData,u as default};
