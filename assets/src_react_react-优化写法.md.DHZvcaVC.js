import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.CqxIsSM8.js";const c=JSON.parse('{"title":"❤React-优化番外篇-优化写法","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/react/react-优化写法.md","filePath":"src/react/react-优化写法.md","lastUpdated":1743124685000}'),l={name:"src/react/react-优化写法.md"};function h(e,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="❤react-优化番外篇-优化写法" tabindex="-1">❤React-优化番外篇-优化写法 <a class="header-anchor" href="#❤react-优化番外篇-优化写法" aria-label="Permalink to &quot;❤React-优化番外篇-优化写法&quot;">​</a></h1><h2 id="_1、配置css-的引入方式" tabindex="-1">1、配置css 的引入方式 <a class="header-anchor" href="#_1、配置css-的引入方式" aria-label="Permalink to &quot;1、配置css 的引入方式&quot;">​</a></h2><p>通常我们会遇到一种情况：想在一个css之中导入其他的css模块，进行css的复用</p><p>一般使用方式 使用普通的 CSS 文件或者 CSS 模块来管理样式 使用 CSS-in-JS 库（例如 styled-components 或 Emotion）来处理样式</p><ol><li>使用传统的CSS @import 规则导入普通的 CSS 文件：</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 在你的组件样式文件中 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@import </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;path/to/other-stylesheet.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 你的样式规则 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.your</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">component {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_2、antd-优化使用" tabindex="-1">2、antd 优化使用 <a class="header-anchor" href="#_2、antd-优化使用" aria-label="Permalink to &quot;2、antd 优化使用&quot;">​</a></h2><p>antd 优化使用</p><h3 id="优化表单赋值" tabindex="-1">优化表单赋值 <a class="header-anchor" href="#优化表单赋值" aria-label="Permalink to &quot;优化表单赋值&quot;">​</a></h3><p>我们发现存在一个问题，每次新增的时候，表单还是之前的项值，这种怎么办呢 <img src="https://cdn.nlark.com/yuque/0/2025/webp/22435914/1738385377837-2fa23b09-085d-435c-b417-7b05437a7480.webp" alt=""></p><p>这里我们更改一下值的类型</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置整个表单的初始值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initialValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setInitialValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    status: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置 status 字段的初始值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dict_type:queryForm.dict_type,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 添加其他参数...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //修改新增时候的显示</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleAdd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    form.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resetFields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;新增&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setInitialValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">initialValues,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dict_type:queryForm.dict_type,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setVisible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span></code></pre></div><h3 id="优化单选赋值" tabindex="-1">优化单选赋值 <a class="header-anchor" href="#优化单选赋值" aria-label="Permalink to &quot;优化单选赋值&quot;">​</a></h3><p>之前我们的赋值部分是这样子的</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> statusOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { dictValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dictLabel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;正常&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { dictValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dictLabel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;停用&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 更多选项...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ];</span></span></code></pre></div><p>但是我们存在一个问题，就是无法赋值</p><p><img src="https://cdn.nlark.com/yuque/0/2025/webp/22435914/1738385377884-ff83781b-af77-41d4-b1d9-17d634be4eb2.webp" alt=""></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">更改状态类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> statusOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { dictValue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dictLabel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;正常&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { dictValue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dictLabel: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;停用&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 更多选项...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p>ok</p><p><img src="https://cdn.nlark.com/yuque/0/2025/webp/22435914/1738385377816-4176b09e-7831-45e1-9a37-b9d0282b906c.webp" alt=""></p><h3 id="表单默认值优化" tabindex="-1">表单默认值优化 <a class="header-anchor" href="#表单默认值优化" aria-label="Permalink to &quot;表单默认值优化&quot;">​</a></h3><p>之前我们写法是这样子</p><p>使用时会报错： Warning: [antd: Form.Item] <code>defaultValue</code> will not work on controlled Field. You should use <code>initialValues</code> of Form instead.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Form.Item</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> label</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;显示排序&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dict_sort&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rules</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[{ required: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;请输入数据键值&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }]}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* onChange={onChange}  */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">InputNumber</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> min</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defaultValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">placeholder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请输入&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Form.Item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这个警告是由Ant Design中的<code>Form.Item</code>组件产生的。警告信息指出<code>defaultValue</code>属性不会在某些条件下工作。就是建议我们使用<code>Form</code>组件的<code>form</code>属性进行表单数据的管理时，<code>defaultValue</code>属性应该使用<code>setFieldsValue</code>方法。</p><p>更改写法以后</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Form</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> form</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{form} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initialValues</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{initialValues} &gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 设置整个表单的初始值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initialValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setInitialValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    status: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置 status 字段的初始值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dict_type:queryForm.dict_type,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dict_sort:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 添加其他参数...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2025/webp/22435914/1738385378045-3270b0eb-a5b2-4e5a-ad23-7a9be8885aee.webp" alt=""></p><h2 id="_3、ts写法优化" tabindex="-1">3、TS写法优化 <a class="header-anchor" href="#_3、ts写法优化" aria-label="Permalink to &quot;3、TS写法优化&quot;">​</a></h2><p>在我们赋值菜单的时候一直提示 类型“{ key: string; icon: Element; title: string; children: { key: string; title: string; path: string; }[]; }[]”的参数不能赋给类型“SetStateAction&lt;never[]&gt;”的参数。 不能将类型“{ key: string; icon: Element; title: string; children: { key: string; title: string; path: string; }[]; }[]”分配给类型“never[]”。 不能将类型“{ key: string; icon: JSX.Element; title: string; children: { key: string; title: string; path: string; }[]; }”分配给类型“never”。ts(2345)</p><p>这个时候是由于TS类型错误引起的</p><p>意思就是 <code>useState([])</code> 中尝试将一个对象数组赋值给 <code>useState</code> 的初始状态，但是 TypeScript 推断不出数组中的对象的类型。提供一个初始状态的类型定义，或者通过类型断言明确告诉 TypeScript 数组中的对象的类型即可</p><h2 id="_4、路由加载控制台报错处理" tabindex="-1">4、路由加载控制台报错处理 <a class="header-anchor" href="#_4、路由加载控制台报错处理" aria-label="Permalink to &quot;4、路由加载控制台报错处理&quot;">​</a></h2><p>Error handled by React Router default ErrorBoundary: Error: A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.</p><p><img src="https://cdn.nlark.com/yuque/0/2025/webp/22435914/1738385377973-d5f7f43a-456c-4996-b7e7-911351cc7ab1.webp" alt=""></p><p>在项目启动加载时候报错，由于异步加载发生的错误</p><p>解决方法</p><p>这个时候在我们的外层加<code>Suspense</code> 就可以了</p><p><img src="https://cdn.nlark.com/yuque/0/2025/webp/22435914/1738385378208-64cc334b-3958-4587-804c-c4628e83b290.webp" alt=""></p><h2 id="_5、上传部分图片部分优化" tabindex="-1">5、上传部分图片部分优化 <a class="header-anchor" href="#_5、上传部分图片部分优化" aria-label="Permalink to &quot;5、上传部分图片部分优化&quot;">​</a></h2><p>上传图片成功以后，之后我们进行新增的时候图片无法清空，这个时候应该怎么做呢</p><p>使用 Ant Design 的 <code>Form</code> 组件提供的 <code>setFieldsValue</code> 方法来设置表单字段的值</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 上传完成后更新图片地址 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">form.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFieldsValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ thumburl: info.file.response.url }); </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 将上传成功的图片地址设置到表单字段 thumburl setImageUrl(info.file.response.url); </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 同时更新组件内部状态的 imageUrl</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 清空组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">form.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFieldsValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ thumburl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setImageUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,43)]))}const g=i(l,[["render",h]]);export{c as __pageData,g as default};
