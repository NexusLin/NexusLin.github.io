import{_ as e,c as t,ag as o,o as l}from"./chunks/framework.wRLzwZz-.js";const p=JSON.parse('{"title":"26-删除有序数组中的重复项","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/Algorithm/leetcode-26-删除有序数组中的重复项.md","filePath":"src/Algorithm/leetcode-26-删除有序数组中的重复项.md"}'),i={name:"src/Algorithm/leetcode-26-删除有序数组中的重复项.md"};function r(s,a,n,_,c,d){return l(),t("div",null,a[0]||(a[0]=[o('<h1 id="_26-删除有序数组中的重复项" tabindex="-1">26-删除有序数组中的重复项 <a class="header-anchor" href="#_26-删除有序数组中的重复项" aria-label="Permalink to &quot;26-删除有序数组中的重复项&quot;">​</a></h1><h2 id="_1-题目要求" tabindex="-1">① 题目要求 <a class="header-anchor" href="#_1-题目要求" aria-label="Permalink to &quot;① 题目要求&quot;">​</a></h2><h3 id="官方给的实例" tabindex="-1">官方给的实例： <a class="header-anchor" href="#官方给的实例" aria-label="Permalink to &quot;官方给的实例：&quot;">​</a></h3><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div><h3 id="_2-思路分析" tabindex="-1">② 思路分析 <a class="header-anchor" href="#_2-思路分析" aria-label="Permalink to &quot;② 思路分析&quot;">​</a></h3><ul><li>分析：</li></ul><p>取出最长公共前缀，那我们就可以直接拿第一个出来，然后转为数组，然后拿后面的每一个去跟这个第一项作比较，看里面的字符是否相同，如果后面的字符创长度比这个第一项还短，那就可以直接忽略不计。比这个长的话，游戏继续。</p><p>具体实现：</p>',8)]))}const u=e(i,[["render",r]]);export{p as __pageData,u as default};
