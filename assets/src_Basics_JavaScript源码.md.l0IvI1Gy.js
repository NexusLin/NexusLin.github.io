import{_ as a,c as e,o as r,a4 as t}from"./chunks/framework.DvHWMJgD.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/Basics/JavaScript源码.md","filePath":"src/Basics/JavaScript源码.md"}'),i={name:"src/Basics/JavaScript源码.md"},o=t('<p>JavaScript 的底层实现通常是用 C 和 C++ 编写的。不同的 JavaScript 引擎（如 V8、SpiderMonkey 和 JavaScriptCore）使用这些语言来实现解析、编译和执行 JavaScript 代码的功能。</p><p>JavaScript引擎：</p><h3 id="_1-v8" tabindex="-1">1. V8 <a class="header-anchor" href="#_1-v8" aria-label="Permalink to &quot;1. V8&quot;">​</a></h3><p>用途: 主要用于 Google Chrome 浏览器和 Node.js。 特点: 高性能，支持现代 JavaScript 特性，采用即时编译（JIT）技术来提高执行速度。 编写语言: C++。</p><h3 id="_2-spidermonkey" tabindex="-1">2. SpiderMonkey <a class="header-anchor" href="#_2-spidermonkey" aria-label="Permalink to &quot;2. SpiderMonkey&quot;">​</a></h3><p>用途: Mozilla Firefox 浏览器。 特点: 支持多种 JavaScript 特性，包括 ES6 和 WebAssembly，提供完整的开发者工具和调试支持。 编写语言: C++。</p><h3 id="_3-javascriptcore-nitro" tabindex="-1">3. JavaScriptCore (Nitro) <a class="header-anchor" href="#_3-javascriptcore-nitro" aria-label="Permalink to &quot;3. JavaScriptCore (Nitro)&quot;">​</a></h3><p>用途: Apple 的 Safari 浏览器。 特点: 高效执行和优化，支持最新的 JavaScript 标准。 编写语言: C++。</p><h3 id="_4-chakra" tabindex="-1">4. Chakra <a class="header-anchor" href="#_4-chakra" aria-label="Permalink to &quot;4. Chakra&quot;">​</a></h3><p>用途: 微软的 Edge 浏览器（旧版，基于 EdgeHTML）。 特点: 支持异步编程和现代 JavaScript 特性，适用于 Windows 环境。 编写语言: C++。</p><h3 id="_5-duktape" tabindex="-1">5. Duktape <a class="header-anchor" href="#_5-duktape" aria-label="Permalink to &quot;5. Duktape&quot;">​</a></h3><p>用途: 轻量级嵌入式 JavaScript 引擎，常用于 IoT 设备和游戏引擎。 特点: 体积小，适合资源受限的环境，易于集成。 编写语言: C。</p><h3 id="_6-rhino" tabindex="-1">6. Rhino <a class="header-anchor" href="#_6-rhino" aria-label="Permalink to &quot;6. Rhino&quot;">​</a></h3><p>用途: 主要用于 Java 环境，特别是在服务器端应用中。 特点: 用 Java 编写，支持与 Java 的无缝集成，适合服务器和桌面应用。 编写语言: Java。</p><p>每种引擎都有其独特的特性和用途，选择使用哪种引擎通常取决于具体的应用场景和性能需求。</p><blockquote><p>接下来我们就开始尝试在C++中一步一步手写一个简单的JavaScript引擎</p></blockquote>',16),c=[o];function p(s,n,h,d,l,_){return r(),e("div",null,c)}const u=a(i,[["render",p]]);export{S as __pageData,u as default};
