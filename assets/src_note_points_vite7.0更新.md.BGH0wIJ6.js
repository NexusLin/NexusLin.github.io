import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.DnwzncJk.js";const o=JSON.parse('{"title":"vite7.0更新","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/note/points/vite7.0更新.md","filePath":"src/note/points/vite7.0更新.md","lastUpdated":1752486718000}'),l={name:"src/note/points/vite7.0更新.md"};function e(p,s,h,k,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="vite7-0更新" tabindex="-1">vite7.0更新 <a class="header-anchor" href="#vite7-0更新" aria-label="Permalink to &quot;vite7.0更新&quot;">​</a></h1><h2 id="_1、官方地址" tabindex="-1">1、官方地址 <a class="header-anchor" href="#_1、官方地址" aria-label="Permalink to &quot;1、官方地址&quot;">​</a></h2><p>还是先附带上我们的官方地址</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//vite官网</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//cn.vitejs.dev/</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vite7.0发布日志</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//cn.vitejs.dev/blog/announcing-vite7.html#vite-7-0-is-out</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vite7.0发布升级日志</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rolldown 官网</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//rolldown.rs/</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vitest3.2 日志版本地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//vitest.dev/blog/vitest-3-2.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rolldown使用地址（迟早的事）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//voidzero.dev/posts/announcing-rolldown-vite</span></span></code></pre></div><h2 id="_2、发布时间2025年6月24日" tabindex="-1">2、发布时间2025年6月24日 <a class="header-anchor" href="#_2、发布时间2025年6月24日" aria-label="Permalink to &quot;2、发布时间2025年6月24日&quot;">​</a></h2><h3 id="🍎官方地址" tabindex="-1">🍎官方地址 <a class="header-anchor" href="#🍎官方地址" aria-label="Permalink to &quot;🍎官方地址&quot;">​</a></h3><p>2025年6月24日，Vite 7.0 如闪电般降临，距离 Vite 6 发布仅过去七个月</p><p>还等什么，那我们这就开始升vite7了</p><h3 id="🍎vite7-版本要求" tabindex="-1">🍎vite7 版本要求 <a class="header-anchor" href="#🍎vite7-版本要求" aria-label="Permalink to &quot;🍎vite7 版本要求&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Node.js 版本 </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20.19</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22.12</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 至于Node18 （官方4月已停止维护）</span></span></code></pre></div><h3 id="🍎node的版本发布地址" tabindex="-1">🍎node的版本发布地址 <a class="header-anchor" href="#🍎node的版本发布地址" aria-label="Permalink to &quot;🍎node的版本发布地址&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//node 发布版本中文地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//nodejs.org/zh-cn/blog/release</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在我写这篇文章的时候的Node版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Node v24.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Current) 2025年7月09日</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Node v22.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LTS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  2025年6月24日</span></span></code></pre></div><h3 id="🍎版本选择" tabindex="-1">🍎版本选择 <a class="header-anchor" href="#🍎版本选择" aria-label="Permalink to &quot;🍎版本选择&quot;">​</a></h3><p>本着一定一定得是一个偶数的原则，我本地选择的版本是<code>Node v22.16.0(LTS)</code></p><p>双数，LTS稳定版本，这是我选择的原则，发布日期当然也好记 是那个你们都忘不了的日子</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Node v22.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LTS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 2025年5月21日</span></span></code></pre></div><p>切换<code>v22.16.0</code></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm install v22.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm use </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22.16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nvm list </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//安装yarn </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g yarn </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ok  开始v22.16.0之旅程吧</span></span></code></pre></div><h2 id="_3、vite7内容" tabindex="-1">3、vite7内容 <a class="header-anchor" href="#_3、vite7内容" aria-label="Permalink to &quot;3、vite7内容&quot;">​</a></h2><h3 id="🍎环境版本升级" tabindex="-1">🍎环境版本升级 <a class="header-anchor" href="#🍎环境版本升级" aria-label="Permalink to &quot;🍎环境版本升级&quot;">​</a></h3><p>看看vite7.0支持的版本和<strong>环境</strong></p><table tabindex="0"><thead><tr><th><strong>vite7.0支持</strong></th><th><strong>版本</strong></th></tr></thead><tbody><tr><td>node环境</td><td>20.19+或22.12+</td></tr><tr><td>浏览器（基线升级为baseline-widely-available）</td><td>支持版本<br>+ 默认浏览器目标从<code>&#39;modules&#39;</code>更改为<code>&#39;baseline-widely-available&#39;</code></td></tr><tr><td>Chrome</td><td>≥107</td></tr><tr><td>Edge</td><td>≥107</td></tr><tr><td>Firefox</td><td>≥104</td></tr><tr><td>Safari</td><td>≥16.0</td></tr></tbody></table><p>✨ 先来看看我们新特性(Features)部分</p><h3 id="🍎工具链升级支持rolldown" tabindex="-1">🍎工具链升级支持Rolldown <a class="header-anchor" href="#🍎工具链升级支持rolldown" aria-label="Permalink to &quot;🍎工具链升级支持Rolldown&quot;">​</a></h3><h4 id="rolldown-rust最强增程啊" tabindex="-1">Rolldown（<strong>Rust最强增程啊</strong>） <a class="header-anchor" href="#rolldown-rust最强增程啊" aria-label="Permalink to &quot;Rolldown（**Rust最强增程啊**）&quot;">​</a></h4><p>最为瞩目的肯定是我们的<strong>Rolldown，vite7</strong>打包器<strong>可以使用Rolldown</strong>（替代 Rollup）**，**项目构建速度飙升</p><p>之前一直心心念念，没想到这就来了？</p><p>no，需要注意<code>这次rolldown 并没有内置在 vite 7 中</code>，但是可以通过<code>rolldown-vite</code>包可替代默认的vite包</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //rolldown解决Vite 的架构痛点</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  esbuild：用于开发阶段的依赖预打包、TypeScript</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 转换和代码压缩</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Rollup：用于生产环境构建，支持 Rollup 兼容的插件系统</span></span></code></pre></div><h4 id="rolldown-vite" tabindex="-1">rolldown-vite <a class="header-anchor" href="#rolldown-vite" aria-label="Permalink to &quot;rolldown-vite&quot;">​</a></h4><p>vue项目只需要调整package.json即可，调整那个Vite没错</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npm:rolldown-vite@latest&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>其他的可以覆盖，具体可以查看官方上面那个地址</p><h4 id="预处理器构建解析" tabindex="-1">预处理器构建解析 <a class="header-anchor" href="#预处理器构建解析" aria-label="Permalink to &quot;预处理器构建解析&quot;">​</a></h4><p>预处理器配置在构建时解析（<code>resolve environments plugins at config time</code>）</p><p>用过svelet的相信都对于它的构建速度甚为着迷，vue也一直想着力与构建速度的优化，这不，也来了</p><p><code>夸--尤大大真是你想到啥立马给你来啥</code></p><p>解释：</p><p>Vite 将在构建过程开始时解析和配置所需的环境变量和插件，而不是在运行时动态解析。</p><p>也就是在构建时，所有与环境相关的插件和配置都会被提前加载和解析，提高构建效率也减少运行时的延迟。</p><p>比如：</p><ol><li><strong>更高的构建效率</strong>：在构建过程中，所有的环境和插件配置都已被解析和确定，避免每次构建时重复计算。</li><li><strong>更一致的构建行为</strong>：所有的环境和插件配置都提前处理过，构建结果完全一致，不会受到运行时环境变化的影响。</li><li><strong>便于调试和优化</strong>：在构建阶段处理这些配置和插件，更容易地发现配置错误或不兼容的插件，减少了运行时的错误。</li></ol><h3 id="🍎配置增强" tabindex="-1">🍎<strong>配置增强</strong> <a class="header-anchor" href="#🍎配置增强" aria-label="Permalink to &quot;🍎**配置增强**&quot;">​</a></h3><h4 id="buildapp-钩子构建入口统一" tabindex="-1"><code>buildApp</code> 钩子构建入口统一 <a class="header-anchor" href="#buildapp-钩子构建入口统一" aria-label="Permalink to &quot;\`buildApp\` 钩子构建入口统一&quot;">​</a></h4><p>引入了 <code>buildApp</code> 钩子统一处理构建入口的钩子。</p><p>通过buildApp钩子可以在构建过程中插入自己的逻辑，控制构建过程中的各种操作，比如调整构建配置、优化插件、监控构建过程等，给了我们更多控制权限</p><p><strong>好处</strong>：统一构建入口，高灵活性、高配置性，简化构建流程</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  builder: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    buildApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 你的骚操作 */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="vite-createserver" tabindex="-1"><code>vite.createServer()</code> <a class="header-anchor" href="#vite-createserver" aria-label="Permalink to &quot;\`vite.createServer()\`&quot;">​</a></h4><p><code>vite.createServer()</code>可以利用它传递已解析的配置</p><p>能够帮助我们在创建 Vite 开发服务器实例时，传递一个已经解析过的最终配置对象，直接跳过让 Vite 在启动时自动解析配置这一步。</p><p>也就是我们可以在开发环境中更加灵活地控制 Vite 的配置，避免在不同生命周期中配置反复解析。</p><h4 id="this-meta-viteversion版本" tabindex="-1">this.meta.viteVersion版本 <a class="header-anchor" href="#this-meta-viteversion版本" aria-label="Permalink to &quot;this.meta.viteVersion版本&quot;">​</a></h4><p><strong>暴露 <strong><code>**this.meta.viteVersion**</code></strong> 获取当前 Vite 版本，那是不是我们自己写的插件就可以用它来兼容以后不同的vite版本呢</strong></p><p><strong>插件也更加灵活了</strong></p><h3 id="🍎多框架合作" tabindex="-1">🍎多框架合作 <a class="header-anchor" href="#🍎多框架合作" aria-label="Permalink to &quot;🍎多框架合作&quot;">​</a></h3><h4 id="自动化测试vitest深度集合" tabindex="-1">自动化测试Vitest深度集合 <a class="header-anchor" href="#自动化测试vitest深度集合" aria-label="Permalink to &quot;自动化测试Vitest深度集合&quot;">​</a></h4><p>与测试工具Vitest 3.2+无缝集成，不用在构建与测试间反复了</p><p>那，是不是你不测试再也没有任何理由不学<code>Vitest 3.2+</code>了</p><h4 id="vite-devtools增强" tabindex="-1">Vite DevTools增强 <a class="header-anchor" href="#vite-devtools增强" aria-label="Permalink to &quot;Vite DevTools增强&quot;">​</a></h4><p>在vite领域的广度进行扩充了</p><p>通过VoidZero与NuxtLabs合作开发</p><p>为所有基于Vite的项目和框架提供更深入的调试与分析功能</p><h3 id="🍎保留vite6实验性environment-api" tabindex="-1">🍎保留Vite6实验性Environment API <a class="header-anchor" href="#🍎保留vite6实验性environment-api" aria-label="Permalink to &quot;🍎保留Vite6实验性Environment API&quot;">​</a></h3><p>上面的buildApp就是其中的一种</p><hr><h3 id="🍎废弃功能移除" tabindex="-1">🍎废弃功能移除 <a class="header-anchor" href="#🍎废弃功能移除" aria-label="Permalink to &quot;🍎废弃功能移除&quot;">​</a></h3><h4 id="移除了sass的旧版api支持" tabindex="-1">移除了Sass的旧版API支持 <a class="header-anchor" href="#移除了sass的旧版api支持" aria-label="Permalink to &quot;移除了Sass的旧版API支持&quot;">​</a></h4><h4 id="移除了splitvendorchunkplugin" tabindex="-1">移除了<code>splitVendorChunkPlugin</code> <a class="header-anchor" href="#移除了splitvendorchunkplugin" aria-label="Permalink to &quot;移除了\`splitVendorChunkPlugin\`&quot;">​</a></h4><hr><h2 id="采用vite7构建项目" tabindex="-1">采用vite7构建项目 <a class="header-anchor" href="#采用vite7构建项目" aria-label="Permalink to &quot;采用vite7构建项目&quot;">​</a></h2><p>接下来就使用<code>22.16.0</code>版本开始构建我们的vite7版本吧</p><p>整个构建变更一览</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rolldown 用于构建（之前使用 Rollup）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rolldown 用于 optimizer（之前使用 esbuild）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rolldown 处理 CommonJS 支持（之前使用 @rollup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">commonjs）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Oxc 用于语法降级（之前使用 esbuild）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lightning </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 默认用于 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CSS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 压缩（之前使用 esbuild）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Oxc minifier 默认用于 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 压缩（之前使用 esbuild）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rolldown 用于打包配置（之前使用 esbuild）</span></span></code></pre></div><h3 id="🍎创建项目" tabindex="-1">🍎创建项目 <a class="header-anchor" href="#🍎创建项目" aria-label="Permalink to &quot;🍎创建项目&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn create vite NexusVuePro </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template vue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用vue-ts的模板进行创建（我采用的这个）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn create vite@latest NexusVuePro </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template vue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ts</span></span></code></pre></div><p>这个时候我们可以看到官方给我们的提示，vite已经采用的最新vite7.0了</p><p>大概4秒钟左右已经完成了</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">success Installed </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;create-vite@7.0.1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> with</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> binaries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vite</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cva</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Done </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 4.46s.</span></span></code></pre></div><p>看看我们的配置文件,ts版本的和js版本的有些依赖不同以外，其他没什么区别</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 采用vue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nexusvuepro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;private&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite preview&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^3.5.17&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@vitejs/plugin-vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^6.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^7.0.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 采用vue-ts</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nexusvuepro&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;private&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue-tsc -b &amp;&amp; vite build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite preview&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^3.5.17&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@vitejs/plugin-vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^6.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@vue/tsconfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^0.7.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;typescript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~5.8.3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^7.0.3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vue-tsc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^2.2.12&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="🍎运行打包" tabindex="-1">🍎运行打包 <a class="header-anchor" href="#🍎运行打包" aria-label="Permalink to &quot;🍎运行打包&quot;">​</a></h3><p>运行打包一下，整个构建3秒多完成</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn build</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Done in 3.96s.</span></span></code></pre></div><h3 id="🍎切换rolldown-vite打包测试" tabindex="-1">🍎切换rolldown-vite打包测试 <a class="header-anchor" href="#🍎切换rolldown-vite打包测试" aria-label="Permalink to &quot;🍎切换rolldown-vite打包测试&quot;">​</a></h3><h4 id="vue3-项目使用-开源-成功" tabindex="-1">vue3 项目使用(开源-成功) <a class="header-anchor" href="#vue3-项目使用-开源-成功" aria-label="Permalink to &quot;vue3 项目使用(开源-成功)&quot;">​</a></h4><p>这里我们对比了vitepress，vue3项目还没来得及对比。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^7.0.3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 直接替换成下面这个就行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npm:rolldown-vite@latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 替换以后</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//第一次构建</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Done </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 3.71s.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//第一次打包构建</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Done </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1.37s.</span></span></code></pre></div><h4 id="vitepress使用-博客-失败" tabindex="-1">vitepress使用(博客-失败) <a class="header-anchor" href="#vitepress使用-博客-失败" aria-label="Permalink to &quot;vitepress使用(博客-失败)&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vitepress使用 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;resolutions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npm:rolldown-vite@latest&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vitepress现在我的项目打包：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">build complete </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 43.57s.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Done </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 44.12s.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//切换以后 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">暂使用失败</span></span></code></pre></div><p>替换以后报错如下</p><p><code>transformWithEsbuild</code>在最新的vite7之中已经移除了</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">build </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Failed to load </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`transformWithEsbuild\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">. It is deprecated and it now requires esbuild to be installed separately. If you are a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> author, please migrate to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`transformWithOxc\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instead.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Failed to load </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`transformWithEsbuild\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">. It is deprecated and it now requires esbuild to be installed separately. If you are a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> author, please migrate to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`transformWithOxc\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instead.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">transformWithEsbuild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (file:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">///D:/LTB-2025/note/nexusnote/node_modules/vite/dist/node/chunks/dep-R2BQz-iD.js:4132:9)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at async file:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">///D:/LTB-2025/note/nexusnote/node_modules/vitepress/dist/node/chunk-Zsoi3j4v.js:49524:24</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at async </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (index </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">renderHead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (file:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">///D:/LTB-2025/note/nexusnote/node_modules/vitepress/dist/node/chunk-Zsoi3j4v.js:49519:16)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">renderPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (file:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">///D:/LTB-2025/note/nexusnote/node_modules/vitepress/dist/node/chunk-Zsoi3j4v.js:49475:7)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at async pMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">concurrency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (file:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">///D:/LTB-2025/note/nexusnote/node_modules/vitepress/dist/node/chunk-Zsoi3j4v.js:49624:11)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    at async file:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">///D:/LTB-2025/note/nexusnote/node_modules/vitepress/dist/node/chunk-Zsoi3j4v.js:4505:20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error Command failed with exit code </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">info Visit https:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//yarnpkg.com/en/docs/cli/run for documentation about this command.</span></span></code></pre></div><p>transformWithEsbuild作用</p><p>使用 <strong>esbuild</strong> 进行自定义的代码转换</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// VITE6 旧的写法 </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { transformWithEsbuild } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">transformWithEsbuild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(code, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myfile.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { loader: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">transformedCode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(transformedCode);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>这里也不建议朋友们使用，暂时等等吧。也可能我失败是别的原因，有成功的也可以留言或者艾特我啊！！</p>`,97)]))}const g=i(l,[["render",e]]);export{o as __pageData,g as default};
