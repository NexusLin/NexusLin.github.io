import{_ as s,D as t,c,j as e,I as l,w as r,a as o,a4 as n,o as g}from"./chunks/framework.DvHWMJgD.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/LeetCode/leetcode02回文数判断.md","filePath":"src/LeetCode/leetcode02回文数判断.md"}'),d={name:"src/LeetCode/leetcode02回文数判断.md"},b={id:"_2、简易2–回文数判断",tabindex:"-1"},i=e("a",{class:"header-anchor",href:"#_2、简易2–回文数判断","aria-label":'Permalink to "<font style="color:rgb(79, 79, 79);">2、简易2–回文数判断</font>"'},"​",-1),p={id:"_1-题目要求判断回文数",tabindex:"-1"},_=e("a",{class:"header-anchor",href:"#_1-题目要求判断回文数","aria-label":'Permalink to "<font style="color:rgb(79, 79, 79);">① 题目要求判断回文数</font>"'},"​",-1),u={id:"_2-第一种解法-翻转字符串法",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#_2-第一种解法-翻转字符串法","aria-label":'Permalink to "<font style="color:rgb(79, 79, 79);">② 第一种解法-翻转字符串法</font>"'},"​",-1),y=n('<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>return x.toString()===x.toString().split(&#39;&#39;).reverse().join(&#39;&#39;);</span></span></code></pre></div>',1),h=e("hr",null,null,-1),k=e("hr",null,null,-1),v={id:"_2-第二种解法-双指针遍历法",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#_2-第二种解法-双指针遍历法","aria-label":'Permalink to "<font style="color:rgb(79, 79, 79);">② 第二种解法-双指针遍历法</font>"'},"​",-1),x=n(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Math.floor()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>返回小于或等于一个给定数字的最大整数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>*/</span></span>
<span class="line"><span>如果我们测试的案例是121 </span></span>
<span class="line"><span>var isPalindrome = function(x) {</span></span>
<span class="line"><span>     var sel=x.toString();</span></span>
<span class="line"><span>     console.log(sel); //121</span></span>
<span class="line"><span> var n=Math.floor(sel.length/2); // 1.5取整数为1 </span></span>
<span class="line"><span> console.log(n); //输出1</span></span>
<span class="line"><span> for(var i=0;i&lt;n;i++){ </span></span>
<span class="line"><span>     console.log(sel[i]);  // 121 的第一个位置下标为o的是1 </span></span>
<span class="line"><span>     console.log(sel.length-1-i);  // 长度3-1-0=2  i为0小于n为1时候，所以此处i为0 </span></span>
<span class="line"><span>     console.log(sel[sel.length-1-i]);  // 1 //sel[2]=1  // 0,1,2 //第三位为1   </span></span>
<span class="line"><span>       if(sel[i]!=sel[sel.length-1-i]) return false;</span></span>
<span class="line"><span>    }return true;</span></span>
<span class="line"><span>};</span></span></code></pre></div>`,1);function S(C,T,j,P,A,V){const a=t("font");return g(),c("div",null,[e("h2",b,[l(a,{style:{color:"rgb(79, 79, 79)"}},{default:r(()=>[o("2、简易2–回文数判断")]),_:1}),o(),i]),e("h3",p,[l(a,{style:{color:"rgb(79, 79, 79)"}},{default:r(()=>[o("① 题目要求判断回文数")]),_:1}),o(),_]),l(a,{style:{color:"rgb(77, 77, 77)"}},{default:r(()=>[o("给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false")]),_:1}),l(a,{style:{color:"rgb(77, 77, 77)"}},{default:r(()=>[o("回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。")]),_:1}),e("p",null,[e("strong",null,[l(a,{style:{color:"rgb(77, 77, 77)"}},{default:r(()=>[o("例如，121 是回文，而 123 不是。")]),_:1})])]),e("h3",u,[l(a,{style:{color:"rgb(79, 79, 79)"}},{default:r(()=>[o("② 第一种解法-翻转字符串法")]),_:1}),o(),f]),l(a,{style:{color:"rgb(77, 77, 77)"}},{default:r(()=>[o("题解只有简单的一句")]),_:1}),y,e("p",null,[e("strong",null,[l(a,{style:{color:"rgb(77, 77, 77)"}},{default:r(()=>[o("理解代码")]),_:1})])]),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("x.toString() ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("x为 123456就是 => 123456 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("x.toString().split(‘’) 就是数组 [‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’] ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("reverse()函数颠倒就是 [‘6’, ‘5’, ‘4’, ‘3’, ‘2’, ‘1’] ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("再用join()函数转化为字符串 就是654321")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("作用： ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("————————————————————————————————— ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("toString()方法可以根据所传递的参数把数值转换为对应进制的数字字符串 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("例如：var a = 32; ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("console.log(a.toString(2)); //返回字符串100000 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("console.log(a.toString(4)); //返回字符串200 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("—————————————————————————————— ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("split()把一个字符串分割成字符串数组 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("例如 【1】var str=“How are you doing today?”; ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o('var n=str.split(" “); // 此处有空格 ')]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("n输出的值：How,are,you,doing,today? ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("【2】把空字符串 (”“) 用作 separator，那么 stringObject 中的每个字符之间都会被分割 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("var str=“How are you doing today?”; ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o('var n=str.split(”"); ')]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("n输出的值：H,o,w, ,a,r,e, ,y,o,u, ,d,o,i,n,g, ,t,o,d,a,y,? ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("—————————————————————————— ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("join() 将数组元素转换为字符串 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("例如：【1】 ar fruits = [“Banana”, “Orange”, “Apple”, “Mango”]; ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("var energy = fruits.join(); ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("输出的值: Banana,Orange,Apple,Mango")]),_:1}),h,l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("【2】arr.join() // 返回的是⼀个字符串,如果数组为空则返回一个空字符串 ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o("var a = [‘a’, ‘b’, ‘c’]; ")]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o('var v1 = a.join(); // v1的值变为"a,b,c" ')]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o('var v2= a.join(‘,’); // v2的值变为"a,b,c" ')]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o('var v3 = a.join(‘+’); // v3的值变为"a+b+d" ')]),_:1}),l(a,{style:{color:"rgb(85, 86, 102)","background-color":"rgb(238, 240, 244)"}},{default:r(()=>[o('var v4 = a.join(‘’); // v4的值变为"abc"')]),_:1}),k,e("h3",v,[l(a,{style:{color:"rgb(79, 79, 79)"}},{default:r(()=>[o("② 第二种解法-双指针遍历法")]),_:1}),o(),m]),x,l(a,{style:{color:"rgb(77, 77, 77)"}},{default:r(()=>[o("最后成功！")]),_:1})])}const B=s(d,[["render",S]]);export{w as __pageData,B as default};
