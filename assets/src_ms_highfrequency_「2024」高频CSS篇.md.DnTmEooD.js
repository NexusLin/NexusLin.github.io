import{_ as s,n as a,q as i,t}from"./chunks/theme-components.DDZ15eKn.js";import"./chunks/search-index.B-gvvmFQ.js";const n=JSON.parse('{"title":"「2024」高频前端面试题汇总之CSS篇（含答案）","description":"","frontmatter":{},"headers":[],"relativePath":"src/ms/highfrequency/「2024」高频CSS篇.md","filePath":"src/ms/highfrequency/「2024」高频CSS篇.md","lastUpdated":1744279005000}');const e=s({name:"src/ms/highfrequency/「2024」高频CSS篇.md"},[["render",function(s,n,e,d,p,l){return i(),a("div",null,n[0]||(n[0]=[t('<h1 id="「2024」高频前端面试题汇总之css篇-含答案" tabindex="-1">「2024」高频前端面试题汇总之CSS篇（含答案） <a class="header-anchor" href="#「2024」高频前端面试题汇总之css篇-含答案" aria-label="Permalink to &quot;「2024」高频前端面试题汇总之CSS篇（含答案）&quot;">​</a></h1><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>calc, support, media各自的含义及用法</span></span>\n<span class="line"><span> css水平、垂直居中的写法，请至少写出4种</span></span>\n<span class="line"><span> 1rem、1em、1vh、1px各自代表的含义</span></span>\n<span class="line"><span> 如何画一条0.5px的直线</span></span>\n<span class="line"><span> 盒模型</span></span>\n<span class="line"><span> 如何画一个三角形</span></span>\n<span class="line"><span> CSS选择器及其优先级有哪些</span></span>\n<span class="line"><span> css的版本有哪些</span></span></code></pre></div><h2 id="_1、calc-support-media各自的含义及用法" tabindex="-1">1、calc, support, media各自的含义及用法 <a class="header-anchor" href="#_1、calc-support-media各自的含义及用法" aria-label="Permalink to &quot;1、calc, support, media各自的含义及用法&quot;">​</a></h2><p><code>calc()</code> 函数用于动态计算长度值。 calc()函数支持<code>&quot;+&quot;, &quot;-&quot;, &quot;*&quot;, &quot;/&quot;</code>运算；</p><p>@support主要是用于检测浏览器是否支持CSS的某个属性，其实就是条件判断，如果支持某个属性，你可以写一套样式，如果不支持某个属性，你也可以提供另外一套样式作为替补。 @media 查询，你可以针对不同的媒体类型定义不同的样式。</p><h2 id="_2、css水平、垂直居中的写法-请至少写出4种" tabindex="-1">2、css水平、垂直居中的写法，请至少写出4种 <a class="header-anchor" href="#_2、css水平、垂直居中的写法-请至少写出4种" aria-label="Permalink to &quot;2、css水平、垂直居中的写法，请至少写出4种&quot;">​</a></h2><p>水平居中</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">行内元素</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: center</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">块级元素</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:absolute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%+</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">translateX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:flex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> justify</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: center</span></span></code></pre></div><p>垂直居中</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置line-height 等于height</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">position：absolute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%+</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">translateY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:flex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> align</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: center</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cell </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vertical</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: middle;</span></span></code></pre></div><h2 id="_3、1rem、1em、1vh、1px各自代表的含义" tabindex="-1">3、1rem、1em、1vh、1px各自代表的含义？ <a class="header-anchor" href="#_3、1rem、1em、1vh、1px各自代表的含义" aria-label="Permalink to &quot;3、1rem、1em、1vh、1px各自代表的含义？&quot;">​</a></h2><p>rem rem是全部的长度都相对于根元素<code>&lt;html&gt;</code>元素。通常做法是给html元素设置一个字体大小，然后其他元素的长度单位就为rem。</p><p>em 子元素字体大小的em是相对于父元素字体大小 元素的width/height/padding/margin用em的话是相对于该元素的font-size</p><p>vw/vh 全称是 Viewport Width 和 Viewport Height，视窗的宽度和高度，相当于 屏幕宽度和高度的 1%，不过，处理宽度的时候%单位更合适，处理高度的 话 vh 单位更好。</p><p>px px像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的。</p><p>一般电脑的分辨率有<code>{1920*1024}</code>等不同的分辨率,<code>1920*1024</code>前者是屏幕宽度总共有1920个像素,后者则是高度为1024个像素</p><h2 id="_4、如何画一条0-5px的直线" tabindex="-1">4、如何画一条0.5px的直线 <a class="header-anchor" href="#_4、如何画一条0-5px的直线" aria-label="Permalink to &quot;4、如何画一条0.5px的直线&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">height: 1px;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform: scale(0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="_5、盒模型" tabindex="-1">5、盒模型 <a class="header-anchor" href="#_5、盒模型" aria-label="Permalink to &quot;5、盒模型&quot;">​</a></h2><ul><li>由里向外content,padding,border,margin</li><li>在IE盒子模型中，width表示content+padding+border这三个部分的宽度</li><li>在标准的盒子模型中，width指content部分的宽度</li><li>box-sizing的使用</li><li>box-sizing: border-box 是IE盒子模型</li><li>box-sizing: content-box 是W3C盒子模型</li><li>box-sizing的默认属性是content-box</li></ul><h2 id="_6、如何画一个三角形" tabindex="-1">6、如何画一个三角形 <a class="header-anchor" href="#_6、如何画一个三角形" aria-label="Permalink to &quot;6、如何画一个三角形&quot;">​</a></h2><p>【延展】 transparent属性用来指定全透明色彩 transparent是全透明黑色(black)的速记法，即一个类似rgba(0,0,0,0)这样的值。在CSS1中，transparent被用来作为background-color的一个参数值，用于表示背景透明。</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.a{</span></span>\n<span class="line"><span>    width: 0;</span></span>\n<span class="line"><span>    height: 0;</span></span>\n<span class="line"><span>    border-width: 100px;</span></span>\n<span class="line"><span>    border-style: solid;</span></span>\n<span class="line"><span>    border-color: transparent #0099CC transparent transparent;</span></span>\n<span class="line"><span>    transform: rotate(90deg); /*顺时针旋转90°*/</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>&lt;div class=&quot;a&quot;&gt;&lt;/div&gt;</span></span></code></pre></div><h2 id="_7、css选择器及其优先级有哪些" tabindex="-1">7、CSS选择器及其优先级有哪些 <a class="header-anchor" href="#_7、css选择器及其优先级有哪些" aria-label="Permalink to &quot;7、CSS选择器及其优先级有哪些&quot;">​</a></h2><p>下面是总结的一些CSS中选择器类型的使用和应用样式的优先级排序；</p><table tabindex="0"><thead><tr><th>类型</th><th>选择器示例</th><th>包含的具体选择器</th><th>优先级</th></tr></thead><tbody><tr><td>!important</td><td><code>color: red !important;</code></td><td>N/A</td><td>最高</td></tr><tr><td>行内样式</td><td><code>&lt;div style=&quot;color: blue;&quot;&gt;</code></td><td>N/A</td><td>第二</td></tr><tr><td>ID选择器</td><td><code>#header { ... }</code></td><td><code>#header</code></td><td>第三</td></tr><tr><td>类选择器</td><td><code>.button { ... }</code></td><td><code>.button</code><br>, <code>.primary</code><br>, <code>.secondary</code><br>, 等等</td><td>第四</td></tr><tr><td>属性选择器</td><td><code>[type=&quot;text&quot;] { ... }</code></td><td><code>[type=&quot;text&quot;]</code><br>, <code>[type=&quot;password&quot;]</code><br>, 等等</td><td>第四</td></tr><tr><td>伪类选择器</td><td><code>:hover { ... }</code></td><td><code>:hover</code><br>, <code>:focus</code><br>, <code>:active</code><br>, 等等</td><td>第四</td></tr><tr><td>伪元素选择器</td><td><code>::before { ... }</code></td><td><code>::before</code><br>, <code>::after</code><br>, <code>::first-line</code><br>, 等等</td><td>第四</td></tr><tr><td>元素选择器</td><td><code>p { ... }</code></td><td><code>p</code><br>, <code>h1</code><br>, <code>div</code><br>, <code>span</code><br>, 等等</td><td>第五</td></tr><tr><td>通用选择器</td><td><code>* { ... }</code></td><td><code>*</code></td><td>第六</td></tr><tr><td>相邻兄弟选择器</td><td><code>h1 + p { ... }</code></td><td><code>h1 + p</code><br>, <code>ul + p</code><br>, 等等</td><td>第六</td></tr><tr><td>子元素选择器</td><td><code>ul &gt; li { ... }</code></td><td><code>ul &gt; li</code><br>, <code>nav &gt; ul &gt; li</code><br>, 等等</td><td>第六</td></tr><tr><td>后代选择器</td><td><code>div p { ... }</code></td><td><code>div p</code><br>, <code>section div p</code><br>, 等等</td><td>第六</td></tr><tr><td>否定伪类</td><td><code>:not(.button) { ... }</code></td><td><code>:not(.button)</code><br>, <code>:not(:hover)</code><br>, 等等</td><td>第六</td></tr></tbody></table><h2 id="_8、css的版本有哪些-你了解有哪些变化吗" tabindex="-1">8、css的版本有哪些，你了解有哪些变化吗 <a class="header-anchor" href="#_8、css的版本有哪些-你了解有哪些变化吗" aria-label="Permalink to &quot;8、css的版本有哪些，你了解有哪些变化吗&quot;">​</a></h2><p>CSS（层叠样式表）是一种用于描述文档样式的样式表语言，主要的CSS版本和变化有：</p><ol><li><strong>CSS1</strong>： <ul><li>发布于1996年12月。</li><li>第一个CSS版本，引入基本的样式表功能，如颜色、字体、背景等。</li></ul></li><li><strong>CSS2</strong>： <ul><li>分为CSS2.1和CSS2.0，发布于1998年。</li><li>引入了定位、浮动、清除浮动、绝对定位等布局特性。</li></ul></li><li><strong>CSS3</strong>：</li></ol><p>这里需要注意：CSS3 的概念开始于 CSS2.1 之后，即2000年左右，指在 CSS2.1 之后不断增加和改进的新特性和模块的总称，而非一个特定的单一版本</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-   由于整合的不连续性，不应把它看作独立版本。取而代之，它被看作是“模块化”、“持续增量”的过程。</span></span>\n<span class="line"><span>-   引入了大量新特性和模块，例如多列布局、媒体查询、渐变、阴影、动画、转换等。</span></span></code></pre></div>',31)]))}]]);export{n as __pageData,e as default};
