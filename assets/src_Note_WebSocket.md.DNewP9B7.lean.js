import{_ as t,c as s,o,j as e,a as c}from"./chunks/framework.DvHWMJgD.js";const T=JSON.parse('{"title":"WebSocket","description":"","frontmatter":{"outline":[1,3]},"headers":[],"relativePath":"src/Note/WebSocket.md","filePath":"src/Note/WebSocket.md"}'),a={name:"src/Note/WebSocket.md"},n=e("h1",{id:"websocket",tabindex:"-1"},[c("WebSocket "),e("a",{class:"header-anchor",href:"#websocket","aria-label":'Permalink to "WebSocket"'},"​")],-1),r=e("p",null,"ws 和 wss 是 WebSocket 协议的两种不同形式，主要区别在于安全性：",-1),i=e("ol",null,[e("li",null,"ws (WebSocket) 协议：不安全的 WebSocket 连接。 加密：数据以明文形式传输，不经过加密。 使用场景：适用于本地开发或者在信任的网络环境中使用，比如局域网内的设备通信。"),e("li",null,"wss (WebSocket Secure) 协议：安全的 WebSocket 连接。 加密：使用 SSL/TLS 加密数据传输，确保数据在传输过程中不被窃听或篡改。 使用场景：适用于生产环境，尤其是当涉及敏感信息时，必须使用 wss。 总结 使用 ws 时，数据传输不安全；使用 wss 时，数据传输是加密的，更加安全。 大多数现代浏览器不允许从 HTTPS 页面发起 ws 连接，因此推荐在需要安全性时使用 wss。")],-1),l=e("p",null,"WebRTC 流媒体服务器",-1),d=e("p",null,"使用WebRTC 流媒体服务器在线监测视频",-1),_=e("p",null,"WebRTCStreamer 一直报错Cannot read properties of undefined (reading 'getUserMedia')",-1),b=e("p",null,"navigator.mediaDevices.getUserMedia(constraints)",-1),S=[n,r,i,l,d,_,b];function p(k,h,u,W,m,f){return o(),s("div",null,S)}const N=t(a,[["render",p]]);export{T as __pageData,N as default};
