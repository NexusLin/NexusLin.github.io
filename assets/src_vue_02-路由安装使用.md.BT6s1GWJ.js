import{_ as o,D as p,c as r,j as l,I as n,w as e,a as s,a4 as t,o as c}from"./chunks/framework.DvHWMJgD.js";const Cs=JSON.parse('{"title":"❤路由安装使用和拦截","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/vue/02-路由安装使用.md","filePath":"src/vue/02-路由安装使用.md"}'),i={name:"src/vue/02-路由安装使用.md"},d=l("h1",{id:"❤路由安装使用和拦截",tabindex:"-1"},[s("❤路由安装使用和拦截 "),l("a",{class:"header-anchor",href:"#❤路由安装使用和拦截","aria-label":'Permalink to "❤路由安装使用和拦截"'},"​")],-1),_={id:"_1、配置后台主页admin和pc主页pc",tabindex:"-1"},g=l("a",{class:"header-anchor",href:"#_1、配置后台主页admin和pc主页pc","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">1、配置后台主页admin和pc主页pc</font>"'},"​",-1),b={id:"_1-添加admin和pc主页面路由",tabindex:"-1"},u=l("a",{class:"header-anchor",href:"#_1-添加admin和pc主页面路由","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（1）添加admin和PC主页面路由</font>"'},"​",-1),h=l("p",null,[l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810914658-eca3ace0-2554-4865-b073-446ad188e502.png",alt:""})],-1),f={id:"_2-添加admin和pc页面",tabindex:"-1"},m=l("a",{class:"header-anchor",href:"#_2-添加admin和pc页面","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（2）添加admin和PC页面</font>"'},"​",-1),y=l("p",null,[l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810914485-efdf3957-40de-4312-8b6a-b0f0b4cf19ba.png",alt:""})],-1),k={id:"_3-主页面加入按钮",tabindex:"-1"},P=l("a",{class:"header-anchor",href:"#_3-主页面加入按钮","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（3）主页面加入按钮</font>"'},"​",-1),v=t(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>js&lt;div class=&quot;about&quot;&gt;</span></span>
<span class="line"><span>    &lt;el-button type=&quot;primary&quot;&gt;我是主页&lt;/el-button&gt;</span></span>
<span class="line"><span>    &lt;el-button type=&quot;primary&quot; @click=&quot;totiao(&#39;pc&#39;)&quot;&gt;PC&lt;/el-button&gt;</span></span>
<span class="line"><span>    &lt;el-button type=&quot;primary&quot; @click=&quot;totiao(&#39;admin&#39;)&quot;&gt;admin&lt;/el-button&gt;</span></span>
<span class="line"><span>  &lt;/div&gt;</span></span></code></pre></div>`,1),T={id:"_4-使用vue3语法糖-导入路由进行跳转",tabindex:"-1"},x=l("a",{class:"header-anchor",href:"#_4-使用vue3语法糖-导入路由进行跳转","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（4）使用vue3语法糖，导入路由进行跳转</font>"'},"​",-1),C=t(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>js&lt;script setup&gt;</span></span>
<span class="line"><span>import {useRouter} from &#39;vue-router&#39;</span></span>
<span class="line"><span>const router=useRouter();</span></span>
<span class="line"><span></span></span>
<span class="line"><span>function totiao(row){</span></span>
<span class="line"><span>  router.push(row);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre></div>`,1),S=l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810914464-5d4eeace-2eda-4fec-a20e-4276d8b35f1f.png",alt:""},null,-1),q=l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810914461-406e4710-481b-441b-980e-51ce5f6c4557.png",alt:""},null,-1),A={id:"_2、配置路由拦截",tabindex:"-1"},N=l("a",{class:"header-anchor",href:"#_2、配置路由拦截","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">2、配置路由拦截</font>"'},"​",-1),I={id:"_1-概述",tabindex:"-1"},V=l("a",{class:"header-anchor",href:"#_1-概述","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（1）概述</font>"'},"​",-1),E=l("p",null,[l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810914785-7dbe83ff-b39e-4527-92d8-b5fcde8fdab7.png",alt:""})],-1),w={id:"_2-permission-ts里面配置相对应的规则",tabindex:"-1"},D=l("a",{class:"header-anchor",href:"#_2-permission-ts里面配置相对应的规则","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（2）permission.ts里面配置相对应的规则</font>"'},"​",-1),R=t(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>jsimport router from &#39;@/router&#39;</span></span>
<span class="line"><span>const whiteList = [&#39;/&#39;,&#39;/pc&#39;,&#39;/register&#39;, &#39;/login&#39;, &#39;/about&#39;, &#39;/main&#39;, &#39;/demo&#39;,&#39;admin&#39;]; //定义白名单 </span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 路由守卫</span></span>
<span class="line"><span>router.beforeEach((to, from, next) =&gt; {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 将所有的Pc页面添加进入白名单---未采用</span></span>
<span class="line"><span>    // 1 在免登录白名单--或者有token，直接进入--不检测</span></span>
<span class="line"><span>    // 2 没token验证去的地方</span></span>
<span class="line"><span>    // 3 没token验证--去的地方admin---去login</span></span>
<span class="line"><span>    // 4 没token验证--去的地方pc子页面---PC子页面进入</span></span>
<span class="line"><span>    // 5 其他进入pc主页面</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    if (whiteList.indexOf(to.path) !== -1||localStorage.getItem(&#39;login&#39;)) {</span></span>
<span class="line"><span>        console.log(&#39;白名单或者token账号进入1!&#39;);</span></span>
<span class="line"><span>        next();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    else if(to.name == &#39;admin&#39;){</span></span>
<span class="line"><span>        next(&#39;/login&#39;)  </span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    else if(to.matched.length!=0){</span></span>
<span class="line"><span>          console.log(to.matched.map((item)=&gt;item.name).indexOf(&#39;pc&#39;)!=-1,&#39;循环&#39;);</span></span>
<span class="line"><span>          if(to.matched.map((item)=&gt;item.name).indexOf(&#39;pc&#39;)!=-1){</span></span>
<span class="line"><span>            console.log(&#39;PC子页面进入!&#39;);</span></span>
<span class="line"><span>            next()</span></span>
<span class="line"><span>          }</span></span>
<span class="line"><span>          else{next(&#39;/pc&#39;)}</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    else {</span></span>
<span class="line"><span>     console.log(&#39;其他进入pc主页面5!&#39;);</span></span>
<span class="line"><span>     next(&#39;/pc&#39;)</span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span>router.afterEach(() =&gt; {</span></span>
<span class="line"><span>    console.log(&#39;路由加载完成！&#39;);</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span>export { permission }</span></span></code></pre></div>`,1),j={id:"_3-路由守卫作用-可跳过",tabindex:"-1"},L=l("a",{class:"header-anchor",href:"#_3-路由守卫作用-可跳过","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（3）路由守卫作用（可跳过）</font>"'},"​",-1),O={id:"_4-使用",tabindex:"-1"},$=l("a",{class:"header-anchor",href:"#_4-使用","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（4）使用</font>"'},"​",-1),B=t(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>jsimport * as Permission from &quot;@/utils/permission.ts&quot;;  //路由请求拦截器</span></span>
<span class="line"><span>const app = createApp(App)</span></span>
<span class="line"><span>app.use(Permission)</span></span>
<span class="line"><span>app.mount(&#39;#app&#39;)//挂载</span></span></code></pre></div>`,1),J=l("p",null,[l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810914862-a54ce062-ca2d-4727-ac46-d71037e7eaf0.png",alt:""})],-1),z=l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810915207-47e67f7b-bf3c-47a1-9216-dacbf420a45f.png",alt:""},null,-1),F={id:"_3、权限和路由permission-ts优化",tabindex:"-1"},G=l("a",{class:"header-anchor",href:"#_3、权限和路由permission-ts优化","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">3、权限和路由permission.ts优化</font>"'},"​",-1),H={id:"_1-白名单优化",tabindex:"-1"},K=l("a",{class:"header-anchor",href:"#_1-白名单优化","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（1）白名单优化</font>"'},"​",-1),M=t(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>js</span></span>
<span class="line"><span>const whiteList =[&#39;/pc&#39;, &#39;/about&#39;, &#39;/main&#39;, &#39;/demo&#39;,&#39;admin&#39;,&#39;/jsmap&#39;,&#39;/user&#39;,&#39;/applist&#39;]; //所有白名单校验</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>上面的这种写法我们更改为：</span></span>
<span class="line"><span>const commonList = [&#39;/pc&#39;, &#39;/about&#39;, &#39;/main&#39;, &#39;/demo&#39;,&#39;admin&#39;,&#39;/jsmap&#39;,&#39;/user&#39;,&#39;/applist&#39;]; //自定义定义白名单</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const whiteListpc=[&#39;/register&#39;, &#39;/login&#39;]; //pc白名单</span></span>
<span class="line"><span>const whiteList =[...commonList,...whiteListpc]; //所有白名单校验</span></span></code></pre></div>`,1),Q={id:"_4、进度条nprogress引入",tabindex:"-1"},U=l("a",{class:"header-anchor",href:"#_4、进度条nprogress引入","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">4、进度条NProgress引入：</font>"'},"​",-1),W=l("a",{href:"https://nexuslinnoa.gitee.io/nexusmark?userId=1",target:"_blank",rel:"noreferrer"},"https://nexuslinnoa.gitee.io/nexusmark?userId=1",-1),X={id:"安装",tabindex:"-1"},Y=l("a",{class:"header-anchor",href:"#安装","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">安装</font>"'},"​",-1),Z=t('<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bashyarn add  nprogress</span></span></code></pre></div>',1),ss={id:"引入使用nprogress进度条",tabindex:"-1"},as=l("a",{class:"header-anchor",href:"#引入使用nprogress进度条","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">引入使用NProgress进度条</font>"'},"​",-1),ns=t(`<p><img src="https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810914852-ec0a98e2-0f0e-42a2-8798-d7d15dc5151c.png" alt=""></p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bashimport NProgress from &quot;nprogress&quot;;</span></span>
<span class="line"><span>import &quot;nprogress/nprogress.css&quot;;</span></span>
<span class="line"><span>NProgress.configure({</span></span>
<span class="line"><span>  // 动画方式</span></span>
<span class="line"><span>  easing: &quot;ease&quot;,</span></span>
<span class="line"><span>  // 递增进度条的速度</span></span>
<span class="line"><span>  speed: 500,</span></span>
<span class="line"><span>  // 是否显示加载ico</span></span>
<span class="line"><span>  showSpinner: false,</span></span>
<span class="line"><span>  // 自动递增间隔</span></span>
<span class="line"><span>  trickleSpeed: 200,</span></span>
<span class="line"><span>  // 初始化时的最小百分比</span></span>
<span class="line"><span>  minimum: 0.3</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span>export default NProgress;</span></span></code></pre></div>`,2),es=t(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bashNProgress.start() //使用</span></span>
<span class="line"><span>NProgress.done()  //停止</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>在permission.ts里面进行使用 </span></span>
<span class="line"><span>import NProgress from &quot;@/components/progress&quot;;</span></span>
<span class="line"><span>NProgress.configure({ showSpinner: false }); // 显示右上角螺旋加载提示</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 路由守卫</span></span>
<span class="line"><span>router.beforeEach((to, from, next) =&gt; {</span></span>
<span class="line"><span>    ...</span></span>
<span class="line"><span>    NProgress.start(); //开启进度条</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span>router.afterEach(() =&gt; {</span></span>
<span class="line"><span>    ...</span></span>
<span class="line"><span>    NProgress.done(); //结束进度条</span></span>
<span class="line"><span>});</span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810915092-149670f3-7c92-4716-a13d-e6c85269aaf8.png" alt=""></p>`,2),ls={id:"自定义背景样式和颜色",tabindex:"-1"},ts=l("a",{class:"header-anchor",href:"#自定义背景样式和颜色","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">自定义背景样式和颜色</font>"'},"​",-1),os={id:"_1-assets下新建main-css",tabindex:"-1"},ps=l("a",{class:"header-anchor",href:"#_1-assets下新建main-css","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（1）assets下新建main.css</font>"'},"​",-1),rs={id:"_2-在main-ts里面引入样式main-css",tabindex:"-1"},cs=l("a",{class:"header-anchor",href:"#_2-在main-ts里面引入样式main-css","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（2）在main.ts里面引入样式main.css</font>"'},"​",-1),is=t('<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>jsimport &#39;./assets/main.css&#39; //引入主要样式</span></span></code></pre></div>',1),ds={id:"_3-main-css样式如下",tabindex:"-1"},_s=l("a",{class:"header-anchor",href:"#_3-main-css样式如下","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（3） main.css样式如下</font>"'},"​",-1),gs=t(`<div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>js/*自定义进度条颜色*/</span></span>
<span class="line"><span>#nprogress .bar {   </span></span>
<span class="line"><span>  background:red important;  /*  自定义颜色*/</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,1),bs={id:"_4-效果如下",tabindex:"-1"},us=l("a",{class:"header-anchor",href:"#_4-效果如下","aria-label":'Permalink to "<font style="color:rgb(37, 41, 51);">（4）效果如下</font>"'},"​",-1),hs=l("p",null,[l("img",{src:"https://cdn.nlark.com/yuque/0/2024/png/22435914/1726810915130-af9204c4-1c1a-48b6-87a0-449876328ddc.png",alt:""})],-1);function fs(ms,ys,ks,Ps,vs,Ts){const a=p("font");return c(),r("div",null,[d,l("h2",_,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("1、配置后台主页admin和pc主页pc")]),_:1}),s(),g]),l("h3",b,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（1）添加admin和PC主页面路由")]),_:1}),s(),u]),h,l("h3",f,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（2）添加admin和PC页面")]),_:1}),s(),m]),y,l("h3",k,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（3）主页面加入按钮")]),_:1}),s(),P]),v,l("h3",T,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（4）使用vue3语法糖，导入路由进行跳转")]),_:1}),s(),x]),C,l("p",null,[S,n(a,{style:{color:"rgb(37, 41, 51)"}}),q,n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("PC和admin均可以正常跳转")]),_:1})]),l("h2",A,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("2、配置路由拦截")]),_:1}),s(),N]),l("h3",I,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（1）概述")]),_:1}),s(),V]),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("我们的网页需要用户登录后才可以进行显示，不然将其拦截到登录页面。 登录成功后，前端的 header 加上 token 值。如果 token 值为空，说明未登录")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("在src下新建utils文件夹 定义白名单 设置路由守卫")]),_:1}),E,l("h3",w,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（2）permission.ts里面配置相对应的规则")]),_:1}),s(),D]),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:e(()=>[s("这里我简单的将规则给总结了一下")]),_:1}),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:e(()=>[s("想法")]),_:1}),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("将所有的Pc页面添加进入白名单---未采用")]),_:1}),s("`"),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:e(()=>[s("条件如下")]),_:1}),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:e(()=>[s("1 在免登录白名单--或者有token，直接进入--不检测")]),_:1}),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:e(()=>[s("2 没token验证去的地方")]),_:1}),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:e(()=>[s("3 没token验证--去的地方admin---去login 4 没token验证--去的地方pc子页面---PC子页面进入")]),_:1}),n(a,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:e(()=>[s("5 其他进入pc主页面")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("所以我们的permission.ts 文件里面的内容就如下")]),_:1}),R,l("h3",j,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（3）路由守卫作用（可跳过）")]),_:1}),s(),L]),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("上面代码我们简单写了一个路由守卫，其作用如下:")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("在路由切换前进行权限验证和导航控制,控制路由权限和导航逻辑，根据一定的规则来判断是否允许用户访问某个页面，以及在路由切换时执行相关操作。")]),_:1}),l("ol",null,[l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("首先，通过")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("import")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("语句引入了")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("router")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("实例。")]),_:1})]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("定义了一个")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("whiteList")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("数组，其中包含了一些不需要进行权限验证的路由路径，也就是所谓的白名单。")]),_:1})]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("使用")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("router.beforeEach()")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("方法注册一个全局前置守卫，该守卫会在每次路由切换前被调用。")]),_:1})]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("在守卫函数中，根据一定的逻辑判断来决定是否允许进行路由切换：")]),_:1}),l("ul",null,[l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("如果当前路由路径在白名单中，或者本地存储中存在登录信息（即已经登录），则直接执行")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("next()")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("函数，允许路由切换。")]),_:1})]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s('如果跳转的目标路由是 "admin"，则强制跳转到登录页 "/login"。')]),_:1})]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("如果跳转的目标路由的")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("matched")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s('数组长度不为零（即匹配到了路由配置），则进一步判断是否有名为 "pc" 的子路由：')]),_:1}),l("ul",null,[l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("如果有，则直接执行 ")]),_:1}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("next()")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s(" 函数，允许路由切换。")]),_:1})]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s('如果没有，则强制跳转到 "pc" 页面。')]),_:1})])])]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s('如果以上条件都不满足，说明是其他情况，强制跳转到 "pc" 页面。')]),_:1})])])]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("使用")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("router.afterEach()")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("方法注册一个全局后置钩子，该钩子会在每次路由切换完成后被调用。")]),_:1})]),l("li",null,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("最后通过")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("export")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("导出了一个名为")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("`"),n(a,{style:{color:"rgb(255, 80, 44)","background-color":"rgb(255, 245, 245)"}},{default:e(()=>[s("permission")]),_:1}),s("`"),n(a,{style:{color:"rgb(37, 41, 51)"}}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("的对象（可能是其他代码中引用了该对象）。")]),_:1})])]),l("h3",O,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（4）使用")]),_:1}),s(),$]),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("在根目录的main.ts里面引入和使用")]),_:1}),B,n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("效果： 当我们点击PC,白名单进入")]),_:1}),J,n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("当我们点击admin时候,存在路由拦截，没有token进入login登录界面")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),z,l("h2",F,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("3、权限和路由permission.ts优化")]),_:1}),s(),G]),l("h3",H,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（1）白名单优化")]),_:1}),s(),K]),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("之前在我们的权限之中，我们只要一部分的权限白名单，现在我们将白名单给分开，这样子方便我们在白名单之中进行管理")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("在utils => permission.ts 之中")]),_:1}),M,l("h2",Q,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("4、进度条NProgress引入：")]),_:1}),s(),U]),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("nprogress官网可以去我的这个博客书签里面找")]),_:1}),n(a,{style:{color:"rgb(37, 41, 51)"}}),s("["),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("https://nexuslinnoa.gitee.io/nexusmark?userId=1")]),_:1}),s("]("),W,s(")"),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("使用nprogress实现全局loading进度条")]),_:1}),l("h3",X,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("安装")]),_:1}),s(),Y]),Z,l("h3",ss,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("引入使用NProgress进度条")]),_:1}),s(),as]),n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("在src文件夹新建components文件夹，下面新建progress文件夹引进NProgress")]),_:1}),ns,n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("在permission.ts里面进行使用")]),_:1}),es,l("h3",ls,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("自定义背景样式和颜色")]),_:1}),s(),ts]),l("h4",os,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（1）assets下新建main.css")]),_:1}),s(),ps]),l("h4",rs,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（2）在main.ts里面引入样式main.css")]),_:1}),s(),cs]),is,l("h4",ds,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（3） main.css样式如下")]),_:1}),s(),_s]),gs,l("h4",bs,[n(a,{style:{color:"rgb(37, 41, 51)"}},{default:e(()=>[s("（4）效果如下")]),_:1}),s(),us]),hs])}const Ss=o(i,[["render",fs]]);export{Cs as __pageData,Ss as default};
