import{_ as i,c as a,ag as n,o as t}from"./chunks/framework.wRLzwZz-.js";const l="/rust/rust01.png",o=JSON.parse('{"title":"Rust认识安装","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/rust/01-rust安装.md","filePath":"src/rust/01-rust安装.md"}'),h={name:"src/rust/01-rust安装.md"};function p(e,s,k,r,d,E){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="rust认识安装" tabindex="-1">Rust认识安装 <a class="header-anchor" href="#rust认识安装" aria-label="Permalink to &quot;Rust认识安装&quot;">​</a></h1><h2 id="rust官网" tabindex="-1">Rust官网 <a class="header-anchor" href="#rust官网" aria-label="Permalink to &quot;Rust官网&quot;">​</a></h2><p>Rust 官网:<a href="https://www.rust-lang.org/" target="_blank" rel="noreferrer">https://www.rust-lang.org/</a></p><p>Rust中文官网:<a href="https://www.rust-lang.org/zh-CN/" target="_blank" rel="noreferrer">https://www.rust-lang.org/zh-CN/</a></p><h2 id="windows安装" tabindex="-1">Windows安装 <a class="header-anchor" href="#windows安装" aria-label="Permalink to &quot;Windows安装&quot;">​</a></h2><p>我本地系统是Window10和Window11 的系统，都尝试进行了安装</p><h3 id="前置条件-安装c-环境" tabindex="-1">前置条件：安装C++环境 <a class="header-anchor" href="#前置条件-安装c-环境" aria-label="Permalink to &quot;前置条件：安装C++环境&quot;">​</a></h3><h4 id="👉-下载" tabindex="-1">👉 下载 <a class="header-anchor" href="#👉-下载" aria-label="Permalink to &quot;👉 下载&quot;">​</a></h4><p>rust底层是依赖C环境的，所以先安装C/C++编译环境</p><p>地址：<a href="https://github.com/niXman/mingw-builds-binaries/releases/download/13.2.0-rt_v11-rev0/x86_64-13.2.0-release-posix-seh-ucrt-rt_v11-rev0.7z" target="_blank" rel="noreferrer">https://github.com/niXman/mingw-builds-binaries/releases/download/13.2.0-rt_v11-rev0/x86_64-13.2.0-release-posix-seh-ucrt-rt_v11-rev0.7z</a></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//github.com/niXman/mingw-builds-binaries/releases/download/13.2.0-rt_v11-rev0/x86_64-13.2.0-release-posix-seh-ucrt-rt_v11-rev0.7z</span></span></code></pre></div><h4 id="👉-配置环境变量" tabindex="-1">👉 配置环境变量 <a class="header-anchor" href="#👉-配置环境变量" aria-label="Permalink to &quot;👉 配置环境变量&quot;">​</a></h4><p>下载解压到任意盘根目录，然后把文件夹的bin目录路径配置到系统环境变量path</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 我本地环境地址如下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\anzhuang\\c\\mingw64\\bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\anzhuang\\c\\mingw64\\bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">环境变量地址</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">此电脑</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">属性</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">高级系统设置</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">环境变量</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">系统变量</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path</span></span></code></pre></div><h4 id="👉检测是否成功" tabindex="-1">👉检测是否成功 <a class="header-anchor" href="#👉检测是否成功" aria-label="Permalink to &quot;👉检测是否成功&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gcc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果是安装成功以后会出现以下提示 ‘</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xxx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gcc version </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x86_64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">posix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rev0, Built by MinGW</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Builds project)</span></span></code></pre></div><h3 id="安装rust" tabindex="-1">安装Rust <a class="header-anchor" href="#安装rust" aria-label="Permalink to &quot;安装Rust&quot;">​</a></h3><h4 id="👉-下载-1" tabindex="-1">👉 下载 <a class="header-anchor" href="#👉-下载-1" aria-label="Permalink to &quot;👉 下载&quot;">​</a></h4><p>地址rustup-init.exe（<a href="https://link.zhihu.com/?target=https%3A//static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe" target="_blank" rel="noreferrer">https://link.zhihu.com/?target=https%3A//static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe</a>）</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Window：下载并运行 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">init.exe（</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//link.zhihu.com/?target=https%3A//static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe）</span></span></code></pre></div><p>下载过程会给我们提示以下信息</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rust Visual </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prerequisites</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\uFEFF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rust requires a linker and Windows </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">API</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> libraries but they don</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t seem to b</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">e</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">available.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\uFEFF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">These components can be acquired through a Visual Studio installer.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\uFEFF</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Quick install via the Visual Studio Community installer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(free for individuals, academic uses, and open source).</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\uFEFF</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Manually install the prerequisites</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(for enterprise and advanced users).</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\uFEFF</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Don</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t install the prerequisite</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">s</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(if you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;re targeting the GNU ABI)</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">.</span></span></code></pre></div><p>简单解释一下上面的信息</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rust Visual </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">先决条件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rust需要一个链接器和Windows API库，但它们似乎不是</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">可用。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">这些组件可以通过Visual Studio安装程序获取。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">） 通过Visual Studio社区安装程序快速安装</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（个人、学术用途和开源免费）。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">） 手动安装必备组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（适用于企业和高级用户）。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">） 不安装必备组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（如果你的目标是GNU </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ABI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）。</span></span></code></pre></div><p>如果我们直接是安装过C/C++的环境的，我们直接安装Rust的时候选择3即可（也建议这样子做）</p><h4 id="👉-检测是否成功" tabindex="-1">👉 检测是否成功 <a class="header-anchor" href="#👉-检测是否成功" aria-label="Permalink to &quot;👉 检测是否成功&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustup </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cargo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustup show</span></span></code></pre></div><h4 id="👉-win11系统注意" tabindex="-1">👉 win11系统注意 <a class="header-anchor" href="#👉-win11系统注意" aria-label="Permalink to &quot;👉  win11系统注意&quot;">​</a></h4><h5 id="提示选择" tabindex="-1">提示选择 <a class="header-anchor" href="#提示选择" aria-label="Permalink to &quot;提示选择&quot;">​</a></h5><p>win11 选择3 以后会出现下面信息，大致意思还是让选择版本 （选择 1 标准安装）</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Welcome to Rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This will download and install the official compiler for the Rust</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">programming language, and its </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> manager, Cargo.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rustup metadata and toolchains will be installed into the Rustup</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">home directory, located </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\Users\\admin\\.rustup</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This can be modified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RUSTUP_HOME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> environment variable.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The Cargo home directory is located </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\Users\\admin\\.cargo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This can be modified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CARGO_HOME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> environment variable.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">The cargo, rustc, rustup and other commands will be added to</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s bin directory, located at</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  C</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:\\Users\\admin\\.cargo\\bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This path will then be added to your </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> environment variable by</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">modifying the </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HKEY_CURRENT_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> registry key.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">You can uninstall at any time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rustup self uninstall and</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">these changes will be reverted.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Current installation </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">triple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: x86_64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">windows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msvc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toolchain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (default)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">               profile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modify </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PATH</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Proceed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> standard </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">installation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (default </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> just press enter)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Customize installation</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Cancel installation</span></span></code></pre></div><h5 id="提示" tabindex="-1">提示 <a class="header-anchor" href="#提示" aria-label="Permalink to &quot;提示&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: profile set to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;default&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host triple is x86_64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">windows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msvc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">warning</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Updating existing toolchain, profile choice will be ignored</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: syncing channel updates for </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;stable-x86_64-pc-windows-msvc&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> toolchain set to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;stable-x86_64-pc-windows-msvc&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x86_64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">windows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msvc unchanged </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rustc </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.85</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (4d91de4e4 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2025</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">02</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Rust is installed now. Great</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">To get started you may need to restart your current shell.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This would reload its </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> environment variable to include</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s bin directory (%USERPROFILE%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cargo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">in)</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Press the Enter key to continue.</span></span></code></pre></div><p>就是安装成功了，重新启动cmd命令行即可</p><h3 id="卸载rust" tabindex="-1">卸载Rust <a class="header-anchor" href="#卸载rust" aria-label="Permalink to &quot;卸载Rust&quot;">​</a></h3><p>👉命令卸载</p><p>如果我们是通过 rustup（Rust 的官方安装工具）安装 Rust 的，可以使用 rustup 自带的卸载命令来移除 Rust</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustup self uninstall</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//检测是否卸载成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//查看环境变量是否卸载干净</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在 Windows 上，通过 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;系统属性&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;高级系统设置&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;环境变量&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 来删除 Rust 的路径</span></span></code></pre></div><h2 id="mac安装" tabindex="-1">Mac安装 <a class="header-anchor" href="#mac安装" aria-label="Permalink to &quot;Mac安装&quot;">​</a></h2><h4 id="方式一" tabindex="-1">方式一 <a class="header-anchor" href="#方式一" aria-label="Permalink to &quot;方式一&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">打开这个网站</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//rustup.rs/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">复制一下安装命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">curl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">proto </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;=https&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tlsv1.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sSf </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//sh.rustup.rs | sh</span></span></code></pre></div><h4 id="方式二" tabindex="-1">方式二 <a class="header-anchor" href="#方式二" aria-label="Permalink to &quot;方式二&quot;">​</a></h4><p>安装方式是用brew来安装，几乎都能成功</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">brew install rust</span></span></code></pre></div><h4 id="验证是否安装成功" tabindex="-1">验证是否安装成功 <a class="header-anchor" href="#验证是否安装成功" aria-label="Permalink to &quot;验证是否安装成功&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span></code></pre></div><h3 id="查看文档" tabindex="-1">查看文档 <a class="header-anchor" href="#查看文档" aria-label="Permalink to &quot;查看文档&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rustup doc</span></span></code></pre></div><h4 id="工具安装" tabindex="-1">工具安装 <a class="header-anchor" href="#工具安装" aria-label="Permalink to &quot;工具安装&quot;">​</a></h4><p>使用 VSCode，安装 Rust 插件即可 <img src="`+l+`" alt="image.png"></p><h2 id="rust-hello-world" tabindex="-1"><a href="https://zhuanlan.zhihu.com/p/683484264" target="_blank" rel="noreferrer">Rust - Hello World</a> <a class="header-anchor" href="#rust-hello-world" aria-label="Permalink to &quot;[Rust - Hello World](https://zhuanlan.zhihu.com/p/683484264)&quot;">​</a></h2><h3 id="_1、创建你的第一个-rust-项目" tabindex="-1">1、创建你的第一个 Rust 项目 <a class="header-anchor" href="#_1、创建你的第一个-rust-项目" aria-label="Permalink to &quot;1、创建你的第一个 Rust 项目&quot;">​</a></h3><p>Rust 的文件以 .rs 结尾，我们可以通过 <code>cargo</code> 来创建和管理 Rust 项目。<code>cargo</code> 是 Rust 的构建系统和包管理工具。</p><p>打开终端，运行以下命令来创建一个新的 Rust 项目：</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cargo new rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">learn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd rust</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">learn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">查看项目文件结构：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bash</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hello_world</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├── </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cargo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">toml      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">└── src</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    └── main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rs     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认的源代码文件</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cargo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">toml 是项目的配置文件，管理依赖关系。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rs 是你将编写 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Rust</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 代码的地方</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在 src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rs 文件中，你会看到 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Rust</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 自动生成的代码：</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    println!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello World&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">代码释义：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">● </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 用来定义一个函数，等同于 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Javascript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 中的 function</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">● main 函数，</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Rust</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 可执行文件的入口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">● </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，是一个 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Rust</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> macro</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(宏) 用来输出字符串</span></span></code></pre></div><h3 id="_2、编译运行程序" tabindex="-1">2、编译运行程序 <a class="header-anchor" href="#_2、编译运行程序" aria-label="Permalink to &quot;2、编译运行程序&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">报错</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sudo xcodebuild </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">license</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">错误是因为在 macOS 上，Rust 需要使用 Xcode 提供的工具链来进行编译和链接，而你的系统尚未同意 Xcode 的许可证协议。为了解决这个问题，你需要同意 Xcode 的许可证协议。按照以下步骤操作：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">同意 Xcode 的许可证</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">打开终端并运行以下命令：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bash</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sudo xcodebuild </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">license</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xcode安装部分：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Applications</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Xcode.app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Developer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sudo xcode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">select </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--switch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Applications</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Xcode.app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Contents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Developer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">再次  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cargo run 已经成功解决</span></span></code></pre></div><h3 id="_3、运行代码" tabindex="-1">3、运行代码 <a class="header-anchor" href="#_3、运行代码" aria-label="Permalink to &quot;3、运行代码&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># windows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main.exe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/mac</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./main</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 编译程序，生成可执行文件。默认会在</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target/debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 目录中生成可执行文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 编译并运行程序，相当于执行</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 后立即运行可执行文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 清理编译过程中生成的文件。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 运行项目中的测试。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doc:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成项目的文档。</span></span></code></pre></div><h2 id="rust认识" tabindex="-1">rust认识 <a class="header-anchor" href="#rust认识" aria-label="Permalink to &quot;rust认识&quot;">​</a></h2><h3 id="rust-语言能做什么" tabindex="-1">rust 语言能做什么 <a class="header-anchor" href="#rust-语言能做什么" aria-label="Permalink to &quot;rust 语言能做什么&quot;">​</a></h3><p>Rust 是一种现代的系统编程语言，它被设计为安全、高效且并发友好。由于它的特点，Rust 可以用于很多不同的领域，下面是一些主要应用场景：</p><h3 id="_1-系统编程" tabindex="-1">1. <strong>系统编程</strong> <a class="header-anchor" href="#_1-系统编程" aria-label="Permalink to &quot;1. **系统编程**&quot;">​</a></h3><p>Rust 主要被用于系统级编程，即开发操作系统、驱动程序、嵌入式系统等底层软件。Rust 的优势在于其内存安全性和无垃圾回收机制，这使得它非常适合资源受限的环境。</p><ul><li><strong>操作系统</strong>：你可以用 Rust 编写自己的操作系统或操作系统的一部分（例如 <strong>Redox OS</strong>，一个完全用 Rust 编写的操作系统）。</li><li><strong>设备驱动程序</strong>：Rust 允许低级别的硬件交互，同时保持内存安全。</li><li><strong>嵌入式开发</strong>：Rust 支持嵌入式编程，它适用于开发需要与硬件直接交互的应用程序。</li></ul><h3 id="_2-web-后端开发" tabindex="-1">2. <strong>Web 后端开发</strong> <a class="header-anchor" href="#_2-web-后端开发" aria-label="Permalink to &quot;2. **Web 后端开发**&quot;">​</a></h3><p>Rust 的高性能特性使得它适合用于构建 Web 服务器和后端服务。Rust 生态系统提供了许多优秀的框架和库，支持高并发的 Web 服务。</p><ul><li><strong>Web 框架</strong>：例如，<code>Rocket</code> 和 <code>Actix</code> 是 Rust 中非常流行的 Web 开发框架，提供了高效的请求处理和路由功能。</li><li><strong>API 开发</strong>：Rust 可以用于开发 RESTful API 和 GraphQL API，特别适合对性能要求较高的服务。</li></ul><h3 id="_3-并发和多线程编程" tabindex="-1">3. <strong>并发和多线程编程</strong> <a class="header-anchor" href="#_3-并发和多线程编程" aria-label="Permalink to &quot;3. **并发和多线程编程**&quot;">​</a></h3><p>Rust 以其并发性和多线程支持而闻名。它的所有权和借用系统能够避免许多并发编程中的常见错误，例如数据竞态和内存泄漏。因此，Rust 是处理多线程、异步编程等任务的理想选择。</p><ul><li><strong>并发应用</strong>：Rust 的 <code>async</code> 和 <code>await</code> 语法，以及 <code>tokio</code> 和 <code>async-std</code> 等异步库，可以帮助你构建高效的并发应用程序。</li><li><strong>多线程应用</strong>：Rust 提供了高效且安全的多线程支持，确保在线程间共享数据时不会发生内存问题。</li></ul><h3 id="_4-游戏开发" tabindex="-1">4. <strong>游戏开发</strong> <a class="header-anchor" href="#_4-游戏开发" aria-label="Permalink to &quot;4. **游戏开发**&quot;">​</a></h3><p>虽然 C++ 是游戏开发的传统选择，Rust 由于其高性能和内存安全的优势，也越来越多地被用于游戏开发。Rust 可以用于开发游戏引擎、游戏客户端和服务器。</p><ul><li><strong>游戏引擎</strong>：Rust 中有一些游戏引擎库，比如 <code>Amethyst</code> 和 <code>Bevy</code>，这些引擎库适用于 2D 和 3D 游戏开发。</li><li><strong>性能</strong>：Rust 高效的内存管理和零成本抽象使得它特别适合性能要求高的游戏开发。</li></ul><h3 id="_5-区块链开发" tabindex="-1">5. <strong>区块链开发</strong> <a class="header-anchor" href="#_5-区块链开发" aria-label="Permalink to &quot;5. **区块链开发**&quot;">​</a></h3><p>由于 Rust 的高性能和安全性，它已经成为区块链开发领域的一个重要语言。许多区块链平台（例如 <strong>Polkadot</strong> 和 <strong>Solana</strong>）的核心部分都使用 Rust 编写。</p><ul><li><strong>智能合约</strong>：Rust 可以用于开发区块链的智能合约，确保代码的安全性和效率。</li><li><strong>区块链平台</strong>：Rust 的并发和内存管理特性非常适合大规模分布式系统的构建。</li></ul><h3 id="_6-命令行工具和脚本" tabindex="-1">6. <strong>命令行工具和脚本</strong> <a class="header-anchor" href="#_6-命令行工具和脚本" aria-label="Permalink to &quot;6. **命令行工具和脚本**&quot;">​</a></h3><p>Rust 适用于开发高效的命令行工具和实用程序。由于 Rust 的快速执行和简洁的语法，许多开发者选择它来编写高效且功能强大的命令行应用。</p><ul><li><strong>CLI 工具</strong>：Rust 提供了如 <code>clap</code> 和 <code>structopt</code> 等库，用于构建易用且功能强大的命令行工具。</li><li><strong>系统工具</strong>：Rust 常用于开发系统管理工具，例如文件管理、日志分析、网络监控等。</li></ul><h3 id="_7-网络编程" tabindex="-1">7. <strong>网络编程</strong> <a class="header-anchor" href="#_7-网络编程" aria-label="Permalink to &quot;7. **网络编程**&quot;">​</a></h3><p>Rust 在网络编程中也有广泛的应用，特别是在高性能网络应用和网络协议的实现方面。</p><ul><li><strong>网络协议实现</strong>：由于 Rust 的内存管理和性能优势，许多网络协议实现（例如 HTTP/2 和 HTTP/3）都使用 Rust 编写。</li><li><strong>高性能网络服务</strong>：Rust 可以用于构建高效、低延迟的网络服务和应用，尤其是在需要处理大量并发连接时。</li></ul><h3 id="_8-数据处理和科学计算" tabindex="-1">8. <strong>数据处理和科学计算</strong> <a class="header-anchor" href="#_8-数据处理和科学计算" aria-label="Permalink to &quot;8. **数据处理和科学计算**&quot;">​</a></h3><p>Rust 的高性能和并发支持也使得它在数据处理和科学计算中越来越受欢迎。</p><ul><li><strong>数据处理</strong>：Rust 可以用于处理大量数据集，尤其是在需要高性能的情况下，常用于大数据分析和实时数据处理。</li><li><strong>科学计算</strong>：Rust 可以与 C 和 Fortran 库互操作，适用于数值计算和科学计算领域。</li></ul><h3 id="_9-跨平台开发" tabindex="-1">9. <strong>跨平台开发</strong> <a class="header-anchor" href="#_9-跨平台开发" aria-label="Permalink to &quot;9. **跨平台开发**&quot;">​</a></h3><p>Rust 提供了良好的跨平台支持，允许你将应用程序同时运行在多个操作系统（Windows、Linux、macOS）上。Rust 的工具链和库支持多平台构建，使得跨平台开发变得更加方便。</p><ul><li><strong>桌面应用</strong>：Rust 可以与如 <code>druid</code> 或 <code>gtk-rs</code> 等库结合使用，来构建桌面图形用户界面应用。</li><li><strong>WebAssembly (WASM)</strong>：Rust 也非常适合编译为 WebAssembly，从而使得其代码能够在 Web 浏览器中运行。</li></ul><h3 id="_10-安全性和漏洞检测" tabindex="-1">10. <strong>安全性和漏洞检测</strong> <a class="header-anchor" href="#_10-安全性和漏洞检测" aria-label="Permalink to &quot;10. **安全性和漏洞检测**&quot;">​</a></h3><p>Rust 被设计为一种“安全”的编程语言，它具有严格的内存管理机制，可以在编译时防止很多常见的漏洞（如缓冲区溢出、数据竞态等）。因此，Rust 也非常适合用于开发安全性要求极高的应用。</p><ul><li><strong>网络安全</strong>：Rust 的内存安全特性可以用来构建网络安全工具和防护系统。</li><li><strong>漏洞检测</strong>：Rust 的类型系统和所有权系统可以帮助减少一些常见的编程错误，进而减少潜在的漏洞。</li></ul><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>Rust 的核心优势在于它结合了 <strong>高性能</strong> 和 <strong>内存安全</strong>，并且避免了垃圾回收机制，适合用于开发需要高效、可靠和安全的应用程序。无论是在系统级编程、Web 开发、并发编程，还是区块链和游戏开发等领域，Rust 都展示了它的强大潜力和应用场景。</p><p>Rust 是一门多用途的语言，适合从 <strong>底层开发</strong> 到 <strong>高层应用</strong> 的各类开发任务。</p>`,96)]))}const c=i(h,[["render",p]]);export{o as __pageData,c as default};
