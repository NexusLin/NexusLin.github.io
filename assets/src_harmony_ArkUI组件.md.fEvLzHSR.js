import{_ as i,C as n,c as d,o as s,G as l,j as t,a as o,ag as h,w as r}from"./chunks/framework.DnwzncJk.js";const u="/Harmony/harmony-ArkUI1.png",w=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/harmony/ArkUI组件.md","filePath":"src/harmony/ArkUI组件.md","lastUpdated":1743124685000}'),b={name:"src/harmony/ArkUI组件.md"},p={id:"_1、认识arkui",tabindex:"-1"},_={id:"声明式开发范式",tabindex:"-1"},c={id:"类web开发范式",tabindex:"-1"},f={id:"_2、开发布局",tabindex:"-1"};function k(m,a,g,q,x,P){const e=n("font");return s(),d("div",null,[l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[0]||(a[0]=[o("ArkUI组件是基于ArkTs的声明式开发范式组件，",-1)])),_:1,__:[0]}),l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[1]||(a[1]=[o("包括基础组件、容器组件和媒体组件。",-1)])),_:1,__:[1]}),l(e,{style:{color:"rgb(38, 38, 38)"}}),t("h2",p,[l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[2]||(a[2]=[o("1、认识",-1)])),_:1,__:[2]}),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[3]||(a[3]=[o("ArkUI",-1)])),_:1,__:[3]}),a[4]||(a[4]=o()),a[5]||(a[5]=t("a",{class:"header-anchor",href:"#_1、认识arkui","aria-label":'Permalink to "<font style="color:rgb(38, 38, 38);">1、认识</font><font style="color:#DF2A3F;">ArkUI</font>"'},"​",-1))]),l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[6]||(a[6]=[o("ArkUl 是一套声明式开发框架，它具备简洁自然的语法、丰富的 UI 组件、多维状态管理，以及实时多维度预览能力，多设备兼容。",-1)])),_:1,__:[6]}),l(e,{style:{color:"rgb(38, 38, 38)"}}),l(e,{style:{color:"rgb(38, 38, 38)"}},{default:r(()=>a[7]||(a[7]=[o("换句话说，这就是",-1)])),_:1,__:[7]}),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[8]||(a[8]=[o("基于ArkTs",-1)])),_:1,__:[8]}),a[35]||(a[35]=o("为我们搭建的UI组件库，接下来我们就简单学习和使用一下",-1)),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[9]||(a[9]=[o("ArkUI组件库，",-1)])),_:1,__:[9]}),a[36]||(a[36]=o("然后完成我们的开发和项目搭建。",-1)),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[10]||(a[10]=[o("ArkUI",-1)])),_:1,__:[10]}),l(e,{style:{color:"#FFFFFF","background-color":"#D22D8D"}},{default:r(()=>a[11]||(a[11]=[o("（方舟UI框架）",-1)])),_:1,__:[11]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[12]||(a[12]=[o("提供了两种开发范式:",-1)])),_:1,__:[12]}),t("blockquote",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[13]||(a[13]=[o("基于ArkTS的声明式开发范式（简称“声明式开发范式”）",-1)])),_:1,__:[13]})]),t("blockquote",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[14]||(a[14]=[o("兼容JS的类Web开发范式",-1)])),_:1,__:[14]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[15]||(a[15]=[o("（简称“类Web开发范式”）",-1)])),_:1,__:[15]})]),t("h4",_,[l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[16]||(a[16]=[o("声明式开发范式",-1)])),_:1,__:[16]}),a[17]||(a[17]=o()),a[18]||(a[18]=t("a",{class:"header-anchor",href:"#声明式开发范式","aria-label":'Permalink to "<font style="color:rgb(36, 39, 40);">声明式开发范式</font>"'},"​",-1))]),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[19]||(a[19]=[o("采用基于TypeScript声明式UI语法扩展而来的",-1)])),_:1,__:[19]}),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[20]||(a[20]=[o("ArkTS语言",-1)])),_:1,__:[20]}),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[21]||(a[21]=[o("，从组件、动画和状态管理三个维度提供UI绘制能力。",-1)])),_:1,__:[21]}),t("h4",c,[l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[22]||(a[22]=[o("类Web开发范式：",-1)])),_:1,__:[22]}),a[23]||(a[23]=o()),a[24]||(a[24]=t("a",{class:"header-anchor",href:"#类web开发范式","aria-label":'Permalink to "<font style="color:rgb(36, 39, 40);">类Web开发范式：</font>"'},"​",-1))]),l(e,{style:{color:"rgb(36, 39, 40)"}},{default:r(()=>a[25]||(a[25]=[o("采用经典的HML、CSS、JavaScript三段式开发方式，也就是我们前端基础",-1)])),_:1,__:[25]}),t("p",null,[a[28]||(a[28]=o("接下来我们的部分主要使用的就是上面的",-1)),l(e,{style:{color:"#DF2A3F"}},{default:r(()=>a[26]||(a[26]=[o("声明式开发范式",-1)])),_:1,__:[26]}),l(e,{style:{color:"#000000"}},{default:r(()=>a[27]||(a[27]=[o("来进行开发。",-1)])),_:1,__:[27]})]),l(e,{style:{color:"#000000"}}),t("h2",f,[l(e,{style:{color:"#000000"}},{default:r(()=>a[29]||(a[29]=[o("2、",-1)])),_:1,__:[29]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[30]||(a[30]=[o("开发布局",-1)])),_:1,__:[30]}),a[31]||(a[31]=o()),a[32]||(a[32]=t("a",{class:"header-anchor",href:"#_2、开发布局","aria-label":'Permalink to "<font style="color:#000000;">2、</font><font style="color:rgba(0, 0, 0, 0.9);">开发布局</font>"'},"​",-1))]),t("p",null,[a[34]||(a[34]=o("在开发过程之中我们经常会使用到布局，",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:r(()=>a[33]||(a[33]=[o("常见页面结构图如下图",-1)])),_:1,__:[33]})]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}}),a[37]||(a[37]=h('<p><img src="'+u+'" alt="image.png" loading="lazy"></p><p>其中，Page表示页面的根节点，Column/Row等元素为系统组件</p><h3 id="常见的布局结构" tabindex="-1">常见的布局结构 <a class="header-anchor" href="#常见的布局结构" aria-label="Permalink to &quot;常见的布局结构&quot;">​</a></h3><ul><li>线性布局(Row、Column)</li><li>层叠布局(Stack)</li><li>弹性布局(Flex)</li><li>相对布局(RelativeContainer)</li></ul><h2 id="_3、布局元素" tabindex="-1">3、布局元素 <a class="header-anchor" href="#_3、布局元素" aria-label="Permalink to &quot;3、布局元素&quot;">​</a></h2><p>常见的布局元素有：</p><p>Page</p><p>Column</p><p>Row</p><p>Stack</p><p>List</p><p>Grid</p><p>Image</p><p>Text</p><p>Button</p><h3 id="_3-1-page" tabindex="-1">3.1 Page <a class="header-anchor" href="#_3-1-page" aria-label="Permalink to &quot;3.1 Page&quot;">​</a></h3><p>Page是页面的根节点，一个页面只能有一个Page节点，Page节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-2-column" tabindex="-1">3.2 Column <a class="header-anchor" href="#_3-2-column" aria-label="Permalink to &quot;3.2 Column&quot;">​</a></h3><p>Column表示垂直布局，Column节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-3-row" tabindex="-1">3.3 Row <a class="header-anchor" href="#_3-3-row" aria-label="Permalink to &quot;3.3 Row&quot;">​</a></h3><p>Row表示水平布局，Row节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-4-stack" tabindex="-1">3.4 Stack <a class="header-anchor" href="#_3-4-stack" aria-label="Permalink to &quot;3.4 Stack&quot;">​</a></h3><p>Stack表示堆叠布局，Stack节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-5-list" tabindex="-1">3.5 List <a class="header-anchor" href="#_3-5-list" aria-label="Permalink to &quot;3.5 List&quot;">​</a></h3><p>List表示列表布局，List节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-6-grid" tabindex="-1">3.6 Grid <a class="header-anchor" href="#_3-6-grid" aria-label="Permalink to &quot;3.6 Grid&quot;">​</a></h3><p>Grid表示网格布局，Grid节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-7-image" tabindex="-1">3.7 Image <a class="header-anchor" href="#_3-7-image" aria-label="Permalink to &quot;3.7 Image&quot;">​</a></h3><p>Image表示图片组件，Image节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-8-text" tabindex="-1">3.8 Text <a class="header-anchor" href="#_3-8-text" aria-label="Permalink to &quot;3.8 Text&quot;">​</a></h3><p>Text表示文本组件，Text节点下可以包含多个Column、Row等布局元素。</p><h3 id="_3-9-button" tabindex="-1">3.9 Button <a class="header-anchor" href="#_3-9-button" aria-label="Permalink to &quot;3.9 Button&quot;">​</a></h3><p>Button表示按钮组件，Button节点下可以包含多个Column、Row等布局元素。</p><h2 id="_4、组件属性" tabindex="-1">4、组件属性 <a class="header-anchor" href="#_4、组件属性" aria-label="Permalink to &quot;4、组件属性&quot;">​</a></h2><p>组件属性用于设置组件的样式和行为，常见的组件属性有：id、class、style、onclick等。</p><h3 id="_4-1-id" tabindex="-1">4.1 id <a class="header-anchor" href="#_4-1-id" aria-label="Permalink to &quot;4.1 id&quot;">​</a></h3><p>id用于标识组件的唯一性，可以通过id获取组件的引用。</p><h3 id="_4-2-class" tabindex="-1">4.2 class <a class="header-anchor" href="#_4-2-class" aria-label="Permalink to &quot;4.2 class&quot;">​</a></h3><p>class用于设置组件的样式，可以通过class设置组件的样式。</p><h3 id="_4-3-style" tabindex="-1">4.3 style <a class="header-anchor" href="#_4-3-style" aria-label="Permalink to &quot;4.3 style&quot;">​</a></h3><p>style用于设置组件的样式，可以通过style设置组件的样式。</p><h3 id="_4-4-onclick" tabindex="-1">4.4 onclick <a class="header-anchor" href="#_4-4-onclick" aria-label="Permalink to &quot;4.4 onclick&quot;">​</a></h3><p>onclick用于设置组件的点击事件，可以通过onclick设置组件的点击事件。</p><h2 id="_5、组件事件" tabindex="-1">5、组件事件 <a class="header-anchor" href="#_5、组件事件" aria-label="Permalink to &quot;5、组件事件&quot;">​</a></h2><p>组件事件用于处理组件的行为，常见的组件事件有：onclick、onchange等。</p><h3 id="_5-1-onclick" tabindex="-1">5.1 onclick <a class="header-anchor" href="#_5-1-onclick" aria-label="Permalink to &quot;5.1 onclick&quot;">​</a></h3><p>onclick用于处理组件的点击事件，可以通过onclick设置组件的点击事件。</p><h3 id="_5-2-onchange" tabindex="-1">5.2 onchange <a class="header-anchor" href="#_5-2-onchange" aria-label="Permalink to &quot;5.2 onchange&quot;">​</a></h3><p>onchange用于处理组件的值改变事件，可以通过onchange设置组件的值改变事件。</p><h2 id="_6、组件样式" tabindex="-1">6、组件样式 <a class="header-anchor" href="#_6、组件样式" aria-label="Permalink to &quot;6、组件样式&quot;">​</a></h2><p>组件样式用于设置组件的样式，常见的组件样式有：color、font-size、background-color等。</p><h3 id="_6-1-color" tabindex="-1">6.1 color <a class="header-anchor" href="#_6-1-color" aria-label="Permalink to &quot;6.1 color&quot;">​</a></h3><p>color用于设置组件的文本颜色，可以通过color设置组件的文本颜色。</p><h3 id="_6-2-font-size" tabindex="-1">6.2 font-size <a class="header-anchor" href="#_6-2-font-size" aria-label="Permalink to &quot;6.2 font-size&quot;">​</a></h3><p>font-size用于设置组件的字体大小，可以通过font-size设置组件的字体大小。</p><h3 id="_6-3-background-color" tabindex="-1">6.3 background-color <a class="header-anchor" href="#_6-3-background-color" aria-label="Permalink to &quot;6.3 background-color&quot;">​</a></h3><p>background-color用于设置组件的背景颜色，可以通过background-color设置组件的背景颜色。</p><h3 id="_6-4-width" tabindex="-1">6.4 width <a class="header-anchor" href="#_6-4-width" aria-label="Permalink to &quot;6.4 width&quot;">​</a></h3><p>width用于设置组件的宽度，可以通过width设置组件的宽度。</p><h3 id="_6-5-height" tabindex="-1">6.5 height <a class="header-anchor" href="#_6-5-height" aria-label="Permalink to &quot;6.5 height&quot;">​</a></h3><p>height用于设置组件的高度，可以通过height设置组件的高度。</p><h2 id="_7、组件布局" tabindex="-1">7、组件布局 <a class="header-anchor" href="#_7、组件布局" aria-label="Permalink to &quot;7、组件布局&quot;">​</a></h2><p>组件布局用于设置组件的布局方式，常见的组件布局有：flex、grid等。</p><h3 id="_7-1-flex" tabindex="-1">7.1 flex <a class="header-anchor" href="#_7-1-flex" aria-label="Permalink to &quot;7.1 flex&quot;">​</a></h3><p>flex用于设置组件的弹性布局，可以通过flex设置组件的弹性布局。</p><h3 id="_7-2-grid" tabindex="-1">7.2 grid <a class="header-anchor" href="#_7-2-grid" aria-label="Permalink to &quot;7.2 grid&quot;">​</a></h3><p>grid用于设置组件的网格布局，可以通过grid设置组件的网格布局。</p><h3 id="_7-3-column" tabindex="-1">7.3 column <a class="header-anchor" href="#_7-3-column" aria-label="Permalink to &quot;7.3 column&quot;">​</a></h3><p>column用于设置组件的列布局，可以通过column设置组件的列布局。</p><h3 id="_7-4-row" tabindex="-1">7.4 row <a class="header-anchor" href="#_7-4-row" aria-label="Permalink to &quot;7.4 row&quot;">​</a></h3><p>row用于设置组件的行布局，可以通过row设置组件的行布局。</p><h2 id="_8、组件动画" tabindex="-1">8、组件动画 <a class="header-anchor" href="#_8、组件动画" aria-label="Permalink to &quot;8、组件动画&quot;">​</a></h2><p>组件动画用于设置组件的动画效果，常见的组件动画有：fade、slide、rotate等。</p><h3 id="_8-1-fade" tabindex="-1">8.1 fade <a class="header-anchor" href="#_8-1-fade" aria-label="Permalink to &quot;8.1 fade&quot;">​</a></h3><p>fade用于设置组件的淡入淡出动画，可以通过fade设置组件的淡入淡出动画。</p><h3 id="_8-2-slide" tabindex="-1">8.2 slide <a class="header-anchor" href="#_8-2-slide" aria-label="Permalink to &quot;8.2 slide&quot;">​</a></h3><p>slide用于设置组件的滑动动画，可以通过slide设置组件的滑动动画。</p><h3 id="_8-3-rotate" tabindex="-1">8.3 rotate <a class="header-anchor" href="#_8-3-rotate" aria-label="Permalink to &quot;8.3 rotate&quot;">​</a></h3><p>rotate用于设置组件的旋转动画，可以通过rotate设置组件的旋转动画。</p><h2 id="_9、组件交互" tabindex="-1">9、组件交互 <a class="header-anchor" href="#_9、组件交互" aria-label="Permalink to &quot;9、组件交互&quot;">​</a></h2><p>组件交互用于设置组件之间的交互方式，常见的组件交互有：touch、drag等。</p><h3 id="_9-1-touch" tabindex="-1">9.1 touch <a class="header-anchor" href="#_9-1-touch" aria-label="Permalink to &quot;9.1 touch&quot;">​</a></h3><p>touch用于设置组件的触摸事件，可以通过touch设置组件的触摸事件。</p><h3 id="_9-2-drag" tabindex="-1">9.2 drag <a class="header-anchor" href="#_9-2-drag" aria-label="Permalink to &quot;9.2 drag&quot;">​</a></h3><p>drag用于设置组件的拖拽事件，可以通过drag设置组件的拖拽事件。</p><h2 id="_10、组件事件" tabindex="-1">10、组件事件 <a class="header-anchor" href="#_10、组件事件" aria-label="Permalink to &quot;10、组件事件&quot;">​</a></h2><p>组件事件用于设置组件的事件，常见的组件事件有：click、change等。</p><h3 id="_10-1-click" tabindex="-1">10.1 click <a class="header-anchor" href="#_10-1-click" aria-label="Permalink to &quot;10.1 click&quot;">​</a></h3><p>click用于设置组件的点击事件，可以通过click设置组件的点击事件。</p><h3 id="_10-2-change" tabindex="-1">10.2 change <a class="header-anchor" href="#_10-2-change" aria-label="Permalink to &quot;10.2 change&quot;">​</a></h3><p>change用于设置组件的值改变事件，可以通过change设置组件的值改变事件。</p>',91))])}const A=i(b,[["render",k]]);export{w as __pageData,A as default};
