import{_ as a,c as e,o as t,a4 as n}from"./chunks/framework.DvHWMJgD.js";const R=JSON.parse('{"title":"❤React体系01-初识","description":"","frontmatter":{},"headers":[],"relativePath":"src/React/01-认识React.md","filePath":"src/React/01-认识React.md"}'),s={name:"src/React/01-认识React.md"},c=n(`<h1 id="❤react体系01-初识" tabindex="-1">❤React体系01-初识 <a class="header-anchor" href="#❤react体系01-初识" aria-label="Permalink to &quot;❤React体系01-初识&quot;">​</a></h1><h2 id="前置了解" tabindex="-1">前置了解 <a class="header-anchor" href="#前置了解" aria-label="Permalink to &quot;前置了解&quot;">​</a></h2><p>该React体系文章目标:</p><p>React基础、React Hooks、React路由、React Redux、组件库、immutable、Mobx、React+TS写法、单元测试、dva+umi</p><h2 id="_1-react-官网" tabindex="-1">1. React 官网 <a class="header-anchor" href="#_1-react-官网" aria-label="Permalink to &quot;1. React 官网&quot;">​</a></h2><p>英文官网: <a href="https://link.juejin.cn?target=https%3A%2F%2Freactjs.org%2F" target="_blank" rel="noreferrer">reactjs.org/</a></p><p>中文官网: <a href="https://link.juejin.cn?target=https%3A%2F%2Freact.docschina.org%2F" target="_blank" rel="noreferrer">react.docschina.org/</a></p><h2 id="_2-认识react" tabindex="-1">2. 认识React <a class="header-anchor" href="#_2-认识react" aria-label="Permalink to &quot;2. 认识React&quot;">​</a></h2><h3 id="react描述" tabindex="-1">React描述 <a class="header-anchor" href="#react描述" aria-label="Permalink to &quot;React描述&quot;">​</a></h3><p>React是一个用户构建用户界面的JavaScript库 从MVC思想来看，React仅仅是是视图层（v层）</p><h3 id="react主要思想" tabindex="-1">React主要思想 <a class="header-anchor" href="#react主要思想" aria-label="Permalink to &quot;React主要思想&quot;">​</a></h3><p><code>完全利用JS语言的能力创建组件</code></p><h3 id="react全家桶" tabindex="-1">React全家桶 <a class="header-anchor" href="#react全家桶" aria-label="Permalink to &quot;React全家桶&quot;">​</a></h3><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>javascript</span></span>
<span class="line"><span></span></span>
<span class="line"><span> 代码解读</span></span>
<span class="line"><span>复制代码React语法基础</span></span>
<span class="line"><span>React-Router</span></span>
<span class="line"><span>Redux</span></span>
<span class="line"><span>React-Hooks</span></span>
<span class="line"><span>PubSub</span></span>
<span class="line"><span>Ant-Design</span></span>
<span class="line"><span>umi</span></span></code></pre></div><h2 id="_3-react起源" tabindex="-1">3. React起源 <a class="header-anchor" href="#_3-react起源" aria-label="Permalink to &quot;3. React起源&quot;">​</a></h2><h3 id="_1-react简述" tabindex="-1">（1）React简述 <a class="header-anchor" href="#_1-react简述" aria-label="Permalink to &quot;（1）React简述&quot;">​</a></h3><p>React 起源于 Facebook 的内部项目，该公司对市场上所有 JavaScript MVC 框架都不满意，Jordan Walke就决定自己写一套，用来架Instagram 的网站。做出来以后，发现这套东西很好用，在2013年5月开源。</p><h4 id="react的创始人jordan-walke" tabindex="-1">React的创始人<strong>Jordan Walke</strong> <a class="header-anchor" href="#react的创始人jordan-walke" aria-label="Permalink to &quot;React的创始人**Jordan Walke**&quot;">​</a></h4><p>Facebook的前端工程师，还参与了许多其他前端开源项目的开发，如Flux、Jest和Flow等。他在前端技术方面的贡献得到了广泛认可，被誉为“现代前端开发的先驱</p><h4 id="开发react的背景" tabindex="-1">开发React的背景 <a class="header-anchor" href="#开发react的背景" aria-label="Permalink to &quot;开发React的背景&quot;">​</a></h4><p>Jordan Walke在开发React时，最初是为了解决Facebook内部的一些前端问题，如复杂UI组件的构建、高效的渲染以及数据管理等。他认为传统的前端开发方式过于繁琐，需要手动操作DOM，造成性能问题和代码复杂度的提高。因此，他设计了React的虚拟DOM和组件化思想，使得开发者可以更加高效地构建复杂UI组件，并且可以更加方便地管理数据。</p><h4 id="react历史" tabindex="-1">React历史 <a class="header-anchor" href="#react历史" aria-label="Permalink to &quot;React历史&quot;">​</a></h4><p><code>------------------------------------------------------</code></p><p>2011年开始开发React，2013年，React首次发布成为了一个开源项目。在React发布后，它的影响力迅速扩大，成为了当今最流行的前端框架之一。React的成功也推动了整个前端技术的发展，使得前端开发变得更加高效和可靠。</p><h3 id="_2-对比vue" tabindex="-1">（2）对比Vue <a class="header-anchor" href="#_2-对比vue" aria-label="Permalink to &quot;（2）对比Vue&quot;">​</a></h3><p>Vue的创始人</p><p>Vue.js的创始人是尤雨溪（Evan You），他是一位中国程序员，曾在Google和Meteor工作。他在2014年创建了Vue.js，并在不到一年的时间内将其推向开发者社区。</p><p><code>____________________________________________________________</code></p><p>尤雨溪在创建Vue.js的时候，旨在解决现有的前端框架（如Angular和React）存在的一些问题，例如过于复杂、学习曲线陡峭等。他希望创造一种更加轻量级、易学易用的框架，同时保持足够的灵活性和可扩展性，以满足开发者的需求。</p><hr><p>Vue.js的设计理念是“渐进式框架”，即可以逐步引入到现有项目中，而不需要全面重构。这使得Vue.js非常适合中小型项目，同时也可以用于大型企业级项目。</p><hr><p>在Vue.js发布后，它迅速获得了广泛的关注和使用。尤雨溪也因此成为前端开发社区中备受尊敬的人物之一。他继续致力于Vue.js的开发和推广，同时也在全球范围内进行了许多关于Vue.js的演讲和培训。</p><hr><h3 id="_3-react和vue的理念对比" tabindex="-1">（3） React和vue的理念对比 <a class="header-anchor" href="#_3-react和vue的理念对比" aria-label="Permalink to &quot;（3） React和vue的理念对比&quot;">​</a></h3><p>React其实是作为MVC架构的V层---仅仅是UI React完全利用JS语言自身能力来编写ui，而不是造轮子增强HTML功能 Vue则是造轮子增强HTML功能</p><h3 id="_4-进一步介绍" tabindex="-1">（4）进一步介绍 <a class="header-anchor" href="#_4-进一步介绍" aria-label="Permalink to &quot;（4）进一步介绍&quot;">​</a></h3><p>虚拟DOM - React为了更高超的性能而使用虚拟DOM作为其不同的实现。 它同时也可以由服务端Node.js渲染 － 而不需要过重的浏览器DOM支持</p><p>数据流 - React实现了单向响应的数据流，从而减少了重复代码，这也是它为什么比传统数据绑定更简单。</p><p>React 的设计思想极其独特，属于革命性创新，性能出众，代码逻辑却非常简单。</p><p>项目本身也越滚越大，从最早的UI引擎变成了一整套前后端通吃的 Web App 解决方案。衍生的 React Native 项目，目标更是宏伟，希望用写 Web App 的方式去写 Native App。如果能够实现，整个互联网行业都会被颠覆，因为同一组人只需要写一次 UI ，就能同时运行在服务器、浏览器和手机。</p><h2 id="_4-react-特点和作用" tabindex="-1">4.React 特点和作用 <a class="header-anchor" href="#_4-react-特点和作用" aria-label="Permalink to &quot;4.React 特点和作用&quot;">​</a></h2><ol><li>声明式设计 （声明式编码）</li><li>组件化编码（组件化模式）</li><li>高效灵活（优秀的Diffing算法），最小化页面重绘</li><li>React Native 编写原生应用</li><li>JSX 语法</li><li>单向数据绑定</li><li>虚拟 DOM</li></ol><p>使用虚拟(virtual)DOM, 不总是直接操作页面真实DOM。</p><ol start="8"><li>Component</li><li>React Native 可以使用React语法进行移动端开发</li></ol><p>作用</p><p>开发web应用</p><p>使用React 开发移动端原生应用React-native</p><p>VR 虚拟现实 react360</p><h2 id="_5-javascript-主要使用核心点" tabindex="-1">5. JavaScript 主要使用核心点 <a class="header-anchor" href="#_5-javascript-主要使用核心点" aria-label="Permalink to &quot;5. JavaScript 主要使用核心点&quot;">​</a></h2><p>判断this指向 class（类） ES6语法规范 npm包管理器 原型、原型链 数组常用方法 模块化</p><h2 id="_6、react核心部分-函数式组件" tabindex="-1">6、react核心部分（函数式组件） <a class="header-anchor" href="#_6、react核心部分-函数式组件" aria-label="Permalink to &quot;6、react核心部分（函数式组件）&quot;">​</a></h2><p>经过对于前面React知识的了解，想必也清楚了对于React官方来说，更加重要的是哪些</p><p>最核心的当然就是函数式组件的使用，接下来的部分大部分都会以函数式组件为主进行讲解</p><p>也就是下面这种最简单的函数式组件的编写！</p><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>js</span></span>
<span class="line"><span></span></span>
<span class="line"><span> 代码解读</span></span>
<span class="line"><span>复制代码import React from &#39;react&#39;</span></span>
<span class="line"><span>function mycomponents {</span></span>
<span class="line"><span>  render() {</span></span>
<span class="line"><span>    return (</span></span>
<span class="line"><span>      &lt;div&gt;header&lt;/div&gt;</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>作者：林太白<br> 链接：<a href="https://juejin.cn/post/7361762150010748962" target="_blank" rel="noreferrer">https://juejin.cn/post/7361762150010748962</a><br> 来源：稀土掘金<br> 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>`,57),r=[c];function p(l,i,o,h,_,d){return t(),e("div",null,r)}const b=a(s,[["render",p]]);export{R as __pageData,b as default};
