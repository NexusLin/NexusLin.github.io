import{_ as s,n as i,q as a,t as l}from"./chunks/theme-components.DDZ15eKn.js";import"./chunks/search-index.B-gvvmFQ.js";const t=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"src/basics/css/css-权重和优先级.md","filePath":"src/basics/css/css-权重和优先级.md","lastUpdated":1743124685000}');const e=s({name:"src/basics/css/css-权重和优先级.md"},[["render",function(s,t,e,n,h,p){return a(),i("div",null,t[0]||(t[0]=[l('<h3 id="css权重-specificity" tabindex="-1">css权重（Specificity） <a class="header-anchor" href="#css权重-specificity" aria-label="Permalink to &quot;css权重（Specificity）&quot;">​</a></h3><ul><li><p>引入优先级：行内样式&gt;嵌入式~外部样式表</p></li><li><p>嵌入式和外部样式表那个在下面，那个优先级就高</p></li></ul><h3 id="css选择器的优先级" tabindex="-1">CSS选择器的优先级 <a class="header-anchor" href="#css选择器的优先级" aria-label="Permalink to &quot;CSS选择器的优先级&quot;">​</a></h3><blockquote><ol><li>行内样式（Inline styles）</li><li>ID 选择器（ID selectors）</li><li>类选择器、伪类（Class selectors, Pseudo-classes）</li><li>元素选择器、伪元素（Element selectors, Pseudo-elements）</li><li>通配符选择器（Universal selector） &gt;</li><li>继承样式（Inherited styles） &gt;</li><li>浏览器默认样式（Browser default styles）</li></ol></blockquote><div class="language-JS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    一个行内样式</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    一个id选择器</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    一个属性选择器</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    class或者伪类</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    一个元素选择器</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">或者伪元素</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    通配符</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span></code></pre></div><div class="language-JS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    权重相同，写在后面的覆盖前面的</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    使用 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">important 达到最大优先级，都使用 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">important 时，权重大的优先级高</span></span></code></pre></div>',6)]))}]]);export{t as __pageData,e as default};
