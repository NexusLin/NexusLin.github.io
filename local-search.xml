<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>面试高频篇</title>
    <link href="/2024/06/06/%E9%9D%A2%E8%AF%95%E9%AB%98%E9%A2%91%E7%AF%87/"/>
    <url>/2024/06/06/%E9%9D%A2%E8%AF%95%E9%AB%98%E9%A2%91%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="❤面试高频篇"><a href="#❤面试高频篇" class="headerlink" title="❤面试高频篇"></a>❤面试高频篇</h1><h1 id="summary-interview-highfrequency"><a href="#summary-interview-highfrequency" class="headerlink" title="summary-interview-highfrequency"></a>summary-interview-highfrequency</h1><p>面试高频篇文章 (赶紧点赞收藏+不断更新)</p><blockquote><p>座右铭：<br>长风破浪会有时，直挂云帆济沧海。<br>让一切变得简单、专一。</p></blockquote><p>仅仅收录文章中最重要的(⭐⭐⭐⭐⭐)部分</p><h2 id="01-基础部分"><a href="#01-基础部分" class="headerlink" title="01-基础部分"></a>01-基础部分</h2><h3 id="（1）HTML部分"><a href="#（1）HTML部分" class="headerlink" title="（1）HTML部分"></a>（1）HTML部分</h3><h4 id="HTML5有哪些新特性"><a href="#HTML5有哪些新特性" class="headerlink" title="HTML5有哪些新特性"></a>HTML5有哪些新特性</h4><p>新增选择器 document.querySelector、document.querySelectorAll<br>拖拽释放(Drag and drop) API<br>媒体播放的 video 和 audio<br>本地存储 localStorage 和 sessionStorage<br>离线应用 manifest<br>桌面通知 Notifications<br>语意化标签 article、footer、header、nav、section<br>增强表单控件 calendar、date、time、email、url、search<br>地理位置 Geolocation<br>多任务 webworker<br>全双工通信协议 websocket<br>历史管理 history<br>跨域资源共享(CORS) Access-Control-Allow-Origin<br>页面可见性改变事件 visibilitychange<br>跨窗口通信 PostMessage<br>Form Data 对象<br>绘画 canvas</p><h4 id="cookies，sessionStorage-和-localStorage-的区别（重要）"><a href="#cookies，sessionStorage-和-localStorage-的区别（重要）" class="headerlink" title="cookies，sessionStorage 和 localStorage 的区别（重要）"></a>cookies，sessionStorage 和 localStorage 的区别（重要）</h4><p>cookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）<br>cookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递<br>sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存<br>存储大小：</p><p>cookie数据大小不能超过4k<br>sessionStorage和localStorage虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大<br>有期时间：</p><p>localStorage 存储持久数据，浏览器关闭后数据不丢失除非主动删除数据<br>sessionStorage 数据在当前浏览器窗口关闭后自动删除<br>cookie 设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭</p><h4 id="一个页面从输入-URL-到页面加载完成的过程（流程说的越详细越好）"><a href="#一个页面从输入-URL-到页面加载完成的过程（流程说的越详细越好）" class="headerlink" title="一个页面从输入 URL 到页面加载完成的过程（流程说的越详细越好）"></a>一个页面从输入 URL 到页面加载完成的过程（流程说的越详细越好）</h4><p>注：这题胜在区分度高，知识点覆盖广，再不懂的人，也能答出几句，而高手可以根据自己擅长的领域自由发挥，从URL规范、HTTP协议、DNS、CDN、数据库查询、 到浏览器流式解析、CSS规则构建、layout、paint、onload&#x2F;domready、JS执行、JS API绑定等等</p><p><strong>详细版：</strong>1、浏览器会开启一个线程来处理这个请求，对 URL 分析判断如果是 http 协议就按照 Web 方式来处理;2、调用浏览器内核中的对应方法，比如 WebView 中的 loadUrl 方法;3、通过DNS解析获取网址的IP地址，设置 UA 等信息发出第二个GET请求;4、进行HTTP协议会话，客户端发送报头(请求报头);5、进入到web服务器上的 Web Server，如 Apache、Tomcat、Node.JS 等服务器;6、进入部署好的后端应用，如 PHP、Java、JavaScript、Python 等，找到对应的请求处理;7、处理结束回馈报头，此处如果浏览器访问过，缓存上有对应资源，会与服务器最后修改时间对比，一致则返回304;8、浏览器开始下载html文档(响应报头，状态码200)，同时使用缓存;9、文档树建立，根据标记请求所需指定MIME类型的文件（比如css、js）,同时设置了cookie;10、页面开始渲染DOM，JS根据DOM API操作DOM,执行事件绑定等，页面显示完成。</p><p><strong>简洁版：</strong></p><p>浏览器根据请求的URL交给DNS域名解析，找到真实IP，向服务器发起请求；服务器交给后台处理完成后返回数据，浏览器接收文件（HTML、JS、CSS、图象等）；浏览器对加载到的资源（HTML、JS、CSS等）进行语法解析，建立相应的内部数据结构（如HTML的DOM）；载入解析到的资源文件，渲染页面，完成</p><h3 id="（2）CSS部分"><a href="#（2）CSS部分" class="headerlink" title="（2）CSS部分"></a>（2）CSS部分</h3><h4 id="BFC格式化上下文（5星）"><a href="#BFC格式化上下文（5星）" class="headerlink" title="BFC格式化上下文（5星）"></a>BFC格式化上下文（5星）</h4><p>.BFC格式化上下文.md</p><p><a href="https://zhuanlan.zhihu.com/p/161439539">https://zhuanlan.zhihu.com/p/161439539</a></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">一个页面是由很多个 <span class="hljs-keyword">Box </span>组成的,元素的类型和 <span class="hljs-keyword">display </span>属性,决定了这个 <span class="hljs-keyword">Box </span>的类型不同类型的 <span class="hljs-keyword">Box,会参与不同的 </span>Formatting <span class="hljs-built_in">Context</span>（决定如何渲染文档的容器）,因此<span class="hljs-keyword">Box内的元素会以不同的方式渲染</span><br><span class="hljs-keyword"></span><br>也就是说<span class="hljs-keyword">BFC内部的元素和外部的元素不会互相影响</span><br></code></pre></td></tr></table></figure><h4 id="flex布局和相关属性（5星）"><a href="#flex布局和相关属性（5星）" class="headerlink" title="flex布局和相关属性（5星）"></a>flex布局和相关属性（5星）</h4><h4 id="CSS3-新特性（⭐⭐⭐⭐）"><a href="#CSS3-新特性（⭐⭐⭐⭐）" class="headerlink" title="CSS3 新特性（⭐⭐⭐⭐）"></a>CSS3 新特性（⭐⭐⭐⭐）</h4><h5 id="你用过哪些css3的新特性"><a href="#你用过哪些css3的新特性" class="headerlink" title="你用过哪些css3的新特性"></a>你用过哪些css3的新特性</h5><p>圆角（border-radius）</p><p>阴影（box-shadow）</p><p>对文字加特效（text-shadow、）</p><p>线性渐变（gradient）</p><p>变换（transform）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">例如 <br>transform: rotate(9deg) scale(0.85,0.90) translate(0px,-30px)skew(-9deg,0deg);<br>// 旋转,缩放,定位,倾斜<br></code></pre></td></tr></table></figure><p>增加了更多的 CSS 选择器<br>多背景设置<br>色彩模式，如 rgba<br>伪元素 ::selection.<br>媒体查询，<br>多栏布局<br>图片边框（border-image）</p><h4 id="css水平、垂直居中的写法"><a href="#css水平、垂直居中的写法" class="headerlink" title="css水平、垂直居中的写法"></a>css水平、垂直居中的写法</h4><p><strong>水平居中</strong></p><ul><li>1、行内元素: <code>text-align: center</code></li><li>2、块级元素: <code>margin: 0 auto</code></li><li>3、<code>position:absolute +left:50%+ transform:translateX(-50%)</code></li><li>4、<code>display:flex + justify-content: center</code></li></ul><p><strong>垂直居中</strong></p><ul><li>1、设置line-height 等于height</li><li>2、<code>position：absolute +top:50%+ transform:translateY(-50%)</code></li><li>3、【flex布局】<code>display:flex + align-items: center</code></li><li>4、【表格布局】<code>display:table+display:table-cell + vertical-align: middle;</code></li></ul><h4 id="纯CSS创建一个三角形"><a href="#纯CSS创建一个三角形" class="headerlink" title="纯CSS创建一个三角形"></a>纯CSS创建一个三角形</h4><p>&#x2F;&#x2F; 把上、左、右三条边隐藏掉（颜色设为 transparent）#demo { width: 0; height: 0; border-width: 20px; border-style: solid; border-color: transparent transparent red transparent;}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript">纯<span class="hljs-variable constant_">CSS</span>创建一个向上的三角形<br><br><br>&lt;!<span class="hljs-variable constant_">DOCTYPE</span> html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br>&lt;head&gt;<br>  &lt;meta charset=&quot;UTF-8&quot;&gt;<br>  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>  &lt;title&gt;CSS Triangle&lt;/title&gt;<br>  &lt;style&gt;<br>    .triangle &#123;<br>      width: 0;<br>      height: 0;<br>      border-left: 50px solid transparent;<br>      border-right: 50px solid transparent;<br>      border-bottom: 100px solid red;<br>    &#125;<br>  &lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div class=&quot;triangle&quot;&gt;&lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br><br></code></pre></td></tr></table></figure><h3 id="（3）javascript部分"><a href="#（3）javascript部分" class="headerlink" title="（3）javascript部分"></a>（3）javascript部分</h3><h4 id="Javascript-实现继承-（⭐⭐⭐）"><a href="#Javascript-实现继承-（⭐⭐⭐）" class="headerlink" title="Javascript 实现继承 （⭐⭐⭐）"></a><strong>Javascript 实现继承</strong> （⭐⭐⭐）</h4><p><a href="https://juejin.cn/post/7267434484504264756">https://juejin.cn/post/7267434484504264756</a></p><h4 id="深拷贝和浅拷贝的区别-⭐⭐⭐⭐⭐"><a href="#深拷贝和浅拷贝的区别-⭐⭐⭐⭐⭐" class="headerlink" title="深拷贝和浅拷贝的区别(⭐⭐⭐⭐⭐)"></a>深拷贝和浅拷贝的区别(⭐⭐⭐⭐⭐)</h4><p>深拷贝：拷贝数据，用遍历判断再递归，<code>Json.parse(JSON.stringify(oldobj))</code></p><p>浅拷贝：只拷贝最外面一层的数据地址，用遍历<code>Obect.assign(&#123; &#125;,oldobj)</code></p><p><a href="https://juejin.cn/post/7345356037404590106?searchId=20240623183610D3E7E31739E433B2F166">https://juejin.cn/post/7345356037404590106?searchId=20240623183610D3E7E31739E433B2F166</a></p><h4 id="说说你对与闭包函数的理解（4星）"><a href="#说说你对与闭包函数的理解（4星）" class="headerlink" title="说说你对与闭包函数的理解（4星）"></a>说说你对与闭包函数的理解（4星）</h4><p>什么是闭包？先说概念：</p><p><strong>闭包是指有权访问另一个函数作用域中变量的函数。</strong></p><p>创建闭包的最常用的方式就是在一个<a href="https://so.csdn.net/so/search?q=%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020">函数</a>内创建另一个函数，通过另一个函数访问这个函数的局部变量，利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。</p><p>一个作用域有权访问另一个作用域的局部作用域</p><p>优点：可以延长代码使用，避免全局变量的污染</p><p>缺点：占用内存，会导致内存溢出</p><p>简单总结：</p><p>闭包是指函数能够访问其词法作用域外部的变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建一个闭包函数</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">name</span> - 外部变量</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">function</span>&#125; - 返回闭包函数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createClosure</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Hello, &#x27;</span> + name);<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 创建闭包函数</span><br><span class="hljs-keyword">var</span> sayHello = <span class="hljs-title function_">createClosure</span>(<span class="hljs-string">&#x27;John&#x27;</span>);<br><br><span class="hljs-comment">// 调用闭包函数</span><br><span class="hljs-title function_">sayHello</span>(); <span class="hljs-comment">// 输出: &#x27;Hello, John&#x27;</span><br><br></code></pre></td></tr></table></figure><p><code>createClosure</code> 函数接受一个参数 <code>name</code>，并返回一个内部函数。内部函数可以访问外部函数的 <code>name</code> 参数。我们将外部函数调用时传递的值 <code>&#39;John&#39;</code> 作为参数创建了一个闭包函数 <code>sayHello</code>。</p><p>当我们调用 <code>sayHello()</code> 时，它会输出 <code>&#39;Hello, John&#39;</code>。由于闭包函数保留了对外部变量 <code>name</code> 的引用，即使外部函数已经执行完毕，闭包函数仍然可以访问和使用外部变量。这就是闭包的特性。</p><p>需要注意的是，闭包函数可以访问外部函数的变量，但外部函数不能直接访问闭包函数的变量。这种封闭的作用域链使得闭包非常有用，能够创造私有变量、实现模块化等功能。</p><h3 id="（4）ES部分"><a href="#（4）ES部分" class="headerlink" title="（4）ES部分"></a>（4）ES部分</h3><h4 id="❤ES数组的操作方法"><a href="#❤ES数组的操作方法" class="headerlink" title="❤ES数组的操作方法"></a>❤ES数组的操作方法</h4><h4 id="❤promise-⭐⭐⭐⭐⭐"><a href="#❤promise-⭐⭐⭐⭐⭐" class="headerlink" title="❤promise(⭐⭐⭐⭐⭐)"></a>❤promise(⭐⭐⭐⭐⭐)</h4><h5 id="promise的认识"><a href="#promise的认识" class="headerlink" title="promise的认识"></a>promise的认识</h5><p><a href="https://juejin.cn/post/7196590585237995557?searchId=20240617093725CC7B52389A5A5A09B78B">https://juejin.cn/post/7196590585237995557?searchId=20240617093725CC7B52389A5A5A09B78B</a></p><h5 id="promise-（三千字总结）"><a href="#promise-（三千字总结）" class="headerlink" title="promise （三千字总结）"></a><strong>promise （三千字总结）</strong></h5><p><a href="https://juejin.cn/post/7382868373882880000?searchId=202406231818488434EA45222726BD5E2B">https://juejin.cn/post/7382868373882880000?searchId=202406231818488434EA45222726BD5E2B</a></p><h3 id="（5）网络相关"><a href="#（5）网络相关" class="headerlink" title="（5）网络相关"></a>（5）网络相关</h3><h4 id="❤-TCP三次握手和TCP四次握手（详解）-⭐⭐⭐⭐⭐"><a href="#❤-TCP三次握手和TCP四次握手（详解）-⭐⭐⭐⭐⭐" class="headerlink" title="❤ TCP三次握手和TCP四次握手（详解）(⭐⭐⭐⭐⭐)"></a>❤ TCP三次握手和TCP四次握手（详解）(⭐⭐⭐⭐⭐)</h4><p><a href="https://juejin.cn/post/7267093610314694671">https://juejin.cn/post/7267093610314694671</a></p><h4 id="前端跨域问题解决-⭐⭐⭐⭐⭐"><a href="#前端跨域问题解决-⭐⭐⭐⭐⭐" class="headerlink" title="前端跨域问题解决(⭐⭐⭐⭐⭐)"></a>前端跨域问题解决(⭐⭐⭐⭐⭐)</h4><p><a href="https://blog.csdn.net/qq_41756364/article/details/79982932">https://blog.csdn.net/qq_41756364/article/details/79982932</a></p><h4 id="Vue-前端处理跨域"><a href="#Vue-前端处理跨域" class="headerlink" title="Vue 前端处理跨域"></a>Vue 前端处理跨域</h4><p><a href="https://www.jianshu.com/p/190417491124">https://www.jianshu.com/p/190417491124</a></p><h4 id="Vue-项目中的跨域问题"><a href="#Vue-项目中的跨域问题" class="headerlink" title="Vue 项目中的跨域问题"></a>Vue 项目中的跨域问题</h4><p><a href="https://zhuanlan.zhihu.com/p/274238013">https://zhuanlan.zhihu.com/p/274238013</a></p><h2 id="02-Vue部分"><a href="#02-Vue部分" class="headerlink" title="02-Vue部分"></a>02-Vue部分</h2><h4 id="聊聊vue2和vue3的区别"><a href="#聊聊vue2和vue3的区别" class="headerlink" title="聊聊vue2和vue3的区别"></a>聊聊vue2和vue3的区别</h4><p><a href="https://juejin.cn/spost/7348721869086048291">https://juejin.cn/spost/7348721869086048291</a></p><ul><li>vue2双向绑定和vue3的双向绑定原理</li></ul><h4 id="v-if和v-show的区别"><a href="#v-if和v-show的区别" class="headerlink" title="v-if和v-show的区别"></a>v-if和v-show的区别</h4><p>都是用于隐藏和显示的，v-if是直接操作dom树移除，v-show是利用css的display:none 来进行隐藏（频繁切换）</p><h4 id="vue2生命周期"><a href="#vue2生命周期" class="headerlink" title="vue2生命周期"></a>vue2生命周期</h4><p>四个阶段八个方法：初始，挂载，更新，销毁</p><h4 id="vue3生命周期"><a href="#vue3生命周期" class="headerlink" title="vue3生命周期"></a>vue3生命周期</h4><h2 id="03-uniapp部分"><a href="#03-uniapp部分" class="headerlink" title="03-uniapp部分"></a>03-uniapp部分</h2><ul><li>uniapp生命周期有哪些</li><li>uniapp和vue生命周期的区别</li><li>uniapp和vue生命周期的执行顺序</li><li>uniapp和vue的区别</li></ul><h2 id="04-React部分"><a href="#04-React部分" class="headerlink" title="04-React部分"></a>04-React部分</h2><h2 id="05-算法"><a href="#05-算法" class="headerlink" title="05-算法"></a>05-算法</h2><h2 id="06-项目难点"><a href="#06-项目难点" class="headerlink" title="06-项目难点"></a>06-项目难点</h2><p>长列表优化问题的处理</p>]]></content>
    
    
    <categories>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>About This Blog</title>
    <link href="/2024/02/23/00%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/02/23/00%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>Use <a href="https://hexo.io/">Hexo</a>! Deplyo in  <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>About Me</p><p>Lin Taibai —Use Theme Fluid</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>面经-自我介绍篇</title>
    <link href="/2023/12/01/%E9%9D%A2%E7%BB%8F-%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%E7%AF%87/"/>
    <url>/2023/12/01/%E9%9D%A2%E7%BB%8F-%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><h3 id="5句话公式"><a href="#5句话公式" class="headerlink" title="5句话公式"></a>5句话公式</h3><blockquote><p>模板：<strong>我是谁+从哪里来+我做过什么+有什么成绩+为什么能胜任</strong></p><p>面试官你好，我叫xxx，xx年毕业于xxx专业。之前任职于XX公司，担任前端开发工程师一职，在职期间主要负责电商活动相关的项目研发，对线上问题处理、性能调优、线程并发能问题都有自己的理解，对行业相关业务的研发设计流程也十分熟悉。因此决定面试<strong>咱们</strong>（哈哈～）公司的前端研发岗位，希望能获得此次机会，谢谢。</p></blockquote><blockquote></blockquote><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><blockquote><p>说清楚自己的基本情况，阐述了自身优势、亮点，表达了求职动机，体现了求职意愿</p></blockquote><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><ol><li>把自我介绍写下来，做到言简意赅，语言精炼，个人觉得一分钟内能说完最好，多了面试官也记不住。</li><li>不断练习，大声朗读，记得要有情感和抑扬顿挫，不要像背的。</li><li>拿手机录下来反复看自己的自我介绍，直到完美。</li></ol><h3 id="要注意的点："><a href="#要注意的点：" class="headerlink" title="要注意的点："></a>要注意的点：</h3><ul><li><p>要有亮点：别说一些跟工作无关的废话，比如热爱运动，性格开朗啥的，相信我面试官不关心这些的</p></li><li><p>不要做简历复读机：大量复述那些简历中有的技能和经验，那就是在浪费时间</p></li><li><p>一定要体现个人经历和岗位的相关性（这点非常重要）</p><p>温馨提示：根据不同行业的公司准备不同的简历和自我介绍，胜率会更高哦。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>面经，自我介绍</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AI-Sora智能生成视频</title>
    <link href="/2023/11/01/%E5%AE%9E%E6%88%98%E7%AF%87-AI-Sora%E6%99%BA%E8%83%BD%E7%94%9F%E6%88%90%E8%A7%86%E9%A2%91/"/>
    <url>/2023/11/01/%E5%AE%9E%E6%88%98%E7%AF%87-AI-Sora%E6%99%BA%E8%83%BD%E7%94%9F%E6%88%90%E8%A7%86%E9%A2%91/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>实战facescan人脸识别</title>
    <link href="/2023/11/01/%E5%AE%9E%E6%88%98facescan%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    <url>/2023/11/01/%E5%AE%9E%E6%88%98facescan%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="实战facescan人脸识别"><a href="#实战facescan人脸识别" class="headerlink" title="实战facescan人脸识别"></a>实战facescan人脸识别</h1><h2 id="1、实现思路"><a href="#1、实现思路" class="headerlink" title="1、实现思路"></a>1、实现思路</h2><p>利用微信里面的camera 相机进行人脸的扫描，当人脸处于视频中间时，进行录制帧数据；人脸不在视频之中时，结束帧视频的录制</p><h2 id="2、主要方法"><a href="#2、主要方法" class="headerlink" title="2、主要方法"></a>2、主要方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">//结构<br><br>&lt;camera class=&quot;camera&quot; device-position=&quot;front&quot; flash=&quot;off&quot; resolution=&quot;low&quot;&gt;&lt;/camera&gt;<br><br>//主要方法：<br>wx.initFaceDetect();  // 1、初始化人脸识别--微信提供的方法<br><br>// 2、创建相机（ camera ）上下文对象 （CameraContext ）<br>that.cameraEngine = wx.createCameraContext();<br><br>//3、获取每一帧数据<br>that.cameraEngine.onCameraFrame(frame =&gt; &#123;&#125;) <br><br>// 4、人脸识别，使用前需要通过 wx.initFaceDetect 进行一次初始化，推荐使用相机接口返回的帧数据<br>wx.faceDetect(&#123;&#125;)<br><br></code></pre></td></tr></table></figure><h2 id="3、简易完整版本"><a href="#3、简易完整版本" class="headerlink" title="3、简易完整版本"></a>3、简易完整版本</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;camera-tip&quot;</span>&gt;</span>&#123;&#123;tipsText&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">camera</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;camera&quot;</span> <span class="hljs-attr">device-position</span>=<span class="hljs-string">&quot;front&quot;</span> <span class="hljs-attr">flash</span>=<span class="hljs-string">&quot;off&quot;</span> <span class="hljs-attr">resolution</span>=<span class="hljs-string">&quot;low&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">camera</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">tipsText</span>: <span class="hljs-string">&#x27;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">showcamera</span>:<span class="hljs-number">0</span>,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">onShow</span>(<span class="hljs-params"></span>) &#123;<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initData</span>()&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 初始化相机引擎</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-title function_">initData</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">let</span> _this = <span class="hljs-variable language_">this</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// #ifdef MP-WEIXIN</span></span></span><br><span class="language-javascript"><span class="language-xml">wx.<span class="hljs-title function_">initFaceDetect</span>();<span class="hljs-comment">// 1、初始化人脸识别</span></span></span><br><span class="language-javascript"><span class="language-xml">_this.<span class="hljs-property">cameraEngine</span> = wx.<span class="hljs-title function_">createCameraContext</span>(); <span class="hljs-comment">// 2、创建 camera 上下文 CameraContext 对象</span></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 3、获取 Camera 实时帧数据</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> listener = that.<span class="hljs-property">cameraEngine</span>.<span class="hljs-title function_">onCameraFrame</span>(<span class="hljs-function"><span class="hljs-params">frame</span> =&gt;</span> &#123; </span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 4、人脸识别，使用前需要通过 wx.initFaceDetect 进行一次初始化，推荐使用相机接口返回的帧数据</span></span></span><br><span class="language-javascript"><span class="language-xml">wx.<span class="hljs-title function_">faceDetect</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">frameBuffer</span>: frame.<span class="hljs-property">data</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">width</span>: frame.<span class="hljs-property">width</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">height</span>: frame.<span class="hljs-property">height</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">enablePoint</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">enableConf</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">enableAngle</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">enableMultiFace</span>: <span class="hljs-literal">true</span>,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">faceData</span> =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">let</span> face = faceData.<span class="hljs-property">faceInfo</span>[<span class="hljs-number">0</span>];</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (faceData.<span class="hljs-property">x</span> == -<span class="hljs-number">1</span> || faceData.<span class="hljs-property">y</span> == -<span class="hljs-number">1</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;检测不到人&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (faceData.<span class="hljs-property">faceInfo</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">1</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;请保证只有一个人&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"> that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;检测人脸正常&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">if</span> (err.<span class="hljs-property">x</span> == -<span class="hljs-number">1</span> || err.<span class="hljs-property">y</span> == -<span class="hljs-number">1</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;检测不到人&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">that.<span class="hljs-property">tipsText</span> = err.<span class="hljs-property">errMsg</span> || <span class="hljs-string">&#x27;网络错误，请退出页面重试&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;);</span></span><br><span class="language-javascript"><span class="language-xml">&#125;);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// 5、开始监听帧数据</span></span></span><br><span class="language-javascript"><span class="language-xml">listener.<span class="hljs-title function_">start</span>();</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// #endif</span></span></span><br><span class="language-javascript"><span class="language-xml">&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.content</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">position</span>: absolute;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"> </span></span><br><span class="language-css"><span class="language-xml"> </span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.camera</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">width</span>: <span class="hljs-number">750</span>rpx;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">height</span>: <span class="hljs-number">400</span>rpx;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">border-top</span>: <span class="hljs-number">200</span>rpx solid  black;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">200</span>rpx solid  black;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">box-sizing</span>: border-box;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.camera-tip</span> &#123;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">position</span>: absolute;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">bottom</span>: <span class="hljs-number">220</span>rpx;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;</span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">50%</span>);</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="4、完整进阶代码"><a href="#4、完整进阶代码" class="headerlink" title="4、完整进阶代码"></a>4、完整进阶代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 初始化相机引擎</span><br><span class="hljs-title function_">initData</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span>;<br><span class="hljs-comment">// #ifdef MP-WEIXIN</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;初始化人脸识别&#x27;</span>);<br><span class="hljs-comment">// 1、初始化人脸识别</span><br>wx.<span class="hljs-title function_">initFaceDetect</span>();<br><span class="hljs-comment">// 2、创建 camera 上下文 CameraContext 对象</span><br>that.<span class="hljs-property">cameraEngine</span> = wx.<span class="hljs-title function_">createCameraContext</span>();<br><span class="hljs-comment">// 3、获取 Camera 实时帧数据</span><br><span class="hljs-keyword">const</span> listener = that.<span class="hljs-property">cameraEngine</span>.<span class="hljs-title function_">onCameraFrame</span>(<span class="hljs-function"><span class="hljs-params">frame</span> =&gt;</span> &#123;<br><span class="hljs-comment">// 4、人脸识别，使用前需要通过 wx.initFaceDetect 进行一次初始化，推荐使用相机接口返回的帧数据</span><br>wx.<span class="hljs-title function_">faceDetect</span>(&#123;<br><span class="hljs-attr">frameBuffer</span>: frame.<span class="hljs-property">data</span>,<br><span class="hljs-attr">width</span>: frame.<span class="hljs-property">width</span>,<br><span class="hljs-attr">height</span>: frame.<span class="hljs-property">height</span>,<br><span class="hljs-attr">enablePoint</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">enableConf</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">enableAngle</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">enableMultiFace</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">faceData</span> =&gt;</span> &#123;<br><span class="hljs-keyword">let</span> face = faceData.<span class="hljs-property">faceInfo</span>[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">if</span> (faceData.<span class="hljs-property">x</span> == -<span class="hljs-number">1</span> || faceData.<span class="hljs-property">y</span> == -<span class="hljs-number">1</span>) &#123;<br>that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;检测不到人&#x27;</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (faceData.<span class="hljs-property">faceInfo</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">1</span>) &#123;<br>that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;请保证只有一个人&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">const</span> &#123; pitch, roll, yaw &#125; = face.<span class="hljs-property">angleArray</span>;<br><span class="hljs-keyword">const</span> standard = <span class="hljs-number">0.3</span>;<br><span class="hljs-keyword">if</span> (<br><span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(pitch) &gt;= standard ||<br><span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(roll) &gt;= standard ||<br><span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(yaw) &gt;= standard ||<br>face.<span class="hljs-property">x</span> &lt; <span class="hljs-number">300</span> ||<br>face.<span class="hljs-property">x</span> &gt; <span class="hljs-number">400</span> ||<br>face.<span class="hljs-property">y</span> &lt; <span class="hljs-number">460</span> ||<br>face.<span class="hljs-property">y</span> &gt; <span class="hljs-number">600</span><br>) &#123;<br>that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;请平视摄像头&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<br>face.<span class="hljs-property">confArray</span>.<span class="hljs-property">global</span> &lt;= <span class="hljs-number">0.8</span> ||<br>face.<span class="hljs-property">confArray</span>.<span class="hljs-property">leftEye</span> &lt;= <span class="hljs-number">0.8</span> ||<br>face.<span class="hljs-property">confArray</span>.<span class="hljs-property">mouth</span> &lt;= <span class="hljs-number">0.8</span> ||<br>face.<span class="hljs-property">confArray</span>.<span class="hljs-property">nose</span> &lt;= <span class="hljs-number">0.8</span> ||<br>face.<span class="hljs-property">confArray</span>.<span class="hljs-property">rightEye</span> &lt;= <span class="hljs-number">0.8</span><br>) &#123;<br>that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;请勿遮挡五官&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>listener.<span class="hljs-title function_">stop</span>();<br><span class="hljs-keyword">let</span> time = <span class="hljs-number">3</span>;<br>that.<span class="hljs-property">tipsText</span> = time + <span class="hljs-string">&#x27;秒后拍照，请保持！&#x27;</span>;<br><span class="hljs-keyword">let</span> timer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>time--;<br><span class="hljs-keyword">if</span> (time &lt;= <span class="hljs-number">0</span>) &#123;<br><span class="hljs-built_in">clearInterval</span>(timer);<br><span class="hljs-comment">// 拍照</span><br><span class="hljs-keyword">return</span> that.<span class="hljs-title function_">handleTakePhotoClick</span>();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>that.<span class="hljs-property">tipsText</span> = time + <span class="hljs-string">&#x27;秒后拍照，请保持！&#x27;</span>;<br>&#125;<br>&#125;, <span class="hljs-number">1000</span>);<br><span class="hljs-comment">// listener.stop();</span><br>&#125;<br>&#125;<br>&#125;,<br><span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (err.<span class="hljs-property">x</span> == -<span class="hljs-number">1</span> || err.<span class="hljs-property">y</span> == -<span class="hljs-number">1</span>) &#123;<br>that.<span class="hljs-property">tipsText</span> = <span class="hljs-string">&#x27;检测不到人&#x27;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>that.<span class="hljs-property">tipsText</span> = err.<span class="hljs-property">errMsg</span> || <span class="hljs-string">&#x27;网络错误，请退出页面重试&#x27;</span>;<br>&#125;<br>&#125;<br>&#125;);<br>&#125;);<br><br><span class="hljs-comment">// 5、开始监听帧数据</span><br>listener.<span class="hljs-title function_">start</span>();<br><span class="hljs-comment">// #endif</span><br>&#125;,<br></code></pre></td></tr></table></figure><h2 id="4、其他相关方法"><a href="#4、其他相关方法" class="headerlink" title="4、其他相关方法"></a>4、其他相关方法</h2><h3 id="（1）获取授权uni-getSetting"><a href="#（1）获取授权uni-getSetting" class="headerlink" title="（1）获取授权uni.getSetting"></a>（1）获取授权uni.getSetting</h3><h4 id="检测是否授权相机"><a href="#检测是否授权相机" class="headerlink" title="检测是否授权相机"></a>检测是否授权相机</h4><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-comment">// 检测是否授权相机</span><br>uni.getSetting(&#123;<br><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (!res.authSetting[<span class="hljs-string">&#x27;scope.camera&#x27;</span>]) &#123;<br>this.isAuthCamera = <span class="hljs-literal">false</span>;<br>uni.openSetting(&#123;<br><span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (res.authSetting[<span class="hljs-string">&#x27;scope.camera&#x27;</span>]) &#123;<br>this.isAuthCamera = <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;<br>&#125;);<br>&#125;<br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="5、其他类似实现"><a href="#5、其他类似实现" class="headerlink" title="5、其他类似实现"></a>5、其他类似实现</h2><h3 id="（1）相机录制10秒视频"><a href="#（1）相机录制10秒视频" class="headerlink" title="（1）相机录制10秒视频"></a>（1）相机录制10秒视频</h3><ul><li><strong>初始化相机</strong><code>uni.createCameraContext()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span> = uni.<span class="hljs-title function_">createCameraContext</span>();<span class="hljs-comment">// 初始化相机</span><br></code></pre></td></tr></table></figure><ul><li>录制视频<code>startRecord</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">startRecord</span>(&#123;<br>      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;startRecord&#x27;</span>,res);<br>      &#125;,<br>  <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;fail&#x27;</span>,e);<br>  &#125;,<br>  <span class="hljs-attr">complete</span>: <span class="hljs-function">(<span class="hljs-params">eps</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;complete&#x27;</span>,eps);<br>  &#125;,<br>&#125;)<br></code></pre></td></tr></table></figure><ul><li>结束录制<code>stopRecord</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-title function_">stopRecord</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>.<span class="hljs-title function_">stopRecord</span>(&#123;<br>  <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;startRecord&#x27;</span>,res);<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">videoSrc</span>=res.<span class="hljs-property">tempVideoPath</span>;<br>  &#125;,<br>  <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;fail&#x27;</span>,e);<br>  &#125;,<br>  <span class="hljs-attr">complete</span>: <span class="hljs-function">(<span class="hljs-params">eps</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;complete&#x27;</span>,eps);<br>  &#125;,<br>&#125;)<br>&#125;,<br></code></pre></td></tr></table></figure><h3 id="（2）拍照takePhoto"><a href="#（2）拍照takePhoto" class="headerlink" title="（2）拍照takePhoto"></a>（2）拍照<code>takePhoto</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span> = uni.<span class="hljs-title function_">createCameraContext</span>();<span class="hljs-comment">// 初始化相机</span><br>ctx.<span class="hljs-title function_">takePhoto</span>(&#123;<br><span class="hljs-attr">quality</span>: <span class="hljs-string">&#x27;high&#x27;</span>,<br><span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">src</span> = res.<span class="hljs-property">tempImagePath</span><br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>实战-uniapp+Vue3-咸虾米壁纸笔记</title>
    <link href="/2023/03/03/%E5%AE%9E%E6%88%98-uniapp-Vue3-%E5%92%B8%E8%99%BE%E7%B1%B3%E5%A3%81%E7%BA%B8%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/03/03/%E5%AE%9E%E6%88%98-uniapp-Vue3-%E5%92%B8%E8%99%BE%E7%B1%B3%E5%A3%81%E7%BA%B8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="实战-uniapp最新Vue3组合式API版本零基础入门到项目"><a href="#实战-uniapp最新Vue3组合式API版本零基础入门到项目" class="headerlink" title="实战-uniapp最新Vue3组合式API版本零基础入门到项目"></a>实战-uniapp最新Vue3组合式API版本零基础入门到项目</h1><img src="/img/uniappv3.jpg" width="300" alt="preview1"><h2 id="课程目录-随堂笔记"><a href="#课程目录-随堂笔记" class="headerlink" title="课程目录+随堂笔记"></a>课程目录+随堂笔记</h2><h3 id="一、开发环境及项目创建"><a href="#一、开发环境及项目创建" class="headerlink" title="一、开发环境及项目创建"></a>一、开发环境及项目创建</h3><h5 id="1-1-uniappVue版本知识点概述"><a href="#1-1-uniappVue版本知识点概述" class="headerlink" title="1.1.uniappVue版本知识点概述"></a>1.1.uniappVue版本知识点概述</h5><p>使用uniapp的原因</p><p>uniapp知识概述</p><h5 id="1-2-使用HBuilder编辑器创建vue3新项目"><a href="#1-2-使用HBuilder编辑器创建vue3新项目" class="headerlink" title="1.2.使用HBuilder编辑器创建vue3新项目"></a>1.2.使用HBuilder编辑器创建vue3新项目</h5><p>创建vue3新项目以及项目目录介绍</p><h5 id="1-3-配置外部浏览器及各种小程序模拟器"><a href="#1-3-配置外部浏览器及各种小程序模拟器" class="headerlink" title="1.3.配置外部浏览器及各种小程序模拟器"></a>1.3.配置外部浏览器及各种小程序模拟器</h5><p>配置外部浏览器以及微信工具里面各种开发者工具</p><p>开发者工具<code>安全端口</code> 的打开</p><h5 id="1-4-创建页面及vue页面内基本组成部分"><a href="#1-4-创建页面及vue页面内基本组成部分" class="headerlink" title="1.4.创建页面及vue页面内基本组成部分"></a>1.4.创建页面及vue页面内基本组成部分</h5><p>新页面的创建以及页面路径配置</p><p>根结点以及view元素</p><h3 id="二、常用的内置组件"><a href="#二、常用的内置组件" class="headerlink" title="二、常用的内置组件"></a>二、常用的内置组件</h3><h5 id="2-1-view和text常用视图容器组件"><a href="#2-1-view和text常用视图容器组件" class="headerlink" title="2.1.view和text常用视图容器组件"></a>2.1.view和text常用视图容器组件</h5><p>冒泡事件</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">view 上面直接加即可 阻止冒泡<br><span class="hljs-attribute">hover-stop-propagation</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;true&quot;</span> (阻止冒泡事件)<br></code></pre></td></tr></table></figure><h6 id="text标签"><a href="#text标签" class="headerlink" title="text标签"></a>text标签</h6><p>selectable 文本可复制</p><p> space 是否可连续空格</p><h5 id="2-2-scroll-view可滚动视图区域组件"><a href="#2-2-scroll-view可滚动视图区域组件" class="headerlink" title="2.2.scroll-view可滚动视图区域组件"></a>2.2.scroll-view可滚动视图区域组件</h5><p>scroll-x和scroll-y属性</p><h5 id="2-3-swiper滑块视图容器的用法"><a href="#2-3-swiper滑块视图容器的用法" class="headerlink" title="2.3.swiper滑块视图容器的用法"></a>2.3.swiper滑块视图容器的用法</h5><p>指示点 indicator-dots</p><p>指示点颜色 indicator-color</p><h5 id="2-4-image媒体组件属性配合swiper轮播"><a href="#2-4-image媒体组件属性配合swiper轮播" class="headerlink" title="2.4.image媒体组件属性配合swiper轮播"></a>2.4.image媒体组件属性配合swiper轮播</h5><p>image 属性 </p><blockquote><p>mode&#x3D;”scrollToFill”</p><p>mode&#x3D;”aspectFill”</p></blockquote><h5 id="2-5-navigator路由与页面跳转"><a href="#2-5-navigator路由与页面跳转" class="headerlink" title="2.5.navigator路由与页面跳转"></a>2.5.navigator路由与页面跳转</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;navigator url=<span class="hljs-string">&quot;navigate/navigate?title=navigate&quot;</span> hover-<span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;navigator-hover&quot;</span>&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;default&quot;</span>&gt;</span>跳转到新页面<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>&lt;/navigator&gt;<br></code></pre></td></tr></table></figure><h5 id="2-6-常用的表单组件button和input"><a href="#2-6-常用的表单组件button和input" class="headerlink" title="2.6.常用的表单组件button和input"></a>2.6.常用的表单组件button和input</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">button</span> 和组件 <span class="hljs-selector-tag">input</span>的使用<br></code></pre></td></tr></table></figure><h3 id="三、vue3组合式API快速上手"><a href="#三、vue3组合式API快速上手" class="headerlink" title="三、vue3组合式API快速上手"></a>三、vue3组合式API快速上手</h3><h5 id="3-1-vue3的模板语法插值表达式用法"><a href="#3-1-vue3的模板语法插值表达式用法" class="headerlink" title="3.1.vue3的模板语法插值表达式用法"></a>3.1.vue3的模板语法插值表达式用法</h5><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">vue3 插槽 </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">title</span>&#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="language-handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span></span></span><br></code></pre></td></tr></table></figure><h5 id="3-2-使用ref定义响应式数据变量"><a href="#3-2-使用ref定义响应式数据变量" class="headerlink" title="3.2.使用ref定义响应式数据变量"></a>3.2.使用ref定义响应式数据变量</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">let</span> a=<span class="hljs-keyword">ref</span>(&#123;&#125;) <span class="hljs-keyword">ref</span>定义&#123;&#125;对象<br><span class="hljs-keyword">let</span> a=<span class="hljs-keyword">ref</span>([]) <span class="hljs-keyword">ref</span>定义数组<br><br></code></pre></td></tr></table></figure><h5 id="3-3-v-bind指令配合图片轮播案例"><a href="#3-3-v-bind指令配合图片轮播案例" class="headerlink" title="3.3.v-bind指令配合图片轮播案例"></a>3.3.v-bind指令配合图片轮播案例</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img  v-bind:<span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><h5 id="3-4-class类和style内联样式的绑定"><a href="#3-4-class类和style内联样式的绑定" class="headerlink" title="3.4.class类和style内联样式的绑定"></a>3.4.class类和style内联样式的绑定</h5><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-meta">:class=&quot;isshow?&#x27;active&#x27;:&#x27;noactive&#x27;&quot;</span> <br></code></pre></td></tr></table></figure><h5 id="3-5-原生事件监听及组件内置事件处理"><a href="#3-5-原生事件监听及组件内置事件处理" class="headerlink" title="3.5.原生事件监听及组件内置事件处理"></a>3.5.原生事件监听及组件内置事件处理</h5><p>点击事件</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">v-on:click=<span class="hljs-string">&quot;handle()  =&gt;  &quot;</span><span class="hljs-symbol">@click</span>=<span class="hljs-string">&quot;handle()&quot;</span><br><br>案例：<br>事件点击：<br><span class="hljs-built_in">String</span>(Math.<span class="hljs-built_in">random</span>()).subString(<span class="hljs-number">3</span>,<span class="hljs-number">9</span>)<br><br><span class="hljs-symbol">@change</span><br></code></pre></td></tr></table></figure><h5 id="3-6-创建自定义模板快速创建uniapp的vue3页面结构"><a href="#3-6-创建自定义模板快速创建uniapp的vue3页面结构" class="headerlink" title="3.6.创建自定义模板快速创建uniapp的vue3页面结构"></a>3.6.创建自定义模板快速创建uniapp的vue3页面结构</h5><h5 id="3-7-v-if条件渲染及v-show的选择对比"><a href="#3-7-v-if条件渲染及v-show的选择对比" class="headerlink" title="3.7.v-if条件渲染及v-show的选择对比"></a>3.7.v-if条件渲染及v-show的选择对比</h5><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">v-<span class="hljs-keyword">if</span><br>v-<span class="hljs-keyword">else</span>-<span class="hljs-keyword">if</span><br>v-<span class="hljs-keyword">else</span><br></code></pre></td></tr></table></figure><h5 id="3-8-v-for列表渲染的用法"><a href="#3-8-v-for列表渲染的用法" class="headerlink" title="3.8.v-for列表渲染的用法"></a>3.8.v-for列表渲染的用法</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">v-for</span>=<span class="hljs-string">&quot;(val,index) in tabList&quot;</span> :<span class="hljs-attribute">key</span>=<span class="hljs-string">&quot;val.id&quot;</span><br><br>template 渲染好处：最后不会显示出来<br><br>v-if 与v-for 尽量不要同时进行渲染<br></code></pre></td></tr></table></figure><h5 id="3-9-【购物车案例】for循环为什么使用key"><a href="#3-9-【购物车案例】for循环为什么使用key" class="headerlink" title="3.9.【购物车案例】for循环为什么使用key"></a>3.9.【购物车案例】for循环为什么使用key</h5><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">index</span> 并不保险，尤其在数组进行删除的时候<br></code></pre></td></tr></table></figure><h5 id="3-10-【小鸡案例】表单focus和blur事件用法"><a href="#3-10-【小鸡案例】表单focus和blur事件用法" class="headerlink" title="3.10.【小鸡案例】表单focus和blur事件用法"></a>3.10.【小鸡案例】表单focus和blur事件用法</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;input :<span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attribute">foucs</span>=<span class="hljs-string">&quot;鼠标选中&quot;</span> @<span class="hljs-attribute">blur</span>=<span class="hljs-string">&quot;失去焦点&quot;</span>&gt;<br></code></pre></td></tr></table></figure><h5 id="3-11-v-model双向绑定的实现原理"><a href="#3-11-v-model双向绑定的实现原理" class="headerlink" title="3.11.v-model双向绑定的实现原理"></a>3.11.v-model双向绑定的实现原理</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;input  @<span class="hljs-attribute">input</span>=<span class="hljs-string">&quot;event=&gt;iptvalue=event.detail.value&quot;</span>&gt;<br><br><span class="hljs-attribute">v-model</span>=<span class="hljs-string">&quot;iptvalue&quot;</span><br></code></pre></td></tr></table></figure><h5 id="3-12-【热梗案例】知识点阶段性综合汇总"><a href="#3-12-【热梗案例】知识点阶段性综合汇总" class="headerlink" title="3.12.【热梗案例】知识点阶段性综合汇总"></a>3.12.【热梗案例】知识点阶段性综合汇总</h5><p>增加删除操作</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><span class="hljs-symbol">:disabled=</span><span class="hljs-string">&quot;value.length&lt;3&quot;</span><br></code></pre></td></tr></table></figure><h5 id="3-13-computed计算属性用法及方法对比"><a href="#3-13-computed计算属性用法及方法对比" class="headerlink" title="3.13.computed计算属性用法及方法对比"></a>3.13.computed计算属性用法及方法对比</h5><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-keyword">import</span> &#123;computed&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br>const allN=computed(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>firstN+lastN)<br>&#123;&#123;allN&#125;&#125;<br><br>const allN=<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>firstN+lastN<br>&#123;&#123;allN()&#125;&#125;<br></code></pre></td></tr></table></figure><h5 id="3-14-【计价案例】计算属性配合循环遍历统计总价"><a href="#3-14-【计价案例】计算属性配合循环遍历统计总价" class="headerlink" title="3.14.【计价案例】计算属性配合循环遍历统计总价"></a>3.14.【计价案例】计算属性配合循环遍历统计总价</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;checkbox-group&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">checkbox</span>/&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">checkbox</span>/&gt;</span></span><br>&lt;/checkbox-group&gt;<br><br><span class="hljs-keyword">import</span> &#123;computed&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span><br><span class="hljs-keyword">const</span> totalNumber=<span class="hljs-title function_">computed</span>(<span class="hljs-function">()=&gt;</span>selectGroup.<span class="hljs-property">value</span>.<span class="hljs-property">length</span>)<br><br>goods.<span class="hljs-property">value</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">item</span>=&gt;</span>&#123;<br>  item.<span class="hljs-property">checked</span>=selectGroup.<span class="hljs-property">value</span>.<span class="hljs-title function_">inclues</span>(item.<span class="hljs-property">id</span>);<br>&#125;)<br><br><span class="hljs-keyword">const</span> totalprice=<span class="hljs-title function_">computed</span>(<span class="hljs-function">()=&gt;</span>goods.<span class="hljs-property">value</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">item</span>=&gt;</span>item.<span class="hljs-property">checked</span>).<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">pre,curr</span>)=&gt;</span>(pre+curr.<span class="hljs-property">price</span>),<span class="hljs-number">0</span>)<br><br><span class="hljs-comment">//简化一下代码</span><br><br>totalprice=<span class="hljs-title function_">computed</span>(<span class="hljs-function">()=&gt;</span>goods.<span class="hljs-property">value</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">item</span>=&gt;</span>item.<span class="hljs-property">checked</span>).<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">pre,curr</span>)=&gt;</span>pre+curr.<span class="hljs-property">price</span>,<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>拓展阅读：<a href="https://blog.csdn.net/qq_18798149/article/details/135089225">各种类型的for循环遍历</a></p><h5 id="3-15-watch和watchEffect监听的使用"><a href="#3-15-watch和watchEffect监听的使用" class="headerlink" title="3.15.watch和watchEffect监听的使用"></a>3.15.watch和watchEffect监听的使用</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> person=<span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>);<br><br><span class="hljs-title function_">wantch</span>(person,<span class="hljs-function">(<span class="hljs-params">newvalue,oldvalue</span>)=&gt;</span>&#123;<br><br>&#125;)<br><br><span class="hljs-keyword">const</span> person=<span class="hljs-title function_">ref</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;张三&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">18</span>&#125;);<br><br><span class="hljs-title function_">wantch</span>(person.<span class="hljs-property">value</span>.<span class="hljs-property">name</span>,<span class="hljs-function">(<span class="hljs-params">newvalue,oldvalue</span>)=&gt;</span>&#123;&#125;)<br><br><span class="hljs-title function_">wantch</span>(person,<span class="hljs-function">(<span class="hljs-params">newvalue,oldvalue</span>)=&gt;</span>&#123;&#125;,&#123;<span class="hljs-attr">deep</span>:<span class="hljs-literal">true</span>&#125;) <span class="hljs-comment">//深度监听</span><br><br><span class="hljs-title function_">wantch</span>(person,<span class="hljs-function">(<span class="hljs-params">newvalue,oldvalue</span>)=&gt;</span>&#123;&#125;,&#123;<span class="hljs-attr">deep</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">immediate</span>:<span class="hljs-literal">true</span>&#125;) <span class="hljs-comment">// 立即进行监听</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> firstN=<span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-keyword">const</span> lastN=<span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br><br><span class="hljs-comment">// 第一种方式</span><br><span class="hljs-title function_">watch</span>([firstN,lastN],<span class="hljs-function">(<span class="hljs-params">[Nfr,Nlst],[Ofr,Olst]</span>)=&gt;</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(firstN,lastN);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Ofr</span>,<span class="hljs-title class_">Olst</span>);<br>&#125;)<br><br><span class="hljs-comment">// 第二种方式</span><br><span class="hljs-title function_">watch</span>(firstN,<span class="hljs-function">(<span class="hljs-params">nv,ol</span>)=&gt;</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(firstN);<br>&#125;)<br><span class="hljs-title function_">watch</span>(lastN,<span class="hljs-function">(<span class="hljs-params">nv,ol</span>)=&gt;</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(firstN);<br>&#125;)<br></code></pre></td></tr></table></figure><p>watchEffect</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-comment">// 自动监听</span><br>watchEffect(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>&#123;<br><span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(firstN,lastN);<br>&#125;)<br></code></pre></td></tr></table></figure><p>拓展阅读：<a href="https://blog.csdn.net/qq_18798149/article/details/135302780">vue3中computed计算属性和watch监听的异同点</a></p><h3 id="四、深入vue组件及生命周期"><a href="#四、深入vue组件及生命周期" class="headerlink" title="四、深入vue组件及生命周期"></a>四、深入vue组件及生命周期</h3><h5 id="4-1-uniapp创建组件和vue官方文档的差异对比"><a href="#4-1-uniapp创建组件和vue官方文档的差异对比" class="headerlink" title="4.1.uniapp创建组件和vue官方文档的差异对比"></a>4.1.uniapp创建组件和vue官方文档的差异对比</h5><h5 id="4-2-在组件中通过Props进行数据传递"><a href="#4-2-在组件中通过Props进行数据传递" class="headerlink" title="4.2.在组件中通过Props进行数据传递"></a>4.2.在组件中通过Props进行数据传递</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">子组件之中 <br>defineProps(<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;username&#x27;</span>,<span class="hljs-string">&#x27;avator&#x27;</span>]</span>);<br><br></code></pre></td></tr></table></figure><h5 id="4-3-Prop校验与prop默认值用法及循环遍历数组对象"><a href="#4-3-Prop校验与prop默认值用法及循环遍历数组对象" class="headerlink" title="4.3.Prop校验与prop默认值用法及循环遍历数组对象"></a>4.3.Prop校验与prop默认值用法及循环遍历数组对象</h5><h5 id="4-4-插槽Slots及具名插槽实现组件高度定制化"><a href="#4-4-插槽Slots及具名插槽实现组件高度定制化" class="headerlink" title="4.4.插槽Slots及具名插槽实现组件高度定制化"></a>4.4.插槽Slots及具名插槽实现组件高度定制化</h5><h5 id="4-5-组件中emit的声明触发事件"><a href="#4-5-组件中emit的声明触发事件" class="headerlink" title="4.5.组件中emit的声明触发事件"></a>4.5.组件中emit的声明触发事件</h5><h5 id="4-6-vue3组合式API中的组件的生命周期函数（钩子函数）"><a href="#4-6-vue3组合式API中的组件的生命周期函数（钩子函数）" class="headerlink" title="4.6.vue3组合式API中的组件的生命周期函数（钩子函数）"></a>4.6.vue3组合式API中的组件的生命周期函数（钩子函数）</h5><p>拓展阅读：<a href="https://blog.csdn.net/qq_18798149/article/details/135405378">uniappVue3版本中组件生命周期和页面生命周期的详细介绍</a></p><h5 id="4-7-使用defineExpose暴漏子组件的属性及方法"><a href="#4-7-使用defineExpose暴漏子组件的属性及方法" class="headerlink" title="4.7.使用defineExpose暴漏子组件的属性及方法"></a>4.7.使用defineExpose暴漏子组件的属性及方法</h5><h5 id="4-8-页面生命周期onLoad和onReady在vue3组合式api中的使用"><a href="#4-8-页面生命周期onLoad和onReady在vue3组合式api中的使用" class="headerlink" title="4.8.页面生命周期onLoad和onReady在vue3组合式api中的使用"></a>4.8.页面生命周期onLoad和onReady在vue3组合式api中的使用</h5><h5 id="4-9-onShow和onHide钩子的对比和执行顺序"><a href="#4-9-onShow和onHide钩子的对比和执行顺序" class="headerlink" title="4.9.onShow和onHide钩子的对比和执行顺序"></a>4.9.onShow和onHide钩子的对比和执行顺序</h5><h5 id="4-10-onUnload页面卸载和onPageScroll监听页面滚动"><a href="#4-10-onUnload页面卸载和onPageScroll监听页面滚动" class="headerlink" title="4.10.onUnload页面卸载和onPageScroll监听页面滚动"></a>4.10.onUnload页面卸载和onPageScroll监听页面滚动</h5><h3 id="五、uniapp全局文件配置和API调用"><a href="#五、uniapp全局文件配置和API调用" class="headerlink" title="五、uniapp全局文件配置和API调用"></a>五、uniapp全局文件配置和API调用</h3><h5 id="5-1-响应式单位rpx及搭配使用UI产品工具"><a href="#5-1-响应式单位rpx及搭配使用UI产品工具" class="headerlink" title="5.1.响应式单位rpx及搭配使用UI产品工具"></a>5.1.响应式单位rpx及搭配使用UI产品工具</h5><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dos">px无法适配兼容各种设备<br>rpx单位<br><span class="hljs-comment">rem单位</span><br>vw vh单位<br></code></pre></td></tr></table></figure><h5 id="5-2-import导入css样式及scss变量用法与static目录"><a href="#5-2-import导入css样式及scss变量用法与static目录" class="headerlink" title="5.2.@import导入css样式及scss变量用法与static目录"></a>5.2.@import导入css样式及scss变量用法与static目录</h5><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams">@import <span class="hljs-string">&#x27;@/common/css/common.css&#x27;</span><br><br><span class="hljs-comment">//自定义颜色的使用</span><br><br>uni.scss之中进行定义<br><span class="hljs-meta"><span class="hljs-keyword">$themecolor</span> </span><br></code></pre></td></tr></table></figure><h5 id="5-3-pages-json页面路由globalStyle的属性"><a href="#5-3-pages-json页面路由globalStyle的属性" class="headerlink" title="5.3.pages.json页面路由globalStyle的属性"></a>5.3.pages.json页面路由globalStyle的属性</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">留海屏<br>导航屏的设置以及全局颜色的设置<br></code></pre></td></tr></table></figure><h5 id="5-4-pages设置页面路径及窗口表现"><a href="#5-4-pages设置页面路径及窗口表现" class="headerlink" title="5.4.pages设置页面路径及窗口表现"></a>5.4.pages设置页面路径及窗口表现</h5><h5 id="5-5-tabBar设置底部菜单选项及iconfont图标"><a href="#5-5-tabBar设置底部菜单选项及iconfont图标" class="headerlink" title="5.5.tabBar设置底部菜单选项及iconfont图标"></a>5.5.tabBar设置底部菜单选项及iconfont图标</h5><h5 id="5-6-manifest-json配置和注册微信小程序appid"><a href="#5-6-manifest-json配置和注册微信小程序appid" class="headerlink" title="5.6.manifest.json配置和注册微信小程序appid"></a>5.6.manifest.json配置和注册微信小程序appid</h5><h5 id="5-7-安装插件unplugin-auto-import自动导入vue和uniapp模块"><a href="#5-7-安装插件unplugin-auto-import自动导入vue和uniapp模块" class="headerlink" title="5.7.安装插件unplugin-auto-import自动导入vue和uniapp模块"></a>5.7.安装插件unplugin-auto-import自动导入vue和uniapp模块</h5><p>使用说明：<a href="https://blog.csdn.net/qq_18798149/article/details/134321097">开发uniapp使用Vue3组合式API版本，如何实现从vue模块中自动导入</a></p><h5 id="5-8-uni-api交互反馈showToast的用法"><a href="#5-8-uni-api交互反馈showToast的用法" class="headerlink" title="5.8.uni-api交互反馈showToast的用法"></a>5.8.uni-api交互反馈showToast的用法</h5><h5 id="5-9-showLoading加载和showModal模态框示例"><a href="#5-9-showLoading加载和showModal模态框示例" class="headerlink" title="5.9.showLoading加载和showModal模态框示例"></a>5.9.showLoading加载和showModal模态框示例</h5><h5 id="5-10-showActionSheet从底部向上弹出操作菜单"><a href="#5-10-showActionSheet从底部向上弹出操作菜单" class="headerlink" title="5.10.showActionSheet从底部向上弹出操作菜单"></a>5.10.showActionSheet从底部向上弹出操作菜单</h5><h5 id="5-11-动态设置页面导航条的样式"><a href="#5-11-动态设置页面导航条的样式" class="headerlink" title="5.11.动态设置页面导航条的样式"></a>5.11.动态设置页面导航条的样式</h5><h5 id="5-12-setTabBar设置TabBar和下拉刷新API"><a href="#5-12-setTabBar设置TabBar和下拉刷新API" class="headerlink" title="5.12.setTabBar设置TabBar和下拉刷新API"></a>5.12.setTabBar设置TabBar和下拉刷新API</h5><h5 id="5-13-页面和路由API-navigateTo及页面栈getCurrentPages"><a href="#5-13-页面和路由API-navigateTo及页面栈getCurrentPages" class="headerlink" title="5.13.页面和路由API-navigateTo及页面栈getCurrentPages"></a>5.13.页面和路由API-navigateTo及页面栈getCurrentPages</h5><h5 id="5-14-StorageSync数据缓存API"><a href="#5-14-StorageSync数据缓存API" class="headerlink" title="5.14.StorageSync数据缓存API"></a>5.14.StorageSync数据缓存API</h5><h5 id="5-15-uni-request发送网络请求"><a href="#5-15-uni-request发送网络请求" class="headerlink" title="5.15.uni.request发送网络请求"></a>5.15.uni.request发送网络请求</h5><p>免费测试api接口：<a href="https://jsonplaceholder.typicode.com/">https://jsonplaceholder.typicode.com/</a></p><p>随机猫咪API接口：<a href="https://api.thecatapi.com/v1/images/search?limit=1">https://api.thecatapi.com/v1/images/search?limit=1</a></p><p>咸虾米API接口：<a href="https://api.qingnian8.com/">https://api.qingnian8.com/</a></p><p>NBA球员榜：<a href="https://tiyu.baidu.com/api/match/playerranking/match/NBA/tabId/60">https://tiyu.baidu.com/api/match/playerranking/match/NBA/tabId/60</a></p><h5 id="5-16-request各种不同类型的参数详解"><a href="#5-16-request各种不同类型的参数详解" class="headerlink" title="5.16.request各种不同类型的参数详解"></a>5.16.request各种不同类型的参数详解</h5><h3 id="六、阶段性综合小实例-萌宠集"><a href="#六、阶段性综合小实例-萌宠集" class="headerlink" title="六、阶段性综合小实例-萌宠集"></a>六、阶段性综合小实例-萌宠集</h3><h5 id="6-1-页面布局"><a href="#6-1-页面布局" class="headerlink" title="6.1.页面布局"></a>6.1.页面布局</h5><h5 id="6-2-调用萌宠API接口渲染到页面中"><a href="#6-2-调用萌宠API接口渲染到页面中" class="headerlink" title="6.2.调用萌宠API接口渲染到页面中"></a>6.2.调用萌宠API接口渲染到页面中</h5><h5 id="6-3-使用API接口通过传输头传递access-key"><a href="#6-3-使用API接口通过传输头传递access-key" class="headerlink" title="6.3.使用API接口通过传输头传递access-key"></a>6.3.使用API接口通过传输头传递access-key</h5><h5 id="6-4-previewImage图片预览和lazy-load懒加载"><a href="#6-4-previewImage图片预览和lazy-load懒加载" class="headerlink" title="6.4.previewImage图片预览和lazy-load懒加载"></a>6.4.previewImage图片预览和lazy-load懒加载</h5><h5 id="6-5-对回调结果严格处理then-catch-finally用法"><a href="#6-5-对回调结果严格处理then-catch-finally用法" class="headerlink" title="6.5.对回调结果严格处理then_catch_finally用法"></a>6.5.对回调结果严格处理then_catch_finally用法</h5><h5 id="6-6-完成下拉刷新和触底加载更多"><a href="#6-6-完成下拉刷新和触底加载更多" class="headerlink" title="6.6.完成下拉刷新和触底加载更多"></a>6.6.完成下拉刷新和触底加载更多</h5><h5 id="6-7-底部安全区域css环境变量"><a href="#6-7-底部安全区域css环境变量" class="headerlink" title="6.7.底部安全区域css环境变量"></a>6.7.底部安全区域css环境变量</h5><p><code>env(safe-area-inset-bottom)</code></p><h5 id="6-8-使用uni-ui扩展组件"><a href="#6-8-使用uni-ui扩展组件" class="headerlink" title="6.8.使用uni-ui扩展组件"></a>6.8.使用uni-ui扩展组件</h5><h5 id="6-9-分段器组件实现点击切换萌宠类型"><a href="#6-9-分段器组件实现点击切换萌宠类型" class="headerlink" title="6.9.分段器组件实现点击切换萌宠类型"></a>6.9.分段器组件实现点击切换萌宠类型</h5><h3 id="七、咸虾米壁纸项目实战"><a href="#七、咸虾米壁纸项目实战" class="headerlink" title="七、咸虾米壁纸项目实战"></a>七、咸虾米壁纸项目实战</h3><h5 id="7-1-咸虾米壁纸项目概述"><a href="#7-1-咸虾米壁纸项目概述" class="headerlink" title="7.1.咸虾米壁纸项目概述"></a>7.1.咸虾米壁纸项目概述</h5><h5 id="7-2-项目初始化公共目录和设计稿尺寸测量工具"><a href="#7-2-项目初始化公共目录和设计稿尺寸测量工具" class="headerlink" title="7.2.项目初始化公共目录和设计稿尺寸测量工具"></a>7.2.项目初始化公共目录和设计稿尺寸测量工具</h5><h5 id="7-3-banner海报swiper轮播器"><a href="#7-3-banner海报swiper轮播器" class="headerlink" title="7.3.banner海报swiper轮播器"></a>7.3.banner海报swiper轮播器</h5><h5 id="7-4-使用swiper的纵向轮播做公告区域"><a href="#7-4-使用swiper的纵向轮播做公告区域" class="headerlink" title="7.4.使用swiper的纵向轮播做公告区域"></a>7.4.使用swiper的纵向轮播做公告区域</h5><h5 id="7-5-每日推荐滑动scroll-view布局"><a href="#7-5-每日推荐滑动scroll-view布局" class="headerlink" title="7.5.每日推荐滑动scroll-view布局"></a>7.5.每日推荐滑动scroll-view布局</h5><h5 id="7-6-组件具名插槽定义公共标题模块"><a href="#7-6-组件具名插槽定义公共标题模块" class="headerlink" title="7.6.组件具名插槽定义公共标题模块"></a>7.6.组件具名插槽定义公共标题模块</h5><h5 id="7-7-细节拉满磨砂背景定位布局做专题组件"><a href="#7-7-细节拉满磨砂背景定位布局做专题组件" class="headerlink" title="7.7.细节拉满磨砂背景定位布局做专题组件"></a>7.7.细节拉满磨砂背景定位布局做专题组件</h5><h5 id="7-8-同一组件Props传递不同属性值展示不同效果"><a href="#7-8-同一组件Props传递不同属性值展示不同效果" class="headerlink" title="7.8.同一组件Props传递不同属性值展示不同效果"></a>7.8.同一组件Props传递不同属性值展示不同效果</h5><h5 id="7-9-设置项目底部tab页面切换标签"><a href="#7-9-设置项目底部tab页面切换标签" class="headerlink" title="7.9.设置项目底部tab页面切换标签"></a>7.9.设置项目底部tab页面切换标签</h5><h5 id="7-10-个人中心页面布局"><a href="#7-10-个人中心页面布局" class="headerlink" title="7.10.个人中心页面布局"></a>7.10.个人中心页面布局</h5><h5 id="7-11-ifdef条件编译实现多终端匹配和客服消息"><a href="#7-11-ifdef条件编译实现多终端匹配和客服消息" class="headerlink" title="7.11.ifdef条件编译实现多终端匹配和客服消息"></a>7.11.ifdef条件编译实现多终端匹配和客服消息</h5><h5 id="7-12-设置页面全局渐变线性渐变背景色"><a href="#7-12-设置页面全局渐变线性渐变背景色" class="headerlink" title="7.12.设置页面全局渐变线性渐变背景色"></a>7.12.设置页面全局渐变线性渐变背景色</h5><h5 id="7-13-定义scss颜色变量deep-修改子组件css样式"><a href="#7-13-定义scss颜色变量deep-修改子组件css样式" class="headerlink" title="7.13.定义scss颜色变量deep()修改子组件css样式"></a>7.13.定义scss颜色变量deep()修改子组件css样式</h5><h5 id="7-14-创建分类列表完成各页面的跳转"><a href="#7-14-创建分类列表完成各页面的跳转" class="headerlink" title="7.14.创建分类列表完成各页面的跳转"></a>7.14.创建分类列表完成各页面的跳转</h5><h5 id="7-15-全屏页面absolute定位布局和fit-content内容宽度"><a href="#7-15-全屏页面absolute定位布局和fit-content内容宽度" class="headerlink" title="7.15.全屏页面absolute定位布局和fit-content内容宽度"></a>7.15.全屏页面absolute定位布局和fit-content内容宽度</h5><h5 id="7-16-遮罩层状态转换及日期格式化"><a href="#7-16-遮罩层状态转换及日期格式化" class="headerlink" title="7.16.遮罩层状态转换及日期格式化"></a>7.16.遮罩层状态转换及日期格式化</h5><h5 id="7-17-uni-popup弹窗层制作弹出信息内容效果"><a href="#7-17-uni-popup弹窗层制作弹出信息内容效果" class="headerlink" title="7.17.uni-popup弹窗层制作弹出信息内容效果"></a>7.17.uni-popup弹窗层制作弹出信息内容效果</h5><h5 id="7-18-评分弹出框uni-rate组件的属性方法"><a href="#7-18-评分弹出框uni-rate组件的属性方法" class="headerlink" title="7.18.评分弹出框uni-rate组件的属性方法"></a>7.18.评分弹出框uni-rate组件的属性方法</h5><h5 id="7-19-自定义头部导航栏布局"><a href="#7-19-自定义头部导航栏布局" class="headerlink" title="7.19.自定义头部导航栏布局"></a>7.19.自定义头部导航栏布局</h5><h5 id="7-20-获取系统信息getSystemInfo状态栏和胶囊按钮"><a href="#7-20-获取系统信息getSystemInfo状态栏和胶囊按钮" class="headerlink" title="7.20.获取系统信息getSystemInfo状态栏和胶囊按钮"></a>7.20.获取系统信息getSystemInfo状态栏和胶囊按钮</h5><h5 id="7-21-抽离公共方法用条件编译对抖音小程序适配"><a href="#7-21-抽离公共方法用条件编译对抖音小程序适配" class="headerlink" title="7.21.抽离公共方法用条件编译对抖音小程序适配"></a>7.21.抽离公共方法用条件编译对抖音小程序适配</h5><h5 id="7-22-完善页面布局实现各个页面的串联"><a href="#7-22-完善页面布局实现各个页面的串联" class="headerlink" title="7.22.完善页面布局实现各个页面的串联"></a>7.22.完善页面布局实现各个页面的串联</h5><h3 id="八、封装网络请求对接各个页面的真实接口"><a href="#八、封装网络请求对接各个页面的真实接口" class="headerlink" title="八、封装网络请求对接各个页面的真实接口"></a>八、封装网络请求对接各个页面的真实接口</h3><h5 id="8-1-调用网络接口在首页展示真实数据并渲染"><a href="#8-1-调用网络接口在首页展示真实数据并渲染" class="headerlink" title="8.1.调用网络接口在首页展示真实数据并渲染"></a>8.1.调用网络接口在首页展示真实数据并渲染</h5><h5 id="8-2-使用Promise封装request网络请求"><a href="#8-2-使用Promise封装request网络请求" class="headerlink" title="8.2.使用Promise封装request网络请求"></a>8.2.使用Promise封装request网络请求</h5><h5 id="8-3-对封装的request请求进行传参"><a href="#8-3-对封装的request请求进行传参" class="headerlink" title="8.3.对封装的request请求进行传参"></a>8.3.对封装的request请求进行传参</h5><h5 id="8-4-给专题组件通过defineProps声明变量传值渲染"><a href="#8-4-给专题组件通过defineProps声明变量传值渲染" class="headerlink" title="8.4.给专题组件通过defineProps声明变量传值渲染"></a>8.4.给专题组件通过defineProps声明变量传值渲染</h5><h5 id="8-5-使用ChatGPT-AI辅助工具写JS工具方法并完成分类页面渲染"><a href="#8-5-使用ChatGPT-AI辅助工具写JS工具方法并完成分类页面渲染" class="headerlink" title="8.5.使用ChatGPT AI辅助工具写JS工具方法并完成分类页面渲染"></a>8.5.使用ChatGPT AI辅助工具写JS工具方法并完成分类页面渲染</h5><h5 id="8-6-调试分类列表接口将数据渲染到页面中"><a href="#8-6-调试分类列表接口将数据渲染到页面中" class="headerlink" title="8.6.调试分类列表接口将数据渲染到页面中"></a>8.6.调试分类列表接口将数据渲染到页面中</h5><h5 id="8-7-从onLoad获取参数作为接口的参数获取对应的数据"><a href="#8-7-从onLoad获取参数作为接口的参数获取对应的数据" class="headerlink" title="8.7.从onLoad获取参数作为接口的参数获取对应的数据"></a>8.7.从onLoad获取参数作为接口的参数获取对应的数据</h5><h5 id="8-8-触底加载更多阻止无效的网络请求"><a href="#8-8-触底加载更多阻止无效的网络请求" class="headerlink" title="8.8.触底加载更多阻止无效的网络请求"></a>8.8.触底加载更多阻止无效的网络请求</h5><h5 id="8-9-骨架屏和触底加载load-more样式的展现"><a href="#8-9-骨架屏和触底加载load-more样式的展现" class="headerlink" title="8.9.骨架屏和触底加载load-more样式的展现"></a>8.9.骨架屏和触底加载load-more样式的展现</h5><h5 id="8-10-分类列表存入Storage在预览页面读取缓存展示"><a href="#8-10-分类列表存入Storage在预览页面读取缓存展示" class="headerlink" title="8.10.分类列表存入Storage在预览页面读取缓存展示"></a>8.10.分类列表存入Storage在预览页面读取缓存展示</h5><h5 id="8-11-通过swiper的事件实现真正的壁纸预览及切换"><a href="#8-11-通过swiper的事件实现真正的壁纸预览及切换" class="headerlink" title="8.11.通过swiper的事件实现真正的壁纸预览及切换"></a>8.11.通过swiper的事件实现真正的壁纸预览及切换</h5><h5 id="8-12-选学但重要-巧妙解决首次加载额外的图片网络消耗"><a href="#8-12-选学但重要-巧妙解决首次加载额外的图片网络消耗" class="headerlink" title="8.12.(选学但重要)巧妙解决首次加载额外的图片网络消耗"></a>8.12.(选学但重要)巧妙解决首次加载额外的图片网络消耗</h5><h5 id="8-13-展示每张壁纸的专属信息"><a href="#8-13-展示每张壁纸的专属信息" class="headerlink" title="8.13.展示每张壁纸的专属信息"></a>8.13.展示每张壁纸的专属信息</h5><h5 id="8-14-对接评分接口对壁纸进行滑动提交打分"><a href="#8-14-对接评分接口对壁纸进行滑动提交打分" class="headerlink" title="8.14.对接评分接口对壁纸进行滑动提交打分"></a>8.14.对接评分接口对壁纸进行滑动提交打分</h5><h5 id="8-15-通过本地缓存修改已评分过的状态"><a href="#8-15-通过本地缓存修改已评分过的状态" class="headerlink" title="8.15.通过本地缓存修改已评分过的状态"></a>8.15.通过本地缓存修改已评分过的状态</h5><h5 id="8-16-saveImageToPhotosAlbum保存壁纸到相册"><a href="#8-16-saveImageToPhotosAlbum保存壁纸到相册" class="headerlink" title="8.16.saveImageToPhotosAlbum保存壁纸到相册"></a>8.16.saveImageToPhotosAlbum保存壁纸到相册</h5><p>实现源码：<a href="https://blog.csdn.net/qq_18798149/article/details/135871140">开发微信小程序，将图片下载到相册的方法</a></p><h5 id="8-17-openSetting调用客户端授权信息及各种异常处理"><a href="#8-17-openSetting调用客户端授权信息及各种异常处理" class="headerlink" title="8.17.openSetting调用客户端授权信息及各种异常处理"></a>8.17.openSetting调用客户端授权信息及各种异常处理</h5><h5 id="8-18-try-catch处理同步请求下载记录异常处理"><a href="#8-18-try-catch处理同步请求下载记录异常处理" class="headerlink" title="8.18.try{}catch处理同步请求下载记录异常处理"></a>8.18.try{}catch处理同步请求下载记录异常处理</h5><h5 id="8-19-onShareAppMessage分享好友和分享微信朋友圈"><a href="#8-19-onShareAppMessage分享好友和分享微信朋友圈" class="headerlink" title="8.19.onShareAppMessage分享好友和分享微信朋友圈"></a>8.19.onShareAppMessage分享好友和分享微信朋友圈</h5><h5 id="8-20-对分享页面传参进行特殊处理"><a href="#8-20-对分享页面传参进行特殊处理" class="headerlink" title="8.20.对分享页面传参进行特殊处理"></a>8.20.对分享页面传参进行特殊处理</h5><h5 id="8-21-处理popup底部弹窗空缺安全区域及其他页面优化"><a href="#8-21-处理popup底部弹窗空缺安全区域及其他页面优化" class="headerlink" title="8.21.处理popup底部弹窗空缺安全区域及其他页面优化"></a>8.21.处理popup底部弹窗空缺安全区域及其他页面优化</h5><p>修改路径：uni_modules\uni-popup\components\uni-popup\uni-popup.vue</p><p>在349行左右的位置，注释掉：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// paddingBottom: this.safeAreaInsets + &#x27;px&#x27;,</span><br></code></pre></td></tr></table></figure><h3 id="九、其他功能页面实现"><a href="#九、其他功能页面实现" class="headerlink" title="九、其他功能页面实现"></a>九、其他功能页面实现</h3><h5 id="9-1-获取个人中心接口数据渲染到用户页面中"><a href="#9-1-获取个人中心接口数据渲染到用户页面中" class="headerlink" title="9.1.获取个人中心接口数据渲染到用户页面中"></a>9.1.获取个人中心接口数据渲染到用户页面中</h5><h5 id="9-2-共用分类列表页面实现我的下载和评分页面"><a href="#9-2-共用分类列表页面实现我的下载和评分页面" class="headerlink" title="9.2.共用分类列表页面实现我的下载和评分页面"></a>9.2.共用分类列表页面实现我的下载和评分页面</h5><h5 id="9-3-使用mp-html富文本插件渲染公告详情页面"><a href="#9-3-使用mp-html富文本插件渲染公告详情页面" class="headerlink" title="9.3.使用mp-html富文本插件渲染公告详情页面"></a>9.3.使用mp-html富文本插件渲染公告详情页面</h5><h5 id="9-4-搜索页面布局及结合数据缓存展示搜索历史"><a href="#9-4-搜索页面布局及结合数据缓存展示搜索历史" class="headerlink" title="9.4.搜索页面布局及结合数据缓存展示搜索历史"></a>9.4.搜索页面布局及结合数据缓存展示搜索历史</h5><h5 id="9-5-对接搜索接口预览搜索结果"><a href="#9-5-对接搜索接口预览搜索结果" class="headerlink" title="9.5.对接搜索接口预览搜索结果"></a>9.5.对接搜索接口预览搜索结果</h5><h5 id="9-6-banner中navigator组件跳转到其他小程序及bug解决"><a href="#9-6-banner中navigator组件跳转到其他小程序及bug解决" class="headerlink" title="9.6.banner中navigator组件跳转到其他小程序及bug解决"></a>9.6.banner中navigator组件跳转到其他小程序及bug解决</h5><h3 id="十、多个常见平台的打包上线"><a href="#十、多个常见平台的打包上线" class="headerlink" title="十、多个常见平台的打包上线"></a>十、多个常见平台的打包上线</h3><h5 id="10-1-打包发行微信小程序的上线全流程"><a href="#10-1-打包发行微信小程序的上线全流程" class="headerlink" title="10.1.打包发行微信小程序的上线全流程"></a>10.1.打包发行微信小程序的上线全流程</h5><p>注册地址：<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p><h5 id="10-2-打包抖音小程序条件编译抖音专属代码"><a href="#10-2-打包抖音小程序条件编译抖音专属代码" class="headerlink" title="10.2.打包抖音小程序条件编译抖音专属代码"></a>10.2.打包抖音小程序条件编译抖音专属代码</h5><p>开发平台地址：<a href="https://developer.open-douyin.com/">https://developer.open-douyin.com/</a></p><h5 id="10-3-打包H5并发布上线到unicloud的前端网页托管"><a href="#10-3-打包H5并发布上线到unicloud的前端网页托管" class="headerlink" title="10.3.打包H5并发布上线到unicloud的前端网页托管"></a>10.3.打包H5并发布上线到unicloud的前端网页托管</h5><p>拓展阅读：<a href="https://blog.csdn.net/qq_18798149/article/details/129860824">uniCloud服务空间前端网页托管绑定自定义配置网站域名</a></p><h5 id="10-4-打包安卓APP并安装运行"><a href="#10-4-打包安卓APP并安装运行" class="headerlink" title="10.4.打包安卓APP并安装运行"></a>10.4.打包安卓APP并安装运行</h5><h5 id="10-5-【完结撒花】项目总结和知识拓展"><a href="#10-5-【完结撒花】项目总结和知识拓展" class="headerlink" title="10.5.【完结撒花】项目总结和知识拓展"></a>10.5.【完结撒花】项目总结和知识拓展</h5><h2 id="项目预览图"><a href="#项目预览图" class="headerlink" title="项目预览图"></a>项目预览图</h2><img src="/img/design/home.jpg" width="300" alt="preview1"><hr> <img src="/img/design/classify.jpg" width="300" alt="preview1"><hr> <img src="/img/preview1.jpg" width="300" alt="preview1">]]></content>
    
    
    <categories>
      
      <category>uniapp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>B站笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BFC格式化上下文</title>
    <link href="/2023/01/01/%E8%AF%A6%E8%A7%A3%E7%AF%87-BFC%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
    <url>/2023/01/01/%E8%AF%A6%E8%A7%A3%E7%AF%87-BFC%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87/</url>
    
    <content type="html"><![CDATA[<h1 id="详解BFC块级格式化上下文"><a href="#详解BFC块级格式化上下文" class="headerlink" title="详解BFC块级格式化上下文"></a>详解BFC块级格式化上下文</h1><p>block formatting context</p><p>参考文章：<a href="https://zhuanlan.zhihu.com/p/161439539">https://zhuanlan.zhihu.com/p/161439539</a></p><p>在平常布局中都会遇到外边距合并、浮动元素覆盖等问题，这些都是触发了 bfc 的缘故</p><h4 id="触发BFC的方式"><a href="#触发BFC的方式" class="headerlink" title="触发BFC的方式"></a>触发BFC的方式</h4><blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">float 除了none以外的值  (浮动----必会)<br><br>overflow 除了visible 以外的值（hidden，auto，scroll ----必会） <br><br>display (table-cell，table-caption，inline-block, flex, inline-flex----必会) <br><br>position值为（absolute，fixed） （绝对定位和fiexd定位----必会）<br><br>fieldset元素<br></code></pre></td></tr></table></figure></blockquote><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">* &#123;</span><br><span class="language-css"><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css"><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-tag">p</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">margin</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000000</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-id">#box</span> &#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">500px</span>;</span><br><span class="language-css"><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="language-css"><span class="hljs-attribute">background</span>: <span class="hljs-number">#00FFFF</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>简单概述</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><br>两个<span class="hljs-selector-tag">p</span>元素的<span class="hljs-attribute">margin</span>:<span class="hljs-number">20px</span><br><br>两个子盒子的垂直距离为<span class="hljs-number">20px</span>而不是<span class="hljs-number">40px</span>，因为垂直外边距会折叠<br></code></pre></td></tr></table></figure><h4 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h4><p>加<code>overflow:hidden</code> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml">#box2&#123;<br>overflow: hidden;<br>&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;box2&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>案例<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">di</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h4><h5 id="谈谈你对BFC-规范的理解？"><a href="#谈谈你对BFC-规范的理解？" class="headerlink" title="谈谈你对BFC 规范的理解？"></a>谈谈你对BFC 规范的理解？</h5><p>🌂<code>BFC(Block Formatting Contexts)</code>，块级格式化上下文，一个创建了新的BFC 的盒子是独立布局的，盒子里面的子元素的样式不会影响到外面的元素。</p><ul><li><p>在同一个BFC 中的两个毗邻的块级盒在垂直方向（和布局方向有关系）的margin 会发生折叠。</p></li><li><p>BFC 决定了元素如何对其内容进行布局，以及与其他元素的关系和相互作用。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>杂乱待整理</title>
    <link href="/2022/02/01/%E6%9D%82%E4%B9%B1%E5%BE%85%E6%95%B4%E7%90%86/"/>
    <url>/2022/02/01/%E6%9D%82%E4%B9%B1%E5%BE%85%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>面试总结篇</title>
    <link href="/2022/01/11/11%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93%E7%AF%87/"/>
    <url>/2022/01/11/11%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="❤summary-interview-normal"><a href="#❤summary-interview-normal" class="headerlink" title="❤summary-interview-normal"></a>❤summary-interview-normal</h1><blockquote><p>座右铭：<br>长风破浪会有时，直挂云帆济沧海。<br>让一切变得简单、专一。</p></blockquote><h2 id="1、基础部分"><a href="#1、基础部分" class="headerlink" title="1、基础部分"></a>1、基础部分</h2><h3 id="（1）HTML"><a href="#（1）HTML" class="headerlink" title="（1）HTML"></a>（1）HTML</h3><h4 id="1-浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？"><a href="#1-浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？" class="headerlink" title="1. 浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？"></a>1. 浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？</h4><p>在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。</p><p>离线的情况下，浏览器就直接使用离线存储的资源。</p><h4 id="HTML5的离线储存工作原理能不能解释一下，怎么使用？"><a href="#HTML5的离线储存工作原理能不能解释一下，怎么使用？" class="headerlink" title="HTML5的离线储存工作原理能不能解释一下，怎么使用？"></a>HTML5的离线储存工作原理能不能解释一下，怎么使用？</h4><p>HTML5的离线储存原理：</p><ul><li>用户在线时，保存更新用户机器上的缓存文件； </li><li>当用户离线时，可以正常访离线储存问站点或应用内容 </li><li>HTML5的离线储存使用： </li><li>在文档的 html 标签设置 manifest 属性，如 manifest&#x3D;”&#x2F;offline.appcache” </li><li>在项目中新建 manifest 文件，manifest 文件的命名建议：xxx.appcache </li><li>在 web 服务器配置正确的 MIME-type，即 text&#x2F;cache-manifest</li></ul><h4 id="HTML5的离线储存工作原理能不能解释一下，怎么使用？-1"><a href="#HTML5的离线储存工作原理能不能解释一下，怎么使用？-1" class="headerlink" title="HTML5的离线储存工作原理能不能解释一下，怎么使用？"></a>HTML5的离线储存工作原理能不能解释一下，怎么使用？</h4><p>HTML5的离线储存原理：</p><ul><li>用户在线时，保存更新用户机器上的缓存文件； </li><li>当用户离线时，可以正常访离线储存问站点或应用内容 </li><li>HTML5的离线储存使用： </li><li>在文档的 html 标签设置 manifest 属性，如 manifest&#x3D;”&#x2F;offline.appcache” </li><li>在项目中新建 manifest 文件，manifest 文件的命名建议：xxx.appcache </li><li>在 web 服务器配置正确的 MIME-type，即 text&#x2F;cache-manifest</li></ul><h4 id="3、iframe会阻塞主页面的Onload事件吗"><a href="#3、iframe会阻塞主页面的Onload事件吗" class="headerlink" title="3、iframe会阻塞主页面的Onload事件吗"></a>3、iframe会阻塞主页面的Onload事件吗</h4><p>搜索引擎的检索程序无法解读这种页面，不利于SEO<br>iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载<br>使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript动态给iframe添加src属性值，这样可以绕开以上两个问题</p><h4 id="4、Label标签的作用是什么"><a href="#4、Label标签的作用是什么" class="headerlink" title="4、Label标签的作用是什么"></a>4、Label标签的作用是什么</h4><p>label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件</p><h4 id="5、HTML5的form如何关闭自动完成功能"><a href="#5、HTML5的form如何关闭自动完成功能" class="headerlink" title="5、HTML5的form如何关闭自动完成功能"></a>5、HTML5的form如何关闭自动完成功能</h4><p>给不想要提示的 form 或某个 input 设置为 autocomplete&#x3D;off</p><h4 id="6、如何实现浏览器内多个标签页之间的通信（重要）"><a href="#6、如何实现浏览器内多个标签页之间的通信（重要）" class="headerlink" title="6、如何实现浏览器内多个标签页之间的通信（重要）"></a>6、如何实现浏览器内多个标签页之间的通信（重要）</h4><p>WebSocket、SharedWorker<br>也可以调用localstorge、cookies等本地存储方式</p><h4 id="7、webSocket如何兼容低浏览器"><a href="#7、webSocket如何兼容低浏览器" class="headerlink" title="7、webSocket如何兼容低浏览器"></a>7、webSocket如何兼容低浏览器</h4><p>Adobe Flash Socket 、<br>ActiveX HTMLFile (IE) 、<br>基于 multipart 编码发送 XHR 、<br>基于长轮询的 XHR</p><h4 id="8、页面可见性（Page-Visibility-API）-可以有哪些用途？"><a href="#8、页面可见性（Page-Visibility-API）-可以有哪些用途？" class="headerlink" title="8、页面可见性（Page Visibility API） 可以有哪些用途？"></a>8、页面可见性（Page Visibility API） 可以有哪些用途？</h4><p>通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;<br>在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放</p><h4 id="9、如何在页面上实现一个圆形的可点击区域？"><a href="#9、如何在页面上实现一个圆形的可点击区域？" class="headerlink" title="9、如何在页面上实现一个圆形的可点击区域？"></a>9、如何在页面上实现一个圆形的可点击区域？</h4><p>map+area或者svg<br>border-radius<br>纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</p><h4 id="HTML5移除了那些元素"><a href="#HTML5移除了那些元素" class="headerlink" title="HTML5移除了那些元素"></a>HTML5移除了那些元素</h4><p>纯表现的元素：basefont、big、center、font、s、strike、tt、u<br>对可用性产生负面影响的元素：frame、frameset、noframes</p><h4 id="常见的浏览器内核有哪些？"><a href="#常见的浏览器内核有哪些？" class="headerlink" title="常见的浏览器内核有哪些？"></a>常见的浏览器内核有哪些？</h4><p>Blink内核：新版 Chrome、新版 Opera<br>Webkit内核：Safari、原Chrome<br>Gecko内核：FireFox、Netscape6及以上版本<br>Trident内核（又称MSHTML内核）：IE、国产浏览器<br>Presto内核：原Opera7及以上</p><h4 id="如何处理HTML5新标签的浏览器兼容问题？"><a href="#如何处理HTML5新标签的浏览器兼容问题？" class="headerlink" title="如何处理HTML5新标签的浏览器兼容问题？"></a>如何处理HTML5新标签的浏览器兼容问题？</h4><p>通过 document.createElement 创建新标签<br>使用垫片 html5shiv.js </p><h4 id="介绍一下你对浏览器内核的理解？"><a href="#介绍一下你对浏览器内核的理解？" class="headerlink" title="介绍一下你对浏览器内核的理解？"></a>介绍一下你对浏览器内核的理解？</h4><p>浏览器内核主要分为两部分：渲染引擎(layout engineer 或 Rendering Engine) 和 JS引擎<br>渲染引擎负责取得网页的内容进行布局计和样式渲染，然后会输出至显示器或打印机<br>JS引擎则负责解析和执行JS脚本来实现网页的动态效果和用户交互<br>最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎</p><h4 id="如何区分-HTML-和-HTML5？"><a href="#如何区分-HTML-和-HTML5？" class="headerlink" title="如何区分 HTML 和 HTML5？"></a>如何区分 HTML 和 HTML5？</h4><p>DOCTYPE声明、新增的结构元素、功能元素 </p><h3 id="（2）CSS"><a href="#（2）CSS" class="headerlink" title="（2）CSS"></a>（2）CSS</h3><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h3 id="（3）javascript"><a href="#（3）javascript" class="headerlink" title="（3）javascript"></a>（3）javascript</h3><h3 id="（4）ES部分"><a href="#（4）ES部分" class="headerlink" title="（4）ES部分"></a>（4）ES部分</h3><h2 id="02-Vue部分"><a href="#02-Vue部分" class="headerlink" title="02-Vue部分"></a>02-Vue部分</h2><h2 id="03-uniapp部分"><a href="#03-uniapp部分" class="headerlink" title="03-uniapp部分"></a>03-uniapp部分</h2><h2 id="04-React部分"><a href="#04-React部分" class="headerlink" title="04-React部分"></a>04-React部分</h2><h4 id="React-常用中间件及组件"><a href="#React-常用中间件及组件" class="headerlink" title="React 常用中间件及组件"></a>React 常用中间件及组件</h4><p><a href="https://www.jianshu.com/p/4c826bd31d3c">https://www.jianshu.com/p/4c826bd31d3c</a></p><h2 id="05-算法"><a href="#05-算法" class="headerlink" title="05-算法"></a>05-算法</h2><h2 id="06-项目难点"><a href="#06-项目难点" class="headerlink" title="06-项目难点"></a>06-项目难点</h2>]]></content>
    
    
    <categories>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>10uniapp篇</title>
    <link href="/2022/01/10/10uniapp%E7%AF%87/"/>
    <url>/2022/01/10/10uniapp%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>09网络篇</title>
    <link href="/2022/01/09/09%E7%BD%91%E7%BB%9C%E7%AF%87/"/>
    <url>/2022/01/09/09%E7%BD%91%E7%BB%9C%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>面经-react篇</title>
    <link href="/2022/01/08/08%E9%9D%A2%E7%BB%8F-react%E7%AF%87/"/>
    <url>/2022/01/08/08%E9%9D%A2%E7%BB%8F-react%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面经vue</title>
    <link href="/2022/01/07/07%E9%9D%A2%E7%BB%8Fvue/"/>
    <url>/2022/01/07/07%E9%9D%A2%E7%BB%8Fvue/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>06面经-javascript篇</title>
    <link href="/2022/01/06/06%E9%9D%A2%E7%BB%8F-javascript%E7%AF%87/"/>
    <url>/2022/01/06/06%E9%9D%A2%E7%BB%8F-javascript%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h2 id="面经"><a href="#面经" class="headerlink" title="面经"></a>面经</h2><h3 id="01-如何正确理解JS的原型和原型链"><a href="#01-如何正确理解JS的原型和原型链" class="headerlink" title="01 如何正确理解JS的原型和原型链"></a>01 如何正确理解JS的原型和原型链</h3><p><a href="https://juejin.cn/post/7081559782095585317">https://juejin.cn/post/7081559782095585317</a> </p>]]></content>
    
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面经-css篇</title>
    <link href="/2022/01/05/05%E9%9D%A2%E7%BB%8F-css%E7%AF%87/"/>
    <url>/2022/01/05/05%E9%9D%A2%E7%BB%8F-css%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>04面经-html篇</title>
    <link href="/2022/01/02/04%E9%9D%A2%E7%BB%8F-html%E7%AF%87/"/>
    <url>/2022/01/02/04%E9%9D%A2%E7%BB%8F-html%E7%AF%87/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Fluid+Github</title>
    <link href="/2020/01/02/02Fluid%E4%B8%BB%E9%A2%98+Github%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20/"/>
    <url>/2020/01/02/02Fluid%E4%B8%BB%E9%A2%98+Github%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%20/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Fluid-Github的基本使用"><a href="#Hexo-Fluid-Github的基本使用" class="headerlink" title="Hexo+Fluid+Github的基本使用"></a>Hexo+Fluid+Github的基本使用</h1><h2 id="Fluid主题（最新采用的主题）"><a href="#Fluid主题（最新采用的主题）" class="headerlink" title="Fluid主题（最新采用的主题）"></a><code>Fluid主题（最新采用的主题）</code></h2><p>官方地址：<a href="https://hexo.fluid-dev.com/docs/">https://hexo.fluid-dev.com/docs/</a></p><p>常用命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&#x27;&#x27;</span> 新建文章<br>hexo c&amp;&amp;hexo g&amp;&amp;hexo s  一键三连<br>hexo d 推送<br><br><br>启动 hexo s<br>配置文件 _config.<span class="hljs-property">yml</span><br></code></pre></td></tr></table></figure><h2 id="Fluid主题预览"><a href="#Fluid主题预览" class="headerlink" title="Fluid主题预览"></a>Fluid主题预览</h2><p>![image-20240225221430306](&#x2F;Users&#x2F;zthz&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240225221430306.png)</p><ul><li>Github 地址：<a href="https://link.zhihu.com/?target=https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></li><li>在线演示：**<a href="https://link.zhihu.com/?target=https://hexo.fluid-dev.com/">https://hexo.fluid-dev.com/</a>**</li></ul><h2 id="（1）设置头像"><a href="#（1）设置头像" class="headerlink" title="（1）设置头像"></a>（1）设置头像</h2><p>在source根目录下面新建一个<code>image</code> 文件夹用来存储图片</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">步骤一：准备头像图片<br>avator<span class="hljs-selector-class">.jpg</span> 这里我头像的名字是这个<br><br>步骤二：修改 Fluid 主题配置文件<br>打开位于项目根目录下的 _config<span class="hljs-selector-class">.fluid</span><span class="hljs-selector-class">.yml</span> 文件（如果你只看到 _config<span class="hljs-selector-class">.yml</span> 文件，那就打开它）。<br><br>确保在 avatar 配置项下正确引用你的头像图片路径。如果 avatar 配置项不存在，则手动添加它。<br></code></pre></td></tr></table></figure><h2 id="（2）自定义页面"><a href="#（2）自定义页面" class="headerlink" title="（2）自定义页面"></a>（2）<strong>自定义页面</strong></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">page</span> <span class="hljs-string">example</span><br><br><span class="hljs-string">创建成功后编辑博客目录下</span> <span class="hljs-string">/source/example/index.md即可</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">若不填默认是</span> <span class="hljs-string">title</span><br><span class="hljs-attr">tag:</span> <span class="hljs-string">标签</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br><br></code></pre></td></tr></table></figure><h2 id="（3）设置博客标题"><a href="#（3）设置博客标题" class="headerlink" title="（3）设置博客标题"></a>（3）<strong>设置博客标题</strong></h2><p>navbar:<br>  blog_title: 林太白</p><h2 id="（4）导航菜单"><a href="#（4）导航菜单" class="headerlink" title="（4）导航菜单"></a>（4）<strong>导航菜单</strong></h2><p>导航菜单可以添加链接或者自己定义页面。<br>直接在自己的界面根目录下面进行设置就可以，也就是_config.fluid.yml这个文件里面</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sas"># 菜单自定义<br>navbar:<br>  menu:<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;首页&#x27;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&#x27;/&#x27;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-home-fill&#x27;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;归档&#x27;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&#x27;/archives/&#x27;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-archive-fill&#x27;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;分类&#x27;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&#x27;/categories/&#x27;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-category-fill&#x27;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;标签&#x27;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&#x27;/tags/&#x27;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-tags-fill&#x27;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&quot;留言板&quot;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&quot;/remark/&quot;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-cliplist&#x27;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&quot;友情链接&quot;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&quot;/links/&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-link-fill&quot;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&quot;掘金林太白&quot;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&quot;https://juejin.cn/user/1874034273300919&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-link-fill&quot;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;关于&#x27;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&#x27;/about/&#x27;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-user-fill&#x27;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;GitHub&#x27;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&#x27;https://github.com/NexusLin&#x27;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-github-fill&#x27;</span> &#125;<br>    - &#123; <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;CSDN&#x27;</span>, <span class="hljs-keyword">link</span>: <span class="hljs-string">&#x27;https://blog.csdn.net/weixin_43615570?type=blog&#x27;</span>, icon: <span class="hljs-string">&#x27;iconfont icon-csdn-fill&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><h2 id="（5）配置首页打印部分字体"><a href="#（5）配置首页打印部分字体" class="headerlink" title="（5）配置首页打印部分字体"></a>（5）<strong>配置首页打印部分字体</strong></h2><p>index:<br>  slogan:<br>    enable: true<br>    text: 这是一条 Slogan<br>    api:<br>      enable: false<br>      url: “<a href="https://v1.hitokoto.cn/">https://v1.hitokoto.cn/</a>“<br>      method: “GET”<br>      headers: {}<br>      keys: [“hitokoto”]</p><h2 id="6、图片插件安装与配置"><a href="#6、图片插件安装与配置" class="headerlink" title="6、图片插件安装与配置"></a>6、图片插件安装与配置</h2><ul><li>安装一个图片路径转换的插件，插件名字为hexo-asset-image，执行以下命令<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">npm install <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/7ym0n/hexo-asset-image --save</span><br></code></pre></td></tr></table></figure></li><li>打开hexo根目录下的_config.yml文件，修改下述内容</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">post_asset_folder</span>: <span class="hljs-literal">true</span><br><br># <span class="hljs-variable constant_">URL</span><br>## <span class="hljs-title class_">If</span> your site is put <span class="hljs-keyword">in</span> a subdirectory, set url <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;http://yoursite.com/child&#x27;</span> and root <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;/child/&#x27;</span><br><span class="hljs-attr">url</span>: <span class="hljs-attr">http</span>:<span class="hljs-comment">//yourname.github.io</span><br><br></code></pre></td></tr></table></figure><p>md文章中引用图片使用相对路径格式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">![logo](这里是你建立的文章的名字/logo.<span class="hljs-property">png</span>)<br></code></pre></td></tr></table></figure><h2 id="我的更多博客"><a href="#我的更多博客" class="headerlink" title="我的更多博客"></a>我的更多博客</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">https</span>:<span class="hljs-comment">//tbai.top 我的域名博客</span><br><br><br>我的<span class="hljs-title class_">Github</span>【感兴趣的拉个star 🌟🌟🌟】<br><span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/NexusLin/NexusLin.github.io  </span><br><br>我的<span class="hljs-variable constant_">CSDN</span><br><span class="hljs-attr">https</span>:<span class="hljs-comment">//blog.csdn.net/weixin_43615570?type=blog</span><br><br>我的掘金<br><span class="hljs-attr">https</span>:<span class="hljs-comment">//juejin.cn/user/1874034273300919/posts</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>博客、Hexo、Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo主题+Gitee搭建个人博客</title>
    <link href="/2020/01/01/01hexo%E4%B8%BB%E9%A2%98-Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/01/01/01hexo%E4%B8%BB%E9%A2%98-Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo的基本使用"><a href="#Hexo的基本使用" class="headerlink" title="Hexo的基本使用"></a>Hexo的基本使用</h1><p><code>Fluid主题（最新采用的主题）</code> </p><p>常用命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&#x27;&#x27;</span> 新建文章<br>hexo c&amp;&amp;hexo g&amp;&amp;hexo s  一键三连<br>hexo d 推送<br><br><span class="hljs-number">1.</span> npm install -g hexo 安装hexo<br><span class="hljs-number">2.</span> hexo init <span class="hljs-title class_">Lourance</span>初始化<br><span class="hljs-number">3.</span> npm install hexo-cli -g  安装hexo脚手架<br><span class="hljs-number">5.</span> cd <span class="hljs-title class_">Lourance</span>  进入目录<br><span class="hljs-number">6.</span> npm install  进一步安装hexo所需文件<br><span class="hljs-number">7.</span> 启动<br>hexo clean   # 清除所有记录 /hexo c<br>hexo generate  # 生成静态网页 /hexo g<br>hexo server    # 启动服务 /hexo s<br><br>其他<br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;2455067339@qq.com&quot;</span> 生成电脑的个人密钥<br>npm install hexo-deployer-git --save 部署工具的安装<br><br><br>部署前准备添加公钥<br><span class="hljs-number">1</span>、注册登录码云<br><span class="hljs-number">2</span>、生成|添加<span class="hljs-variable constant_">SSH</span>公钥<br><span class="hljs-number">3</span>、配置 ssh 账户和邮箱<br>git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">email</span> *********@qq.<span class="hljs-property">com</span> # 设置邮箱<br>git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">name</span> <span class="hljs-string">&#x27;****&#x27;</span>   # 设置用户名<br><span class="hljs-number">4</span>、查看账户和邮箱<br>git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">name</span><br>git config --<span class="hljs-variable language_">global</span> user.<span class="hljs-property">email</span><br><span class="hljs-number">5</span>、本地生成ssh公钥<br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;xxxxx@xxxxx.com&quot;</span><br><span class="hljs-number">6</span>、查看 ssh 公钥<br>vim ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.<span class="hljs-property">pub</span><br><span class="hljs-number">7</span>、 部署到码云上面<br><span class="hljs-number">8</span>、 测试  ssh -T git@gitee.<span class="hljs-property">com</span><br><span class="hljs-number">9</span>、 配置连接 <span class="hljs-title class_">Gitee</span><br><span class="hljs-number">10</span>、复制 <span class="hljs-title class_">Gitee</span>上的个人<span class="hljs-variable constant_">URL</span> ，到 hexo 的配置文件 _config.<span class="hljs-property">yml</span><br></code></pre></td></tr></table></figure><h2 id="1-认识"><a href="#1-认识" class="headerlink" title="1. 认识"></a>1. 认识</h2><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p>官网地址：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br><img src="https://img-blog.csdnimg.cn/direct/d6b198118d1c4177920d720a2ea399b5.png" alt="在这里插入图片描述"></p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。即把用户的markdown文件，按照指定的主题解析成静态网页。</p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">准备环境<br>1.node <br>hexo 基于 node，所以首先要安装node环境（node尽量18以及以上）<br>2.npm<br>包管理工具<br></code></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>安装使用hexo之前需要先安装Node.js和Git，当已经安装了Node.js和npm(npm是node.js的包管理工具)，可以通过以下命令安装hexo</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli 安装hexo脚手架<br></code></pre></td></tr></table></figure><p>安装成功：<br><img src="https://img-blog.csdnimg.cn/direct/61566679c0b7430f83770b8fc59604dc.png" alt="在这里插入图片描述"></p><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h2><h3 id="部署发布"><a href="#部署发布" class="headerlink" title="部署发布"></a>部署发布</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo init （初始化 hexo，必须是空文件夹）<br>npm install （工程配置）<br><br>浏览器调试<br>hexo g （）<br>hexo s （启动hexo的服务）<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/6bab0e73583849bfa3a6709e5b69b773.png" alt="在这里插入图片描述"></p><p><code>到这里你本地已经简单搭建起来了博客</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo c （清楚缓存）<br>hexo g <br>hexo d （Gitee博客配置好了以后推送到gitee的）<br>hexo s<br></code></pre></td></tr></table></figure><h3 id="发布到gitee上面"><a href="#发布到gitee上面" class="headerlink" title="发布到gitee上面"></a>发布到gitee上面</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript">打开博客文件夹下面的_config.<span class="hljs-property">yml</span> 文件<br>配置自己的个人博客路径<br><span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;git&#x27;</span><br><span class="hljs-attr">repo</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//gitee.com/tbai/note.git  #替换成你自己仓库的HTTP URL地址</span><br><span class="hljs-attr">branch</span>: master<br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br>将生成的网站地址配置到自己的_config.<span class="hljs-property">yml</span>文件之中<br><span class="hljs-comment">//  url: https://gitee.com/tbai/note.git</span><br><br></code></pre></td></tr></table></figure><h3 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h3><p>1、安装自动部署发布工具，不然部署会报错</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>2、一键三连</p><ul><li><strong>一般发布文章或者修改博客后需要这些操作：清除缓存&gt;生成静态文件&gt;启动服务器，测试没问题后再部署</strong></li></ul><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs verilog">【清除缓存 hexo clean】<br>【生成静态文件 hexo <span class="hljs-keyword">generate</span>】<br>【启动服务器 hexo server】<br>【部署 hexo deploy】<br>hexo c<br>hexo g<br>hexo d<br>hexo s<br><span class="hljs-comment">// 我们可以写成一条命令</span><br>hexo c&amp;&amp;hexo g&amp;&amp;hexo s<br>$ hexo d<br></code></pre></td></tr></table></figure><h3 id="进阶操作部分"><a href="#进阶操作部分" class="headerlink" title="进阶操作部分"></a><code>进阶操作部分</code></h3><h4 id="1-如何发表新的文章"><a href="#1-如何发表新的文章" class="headerlink" title="1. 如何发表新的文章"></a>1. 如何发表新的文章</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-number">1</span>、hexo <span class="hljs-keyword">new</span> <span class="hljs-type"></span>&quot;<span class="hljs-keyword">new</span> <span class="hljs-type">article</span>&quot;<br>会在对应的路径下创建一个名为“<span class="hljs-keyword">new</span> <span class="hljs-type">article</span>”的markdown文件<br>只要在这个文件中用markdown语言进行编写文章内容即可，保存后，输入命令<br><br><br>hexo g     <span class="hljs-comment">//生成静态页面</span><br>hexo s    <span class="hljs-comment">//启动本地服务器进行查看</span><br>hexo d   <span class="hljs-comment">//查看后没有问题即可部署到github上</span><br>【自己习惯】<br>【修改以后个人三连】<br>hexo g &amp;&amp; hexo d <br>hexo s <br></code></pre></td></tr></table></figure><h2 id="4-目录和配置"><a href="#4-目录和配置" class="headerlink" title="4. 目录和配置"></a>4. 目录和配置</h2><p>官方配置地址：<a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">.<br>├── _config.<span class="hljs-property">yml</span> 网站的配置信息，您可以在此配置大部分的参数<br>├── package.<span class="hljs-property">json</span><br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes<br></code></pre></td></tr></table></figure><h2 id="5-主题安装"><a href="#5-主题安装" class="headerlink" title="5. 主题安装"></a>5. 主题安装</h2><blockquote><p>下载自己喜欢的主题，可以去 github 下载压缩包然后放到博客项目根目录下的 themes 中。<br>然后配置 _config.yml</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">`icarus 主题地址`</span> <br><br>地址：<span class="hljs-attr">https</span>:<span class="hljs-comment">//gitcode.com/ppoffice/hexo-theme-icarus/overview?utm_source=csdn_github_accelerator&amp;isLogin=1</span><br><br>安装：<br>npm install hexo-theme-icarus  <br>hexo config theme icarus<br><br><span class="hljs-string">`这里我遇到的问题就是控制台一直报红色输出问题`</span><br></code></pre></td></tr></table></figure><p>所有主题地址：<br><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><h3 id="（1）主题选择历程"><a href="#（1）主题选择历程" class="headerlink" title="（1）主题选择历程"></a>（1）主题选择历程</h3><blockquote><p>1、开始选择的是<br>hexo主题里面的yilla简洁主题，菜单不明显，放弃</p></blockquote><blockquote><p>搭建了hexo主题NextT主题</p></blockquote><blockquote><p>使用主题Butterfly</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-number">01</span>下载主题<br>git clone -b master <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><br><span class="hljs-number">2</span> 修改站点配置文件_config.<span class="hljs-property">yml</span>,<br>把主题修改为 <span class="hljs-title class_">Butterfly</span><br><span class="hljs-attr">theme</span>: <span class="hljs-title class_">Butterfly</span><br></code></pre></td></tr></table></figure><blockquote><p>为便于后续平滑升级，在source目录下创建_data文件夹,将Themes&#x2F;Butterfly目录下的 _config.yml复制一份到source&#x2F;_data目录下,并改名为butterfly.yml</p></blockquote><p>执行以下指令,以查看应用主题后的效果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo clean #清除旧的内容<br>hexo g #生成发布用的静态页面<br></code></pre></td></tr></table></figure><h3 id="（2）hexo主题Yilla使用"><a href="#（2）hexo主题Yilla使用" class="headerlink" title="（2）hexo主题Yilla使用"></a>（2）hexo主题Yilla使用</h3><p><strong>下载使用</strong></p><h4 id="1、Yilla主题下载到theme目录中"><a href="#1、Yilla主题下载到theme目录中" class="headerlink" title="1、Yilla主题下载到theme目录中"></a>1、Yilla主题下载到theme目录中</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://github.com/litten/hexo-theme-yilia.git<br></code></pre></td></tr></table></figure><h4 id="2、Yilla配置主题【找到上一层的-config-yml这个文件】"><a href="#2、Yilla配置主题【找到上一层的-config-yml这个文件】" class="headerlink" title="2、Yilla配置主题【找到上一层的_config.yml这个文件】"></a>2、Yilla配置主题【找到上一层的_config.yml这个文件】</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">theme</span>: hexo-theme-yilia<br></code></pre></td></tr></table></figure><h4 id="3、Yilla将属性值改为刚刚下载的主题名，将文件进行保存"><a href="#3、Yilla将属性值改为刚刚下载的主题名，将文件进行保存" class="headerlink" title="3、Yilla将属性值改为刚刚下载的主题名，将文件进行保存"></a>3、Yilla将属性值改为刚刚下载的主题名，将文件进行保存</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo clean <span class="hljs-comment">//清除一下缓存</span><br>hexo g  <span class="hljs-comment">//生成静态页面</span><br>hexo s <span class="hljs-comment">//开启本地服务器</span><br></code></pre></td></tr></table></figure><h4 id="4、Yilla给页面设置过多内容时候隐藏一部分"><a href="#4、Yilla给页面设置过多内容时候隐藏一部分" class="headerlink" title="4、Yilla给页面设置过多内容时候隐藏一部分"></a>4、Yilla给页面设置过多内容时候隐藏一部分</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!-- more --&gt;<br></code></pre></td></tr></table></figure><h4 id="5、Yilla文章显示目录"><a href="#5、Yilla文章显示目录" class="headerlink" title="5、Yilla文章显示目录"></a>5、Yilla文章显示目录</h4><p>themes&#x2F;yilia&#x2F;_config.ym中进行配置 toc: 2即可，它会将你 Markdown 语法的标题，生成目录，目录查看在右下角。</p><h4 id="6、Yilla文件配置-config-yml"><a href="#6、Yilla文件配置-config-yml" class="headerlink" title="6、Yilla文件配置_config.yml"></a>6、Yilla文件配置_config.yml</h4><p>主题的配置文件。和 Hexo 配置文件不同，主题配置文件修改时会自动更新，无需重启 Hexo Server。</p><h4 id="7、Yilla语言配置languages"><a href="#7、Yilla语言配置languages" class="headerlink" title="7、Yilla语言配置languages"></a>7、Yilla语言配置languages</h4><h4 id="8、Yillasource文件夹"><a href="#8、Yillasource文件夹" class="headerlink" title="8、Yillasource文件夹"></a>8、Yillasource文件夹</h4><p>资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 <code>_</code>（下划线线）或隐藏的文件会被忽略。</p><p>如果文件可以被渲染的话，会经过解析然后储存到 <code>public</code> 文件夹，否则会直接拷贝到 <code>public</code> 文件夹</p><h4 id="9、配置图片资源"><a href="#9、配置图片资源" class="headerlink" title="9、配置图片资源"></a>9、配置图片资源</h4><ul><li><strong>添加图片资源文件夹</strong>。 路径为 <code>themes/yilia/source/</code>下，可添加一个 <code>assets</code> 文件夹，里面存放图片资源即可</li><li><strong>配置文件中直接引用即可</strong>。路径为 <code>themes/yilia/_config.yml</code>，找到如下即可</li></ul><h4 id="10、文章显示摘要"><a href="#10、文章显示摘要" class="headerlink" title="10、文章显示摘要"></a>10、文章显示摘要</h4><p>问题。点击主页时，发现所有文章都是全文显示，不利于查找，可控制显示的字数<br>解决办法。 在你 MD 格式文章正文插入 <code>&lt;!-- more --&gt;</code>即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉以下<code> themes/yilia/_config.yml</code>，重复</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># excerpt_link: more</span><br></code></pre></td></tr></table></figure><h4 id="11、增加归档菜单"><a href="#11、增加归档菜单" class="headerlink" title="11、增加归档菜单"></a>11、增加归档菜单</h4><p>修改 <code>themes/yilia/_config.yml</code></p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">menu</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">主页</span><span class="hljs-punctuation">:</span> <span class="hljs-string"> /</span><br>    <span class="hljs-attribute">归档</span><span class="hljs-punctuation">:</span> <span class="hljs-string"> /archives/index.html</span><br></code></pre></td></tr></table></figure><h4 id="12、添加顶部加载条"><a href="#12、添加顶部加载条" class="headerlink" title="12、添加顶部加载条"></a>12、添加顶部加载条</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs xml">用编辑器打开 BLOG\themes\yilia\layout\_partial\head.ejs 配置文件。<br><br>在这段代码末尾添加<br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;renderer&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;webkit&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;dns-prefetch&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= config.url %&gt;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>&lt;% if (title)&#123; %&gt;&lt;%= title %&gt; | &lt;% &#125; %&gt;&lt;%= config.title %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.pace</span> <span class="hljs-selector-class">.pace-progress</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">background</span>: <span class="hljs-number">#6d6d6d</span>; <span class="hljs-comment">/*进度条颜色*/</span></span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">2px</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.pace</span> <span class="hljs-selector-class">.pace-progress-inner</span> &#123;</span><br><span class="language-css">         <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">#1E92FB</span>, <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span>     <span class="hljs-number">#6d6d6d</span>; <span class="hljs-comment">/*阴影颜色*/</span></span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.pace</span> <span class="hljs-selector-class">.pace-activity</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">border-top-color</span>: <span class="hljs-number">#6d6d6d</span>;    <span class="hljs-comment">/*上边框颜色*/</span></span><br><span class="language-css">        <span class="hljs-attribute">border-left-color</span>: <span class="hljs-number">#6d6d6d</span>;    <span class="hljs-comment">/*左边框颜色*/</span></span><br><span class="language-css">    &#125;</span><br><span class="language-css">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="19、添加左侧显示文章数"><a href="#19、添加左侧显示文章数" class="headerlink" title="19、添加左侧显示文章数"></a>19、添加左侧显示文章数</h4><h4 id="20、添加总文章数"><a href="#20、添加总文章数" class="headerlink" title="20、添加总文章数"></a>20、添加总文章数</h4><h4 id="21、鼠标点击小红心"><a href="#21、鼠标点击小红心" class="headerlink" title="21、鼠标点击小红心"></a>21、鼠标点击小红心</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!<span class="hljs-keyword">function</span>(<span class="hljs-params">e,t,a</span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> e=<span class="hljs-number">0</span>;e&lt;s.<span class="hljs-property">length</span>;e++)s[e].<span class="hljs-property">alpha</span>&lt;=<span class="hljs-number">0</span>?(t.<span class="hljs-property">body</span>.<span class="hljs-title function_">removeChild</span>(s[e].<span class="hljs-property">el</span>),s.<span class="hljs-title function_">splice</span>(e,<span class="hljs-number">1</span>)):(s[e].<span class="hljs-property">y</span>--,s[e].<span class="hljs-property">scale</span>+=<span class="hljs-number">.004</span>,s[e].<span class="hljs-property">alpha</span>-=<span class="hljs-number">.013</span>,s[e].<span class="hljs-property">el</span>.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;left:&quot;</span>+s[e].<span class="hljs-property">x</span>+<span class="hljs-string">&quot;px;top:&quot;</span>+s[e].<span class="hljs-property">y</span>+<span class="hljs-string">&quot;px;opacity:&quot;</span>+s[e].<span class="hljs-property">alpha</span>+<span class="hljs-string">&quot;;transform:scale(&quot;</span>+s[e].<span class="hljs-property">scale</span>+<span class="hljs-string">&quot;,&quot;</span>+s[e].<span class="hljs-property">scale</span>+<span class="hljs-string">&quot;) rotate(45deg);background:&quot;</span>+s[e].<span class="hljs-property">color</span>+<span class="hljs-string">&quot;;z-index:99999&quot;</span>);<span class="hljs-title function_">requestAnimationFrame</span>(r)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> t=<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> e.<span class="hljs-property">onclick</span>&amp;&amp;e.<span class="hljs-property">onclick</span>;e.<span class="hljs-property">onclick</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;t&amp;&amp;<span class="hljs-title function_">t</span>(),<span class="hljs-title function_">o</span>(e)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> a=t.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);a.<span class="hljs-property">className</span>=<span class="hljs-string">&quot;heart&quot;</span>,s.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">el</span>:a,<span class="hljs-attr">x</span>:e.<span class="hljs-property">clientX</span>-<span class="hljs-number">5</span>,<span class="hljs-attr">y</span>:e.<span class="hljs-property">clientY</span>-<span class="hljs-number">5</span>,<span class="hljs-attr">scale</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">alpha</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">color</span>:<span class="hljs-title function_">c</span>()&#125;),t.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(a)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> a=t.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;style&quot;</span>);a.<span class="hljs-property">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>;<span class="hljs-keyword">try</span>&#123;a.<span class="hljs-title function_">appendChild</span>(t.<span class="hljs-title function_">createTextNode</span>(e))&#125;<span class="hljs-keyword">catch</span>(t)&#123;a.<span class="hljs-property">styleSheet</span>.<span class="hljs-property">cssText</span>=e&#125;t.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;head&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(a)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;rgb(&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>())+<span class="hljs-string">&quot;,&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>())+<span class="hljs-string">&quot;,&quot;</span>+~~(<span class="hljs-number">255</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>())+<span class="hljs-string">&quot;)&quot;</span>&#125;<span class="hljs-keyword">var</span> s=[];e.<span class="hljs-property">requestAnimationFrame</span>=e.<span class="hljs-property">requestAnimationFrame</span>||e.<span class="hljs-property">webkitRequestAnimationFrame</span>||e.<span class="hljs-property">mozRequestAnimationFrame</span>||e.<span class="hljs-property">oRequestAnimationFrame</span>||e.<span class="hljs-property">msRequestAnimationFrame</span>||<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-built_in">setTimeout</span>(e,<span class="hljs-number">1e3</span>/<span class="hljs-number">60</span>)&#125;,<span class="hljs-title function_">i</span>(<span class="hljs-string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),<span class="hljs-title function_">n</span>(),<span class="hljs-title function_">r</span>()&#125;(<span class="hljs-variable language_">window</span>,<span class="hljs-variable language_">document</span>);<br>配置小红心<br>hexo/themes/yilia/layout/_partial/footer.<span class="hljs-property">ejs</span><br>&lt;!--页面点击小红心--&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/love.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="22、hexo主题-标签页面"><a href="#22、hexo主题-标签页面" class="headerlink" title="22、hexo主题-标签页面"></a>22、hexo主题-标签页面</h4><h4 id="23、Hexo-yilia-随笔"><a href="#23、Hexo-yilia-随笔" class="headerlink" title="23、Hexo yilia 随笔"></a>23、Hexo yilia 随笔</h4><p>“随笔” 其实就是文章的一个 tags(标签)，如果你想把文章作为随笔的话，请在文章的首部写个 tags 为 “随笔” 的标签。如下图：</p><h4 id="24、hexo添加about导航栏"><a href="#24、hexo添加about导航栏" class="headerlink" title="24、hexo添加about导航栏"></a>24、hexo添加about导航栏</h4><ul><li>创建用于关于导航栏的网页，通过命令<code>hexo new page &quot;about&quot;</code>创建，即在source下创建about文件夹，该文件夹下新建<code>index.md</code>，根据普通文章正文要求对其书写即可。</li><li>接下来，就需要将该新网页绑定在新的导航栏上面。修改 <strong>theme&#x2F;使用主题</strong> 目录下对应的**_config.yml**主题配置文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Header</span><br><span class="hljs-attr">menu:</span>  <span class="hljs-comment">#站点导航栏，按照如下格式添加: 右侧为public文件夹下的路径，索引至index.md</span><br>          <span class="hljs-comment">#从上至下依次显示在右上角从左至右处</span><br>  <span class="hljs-attr">Home:</span> <span class="hljs-string">/</span> <span class="hljs-comment">#主页导航栏</span><br>  <span class="hljs-attr">All-lists:</span> <span class="hljs-string">/archives</span><span class="hljs-comment">#所有列表导航栏</span><br>  <span class="hljs-attr">Resume:</span> <span class="hljs-string">/Shengjie</span><span class="hljs-comment">#个人简历导航栏</span><br>  <span class="hljs-attr">About:</span> <span class="hljs-string">/about</span><span class="hljs-comment">#关于导航栏</span><br></code></pre></td></tr></table></figure><p>在你想插入的位置上插入关于导航栏(支持中文)，然后将新创建的<code>/about</code>作为其路径，即可导航至你自定义的<code>index.md</code>。</p><h3 id="（3）hexo主题NestT使用"><a href="#（3）hexo主题NestT使用" class="headerlink" title="（3）hexo主题NestT使用"></a>（3）hexo主题NestT使用</h3><p><strong>下载使用</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">git clone <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/iissnan/hexo-theme-next themes/next</span><br><br>最新设置<span class="hljs-number">6</span> 以后的下载地址<br>git clone <span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/theme-next/hexo-theme-next themes/next</span><br></code></pre></td></tr></table></figure><h4 id="Next主题美化"><a href="#Next主题美化" class="headerlink" title="Next主题美化"></a>Next主题美化</h4><h3 id="1、主题简单配置"><a href="#1、主题简单配置" class="headerlink" title="1、主题简单配置"></a><strong>1、主题简单配置</strong></h3><p>Next主题主要分为四种scheme，可以在主题文件的_config.yml文件中进行选择，分别是Muse、Mist、Pisces、Gemini；</p><p>下载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/iissnan/</span>hexo-theme-<span class="hljs-keyword">next</span> themes/<span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">我主要选用的是Gemini风格<br></code></pre></td></tr></table></figure><h3 id="2、Next常规配置"><a href="#2、Next常规配置" class="headerlink" title="2、Next常规配置"></a><strong>2、Next常规配置</strong></h3><ul><li><strong>修改主题配置文件</strong></li></ul><p>在themes&#x2F;next&#x2F;_config.yml文件中进行配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">scheme</span>: <span class="hljs-title class_">Gemini</span><br></code></pre></td></tr></table></figure><ul><li>个人信息配置</li></ul><p>在站点的_config.yml文件中进行配置：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">title:</span> 林太白&amp;博客<br><span class="hljs-symbol">subtitle:</span> 学无止境<br><span class="hljs-symbol">description:</span> 路漫漫其修远兮，吾将上下而求索。<br><span class="hljs-symbol">keywords:</span> 陶白,北安南栎，博客<br><span class="hljs-symbol">author:</span> tbai<br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN <span class="hljs-meta"># 主题语言</span><br><span class="hljs-symbol">timezone:</span> Asia/Shanghai <span class="hljs-meta">#中国的时区，不要乱改城市</span><br></code></pre></td></tr></table></figure><ul><li>头像配置</li></ul><p>将头像放置在themes&#x2F;next&#x2F;source&#x2F;images&#x2F;中，然后在主题中打开_config.yml文件中进行配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">avatar:</span><br>  <span class="hljs-comment"># In theme directory (source/images): /images/avatar.gif</span><br>  <span class="hljs-comment"># In site directory (source/uploads): /uploads/avatar.gif</span><br>  <span class="hljs-comment"># You can also use other linking images.</span><br>  <span class="hljs-attr">url:</span> <span class="hljs-string">/img/avatar.jpg</span> <span class="hljs-comment">#将我们的头像图片放置在blog/themes/next/source/images目录下，填写具体地址</span><br>  <span class="hljs-comment"># If true, the avatar would be dispalyed in circle.</span><br>  <span class="hljs-attr">rounded:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#鼠标放在头像上时是否旋转</span><br>  <span class="hljs-attr">opacity:</span> <span class="hljs-number">1</span> <span class="hljs-comment">#头像放缩指数</span><br>  <span class="hljs-comment"># If true, the avatar would be rotated with the cursor.</span><br>  <span class="hljs-attr">rotated:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#头像是否设为圆形，否则为矩形</span><br></code></pre></td></tr></table></figure><ul><li>其它常规配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Table Of Contents in the Sidebar</span><br><span class="hljs-attr">toc:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#是否自动生成目录</span><br>  <span class="hljs-comment"># Automatically add list number to toc.</span><br>  <span class="hljs-attr">number:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#目录是否自动产生编号</span><br>  <span class="hljs-comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span><br>  <span class="hljs-attr">wrap:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#标题过长是否换行</span><br>  <span class="hljs-comment"># Maximum heading depth of generated toc. You can set it in one post through `toc_max_depth` var.</span><br>  <span class="hljs-attr">max_depth:</span> <span class="hljs-number">6</span> <span class="hljs-comment">#最大标题深度</span><br><span class="hljs-comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br>  <span class="hljs-attr">offset:</span> <span class="hljs-number">12</span> <span class="hljs-comment">#侧边栏相对主菜单像素距离</span><br>  <span class="hljs-comment"># Back to top in sidebar.</span><br>  <span class="hljs-attr">b2t:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#是否提供一键置顶</span><br>  <span class="hljs-comment"># Scroll percent label in b2t button.</span><br>  <span class="hljs-attr">scrollpercent:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#是否显示当前阅读进度</span><br>  <span class="hljs-comment"># Enable sidebar on narrow view (only for Muse | Mist).</span><br>  <span class="hljs-attr">onmobile:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#手机上是否显示侧边栏</span><br>  <br></code></pre></td></tr></table></figure><ul><li>菜单栏配置</li></ul><p>在主题中打开_config.yml文件中进行配置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">menu:</span><br><span class="hljs-symbol">  home:</span> / || home<br>  <span class="hljs-meta"># about: /about/ || user</span><br><span class="hljs-symbol">  tags:</span> <span class="hljs-keyword">/tags/</span> || tags<br><span class="hljs-symbol">  categories:</span> <span class="hljs-keyword">/categories/</span> || th<br><span class="hljs-symbol">  archives:</span> <span class="hljs-keyword">/archives/</span> || archive<br>  <span class="hljs-meta">#schedule: /schedule/ || calendar</span><br>  <span class="hljs-meta">#sitemap: /sitemap.xml || sitemap</span><br>  <span class="hljs-meta">#commonweal: /404/ || heartbeat</span><br></code></pre></td></tr></table></figure><p>系统自动帮我们创建了home和archives页面，所以我们只需要使用终端创建tags和categories页面即可</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haxe">$ cd hexo文件目录<br>$ hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;tages&quot;</span><br>$ hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;categories&quot;</span><br></code></pre></td></tr></table></figure><h3 id="3、添加搜索功能"><a href="#3、添加搜索功能" class="headerlink" title="3、添加搜索功能"></a>3、添加搜索功能</h3><p>1、安装 <a href="https://links.jianshu.com/go?to=https://github.com/flashlab/hexo-generator-search">hexo-generator-searchdb</a> 插件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> 文件目录<br><span class="hljs-variable">$</span> npm install hexo<span class="hljs-literal">-generator-searchdb</span> <span class="hljs-literal">--save</span><br></code></pre></td></tr></table></figure><p>2、打开站点配置文件_config.yml,找到Extensions在下面添加:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># 搜索</span><br><span class="hljs-symbol">search:</span><br><span class="hljs-symbol">  path:</span> search.xml<br><span class="hljs-symbol">  field:</span> post<br><span class="hljs-symbol">  format:</span> html<br><span class="hljs-symbol">  limit:</span> <span class="hljs-number">10000</span><br></code></pre></td></tr></table></figure><p>3、打开主题配置文件_config.yml,找到Local search，将enable设置为true。</p><h3 id="4、添加分类、标签、关于"><a href="#4、添加分类、标签、关于" class="headerlink" title="4、添加分类、标签、关于"></a>4、添加分类、标签、关于</h3><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-number">1.</span> hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;about&quot;</span><br><span class="hljs-number">2.</span> hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;tags&quot;</span><br><span class="hljs-number">3.</span> hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;categories&quot;</span><br></code></pre></td></tr></table></figure><h3 id="5、增加categories-书籍"><a href="#5、增加categories-书籍" class="headerlink" title="5、增加categories: 书籍"></a>5、增加categories: 书籍</h3><ul><li>只要搭建好了categories界面，然后在自己的博客里面增加上面categories即可</li></ul><h3 id="6、设置菜单项的显示中文文本"><a href="#6、设置菜单项的显示中文文本" class="headerlink" title="6、设置菜单项的显示中文文本"></a>6、设置菜单项的显示中文文本</h3><p>打开 themes&#x2F;next&#x2F;languages&#x2F;zh-Hans.yml 文件,搜索 menu 关键字，修改对应中文或者新增。</p><h3 id="7、Hexo-NexT主题更改语言"><a href="#7、Hexo-NexT主题更改语言" class="headerlink" title="7、Hexo NexT主题更改语言"></a>7、Hexo NexT主题更改语言</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">打开站点配置文件：站点根目录/_config.ymlspa<br><br>而后搜索找到language属性，属性值配置成<span class="hljs-built_in">zh</span>-Hans，表示中文c<br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-Hans<br></code></pre></td></tr></table></figure><h3 id="8、-设置头像边框为圆形框"><a href="#8、-设置头像边框为圆形框" class="headerlink" title="8、 设置头像边框为圆形框"></a>8、 设置头像边框为圆形框</h3><p>打开位于 themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;sidebar&#x2F;sidebar-author.syl 文件,修改如下:</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs maxima">.site-author-<span class="hljs-built_in">image</span> &#123;<br>      <span class="hljs-built_in">display</span>: <span class="hljs-built_in">block</span>;<br>      margin: <span class="hljs-number">0</span> auto;<br>      padding: $site-author-<span class="hljs-built_in">image</span>-padding;<br>      <span class="hljs-built_in">max</span>-<span class="hljs-built_in">width</span>: $site-author-<span class="hljs-built_in">image</span>-<span class="hljs-built_in">width</span>;<br>      <span class="hljs-built_in">height</span>: $site-author-<span class="hljs-built_in">image</span>-<span class="hljs-built_in">height</span>;<br>      <span class="hljs-built_in">border</span>: $site-author-<span class="hljs-built_in">image</span>-<span class="hljs-built_in">border</span>-<span class="hljs-built_in">width</span> solid $site-author-<span class="hljs-built_in">image</span>-<span class="hljs-built_in">border</span>-<span class="hljs-built_in">color</span>;<br>    // 修改头像边框<br>      <span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>: <span class="hljs-number">50</span><span class="hljs-symbol">%</span>;<br>      -webkit-<span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>: <span class="hljs-number">50</span><span class="hljs-symbol">%</span>;<br>      -moz-<span class="hljs-built_in">border</span>-<span class="hljs-built_in">radius</span>: <span class="hljs-number">50</span><span class="hljs-symbol">%</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="9、hexo之next主题添加分类"><a href="#9、hexo之next主题添加分类" class="headerlink" title="9、hexo之next主题添加分类"></a>9、hexo之next主题添加分类</h3><p>编辑新建界面，将页面类型设置为categories，主题将会在这个页面上显示所有的分类：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-03-02 12:33:16</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&quot;categories&quot;</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">然后在需要的地方添加【categories：分类】就可以</span><br></code></pre></td></tr></table></figure><h3 id="10、-主页文章添加边框阴影效果"><a href="#10、-主页文章添加边框阴影效果" class="headerlink" title="10、 主页文章添加边框阴影效果"></a>10、 主页文章添加边框阴影效果</h3><p>打开 themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_custom&#x2F;custom.styl ,向里面加代码:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css">// 主页文章添加阴影效果<br><span class="hljs-selector-class">.post</span> &#123;<br>   <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0px</span>;<br>   <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">60px</span>;<br>   <span class="hljs-attribute">padding</span>: <span class="hljs-number">25px</span>;<br>   -webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">202</span>, <span class="hljs-number">203</span>, <span class="hljs-number">203</span>, .<span class="hljs-number">5</span>);<br>   -moz-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">202</span>, <span class="hljs-number">203</span>, <span class="hljs-number">204</span>, .<span class="hljs-number">5</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="11、修改文章间分割线"><a href="#11、修改文章间分割线" class="headerlink" title="11、修改文章间分割线"></a>11、修改文章间分割线</h3><p>打开 themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;post-eof.styl ,修改：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.posts-expand</span> &#123;<br>  <span class="hljs-selector-class">.post-eof</span> &#123;<br>    <span class="hljs-attribute">display</span>: block;<br>  //  <span class="hljs-attribute">margin</span>: $post-eof-margin-top auto $post-eof-margin-bottom;  <br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">0%</span>; //分割线长度<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">0px</span>; // 分割线高度<br>    <span class="hljs-attribute">background</span>: $grey-light;<br>    <span class="hljs-attribute">text-align</span>: center;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="12、代码块自定义样式"><a href="#12、代码块自定义样式" class="headerlink" title="12、代码块自定义样式"></a>12、代码块自定义样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css">// Custom styles.<br><span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff7600</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fbf7f8</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">2px</span>;<br>&#125;<br>// 边框的自定义样式<br><span class="hljs-selector-class">.highlight</span>, pre &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;<br>&#125;<br><span class="hljs-selector-class">.highlight</span>, <span class="hljs-selector-tag">code</span>, pre &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#d6d6d6</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Next主题优化"><a href="#Next主题优化" class="headerlink" title="Next主题优化"></a>Next主题优化</h3><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在Hexo的模板中选择了Next主题，看中了Gemini风格。特意修改了一下，以满足使用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">找到themes中的<span class="hljs-keyword">next</span>文件夹，进入<span class="hljs-regexp">/source/</span>css<span class="hljs-regexp">/_variables/</span>目录，打开Gemini.styl文件<br>置<span class="hljs-variable">$body</span>-bg-color，改变页面背景色。<br></code></pre></td></tr></table></figure><h3 id="页面底部主题信息删除"><a href="#页面底部主题信息删除" class="headerlink" title="页面底部主题信息删除"></a>页面底部主题信息删除</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">打开themes中的<span class="hljs-keyword">next</span>文件夹，找到_config.yml文件，修改footer下面的配置为<span class="hljs-literal">false</span>即可<br></code></pre></td></tr></table></figure><h3 id="页面顶部黑色线条删除"><a href="#页面顶部黑色线条删除" class="headerlink" title="页面顶部黑色线条删除"></a>页面顶部黑色线条删除</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">打开themes中的<span class="hljs-keyword">next</span>文件夹，找到<span class="hljs-regexp">/source/</span>css<span class="hljs-regexp">/_common/</span>components<span class="hljs-regexp">/header/</span>headerband.styl文件，删除background样式即可<br></code></pre></td></tr></table></figure><h3 id="（4）-ICARUS主题"><a href="#（4）-ICARUS主题" class="headerlink" title="（4） ICARUS主题"></a>（4） <strong>ICARUS</strong>主题</h3><p>![image-20240225221154770](&#x2F;Users&#x2F;zthz&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240225221154770.png)</p><ul><li>Github 地址：<a href="https://link.zhihu.com/?target=https://github.com/ppoffice/hexo-theme-icarus">https://github.com/ppoffice/hexo-theme-icarus</a></li><li>在线演示：**<a href="https://link.zhihu.com/?target=https://blog.zhangruipeng.me/hexo-theme-icarus/">https://blog.zhangruipeng.me/hexo-theme-icarus/</a>**</li></ul><h3 id="（5）Butterfly-主题"><a href="#（5）Butterfly-主题" class="headerlink" title="（5）Butterfly 主题"></a>（5）<strong>Butterfly</strong> 主题</h3><p>![image-20240225221357200](&#x2F;Users&#x2F;zthz&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240225221357200.png)</p><h3 id="（6）Fluid主题（最新采用的主题）"><a href="#（6）Fluid主题（最新采用的主题）" class="headerlink" title="（6）Fluid主题（最新采用的主题）"></a>（6）Fluid主题（最新采用的主题）</h3><p>![image-20240225221430306](&#x2F;Users&#x2F;zthz&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240225221430306.png)</p><ul><li>Github 地址：<a href="https://link.zhihu.com/?target=https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></li><li>在线演示：**<a href="https://link.zhihu.com/?target=https://hexo.fluid-dev.com/">https://hexo.fluid-dev.com/</a>**</li></ul><h2 id="Fluid-主题的使用"><a href="#Fluid-主题的使用" class="headerlink" title="Fluid 主题的使用"></a>Fluid 主题的使用</h2><h3 id="（1）设置头像"><a href="#（1）设置头像" class="headerlink" title="（1）设置头像"></a>（1）设置头像</h3><p>在source根目录下面新建一个<code>image</code> 文件夹用来存储图片</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">步骤一：准备头像图片<br>avator<span class="hljs-selector-class">.jpg</span> 这里我头像的名字是这个<br><br>步骤二：修改 Fluid 主题配置文件<br>打开位于项目根目录下的 _config<span class="hljs-selector-class">.fluid</span><span class="hljs-selector-class">.yml</span> 文件（如果你只看到 _config<span class="hljs-selector-class">.yml</span> 文件，那就打开它）。<br><br>确保在 avatar 配置项下正确引用你的头像图片路径。如果 avatar 配置项不存在，则手动添加它。<br></code></pre></td></tr></table></figure><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><p>对于node环境要求<br><img src="https://img-blog.csdnimg.cn/direct/b3b4937c32774458aa8ac4c250dbf3a3.png" alt="在这里插入图片描述"></p><h3 id="网速过慢"><a href="#网速过慢" class="headerlink" title="网速过慢"></a>网速过慢</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm是从国外服务器下载，速度慢可能出现异常，所以我们可以安装cnpm来替换npm<br><br><span class="hljs-comment"># 终端输入</span><br>$ npm install -g cnpm --registry=https://registry.npm.taobao.org<br><span class="hljs-comment">#查看安装版本</span><br>$ cnpm -v<br></code></pre></td></tr></table></figure><p>安装淘宝镜像文件 【后续补充】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">安装淘宝镜像文件 【后续补充】<br>git config --global user.name <span class="hljs-string">&quot;Lourance&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;2455067339@qq.com&quot;</span><br><br><span class="hljs-comment"># 建议不要直接使用 cnpm 安装依赖，会有各种诡异的 bug。</span><br>可以通过如下操作解决 npm 下载速度慢的问题<br>npm install --registry=https://registry.npm.taobao.org<br><br></code></pre></td></tr></table></figure><h3 id="本地推送到远程仓库出的问题解决"><a href="#本地推送到远程仓库出的问题解决" class="headerlink" title="本地推送到远程仓库出的问题解决"></a>本地推送到远程仓库出的问题解决</h3><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xquery">[remote rejected] master -&gt; master (hook declined)<span class="hljs-built_in"> error</span>: failed <span class="hljs-keyword">to</span> push <span class="hljs-keyword">some</span> refs <span class="hljs-keyword">to</span><br><br>解决方法：码云的解决方法 ： 设置&gt;多邮箱管理&gt;公开<br></code></pre></td></tr></table></figure><h3 id="终端输入“hexo-clean”报错，正确做法是："><a href="#终端输入“hexo-clean”报错，正确做法是：" class="headerlink" title="终端输入“hexo clean”报错，正确做法是："></a>终端输入“hexo clean”报错，正确做法是：</h3><p>首先定位到博客文件夹，输入以下命令并回车：<br>cd &#x2F;Users&#x2F;你的用户文件夹名&#x2F;你的 blog 文件夹名【我的 tbai】<br>开启 root 权限（超级管理员权限），输入以下命令并回车：<br>sudo su<br>最后一步，依次输入 hexo 三连并回车：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>hexo clean<br><span class="hljs-variable">$ </span>hexo g<br><span class="hljs-variable">$ </span>hexo d<br></code></pre></td></tr></table></figure><h3 id="Gitee上出现未可知的违规信息"><a href="#Gitee上出现未可知的违规信息" class="headerlink" title="Gitee上出现未可知的违规信息"></a>Gitee上出现未可知的违规信息</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">检查以后发现是文章里面有 <span class="hljs-meta">&amp;  ，Gitee</span><br><span class="hljs-comment">// 删除以后再次更新正常</span><br></code></pre></td></tr></table></figure><h3 id="hexo博客使用Next主题，将主题改为子主题Gemini后，用hexo-s启动服务器本地查看正常，但hexo-d推送至服务器后，服务器端的主题并没有改变。"><a href="#hexo博客使用Next主题，将主题改为子主题Gemini后，用hexo-s启动服务器本地查看正常，但hexo-d推送至服务器后，服务器端的主题并没有改变。" class="headerlink" title="hexo博客使用Next主题，将主题改为子主题Gemini后，用hexo s启动服务器本地查看正常，但hexo d推送至服务器后，服务器端的主题并没有改变。"></a>hexo博客使用Next主题，将主题改为子主题Gemini后，用hexo s启动服务器本地查看正常，但hexo d推送至服务器后，服务器端的主题并没有改变。</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">解决方法<br>使用命令hexo <span class="hljs-built_in">clean</span>清除缓存后，再重新使用hexo g编译，最后再用hexo d推送即可。<br></code></pre></td></tr></table></figure><h3 id="markdown主题图片不显示"><a href="#markdown主题图片不显示" class="headerlink" title="markdown主题图片不显示"></a>markdown主题图片不显示</h3><h5 id="问题：改主题为Gemini时，hexo-clean，hexo-g，hexo-d-三个命令完成后主题未改变"><a href="#问题：改主题为Gemini时，hexo-clean，hexo-g，hexo-d-三个命令完成后主题未改变" class="headerlink" title="问题：改主题为Gemini时，hexo clean，hexo g，hexo d 三个命令完成后主题未改变"></a>问题：改主题为Gemini时，hexo clean，hexo g，hexo d 三个命令完成后主题未改变</h5><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">解决办法：删除<span class="hljs-keyword">next</span>下的.git文件夹（这好像是个隐藏文件夹），再上传时修改成功。<br><br>附：后来我又发现用 hexo s 命令查看网页部署时是成功的，但是 hexo d 部署到GitHub上就不行，后来等一会就行了，可能是有延迟。<br></code></pre></td></tr></table></figure><h2 id="我的博客"><a href="#我的博客" class="headerlink" title="我的博客"></a>我的博客</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">https</span>:<span class="hljs-comment">//tbai.top 我的域名博客</span><br><br><br>我的<span class="hljs-title class_">Github</span>【感兴趣的拉个star 🌟🌟🌟】<br><span class="hljs-attr">https</span>:<span class="hljs-comment">//github.com/NexusLin/NexusLin.github.io  </span><br><br>我的<span class="hljs-variable constant_">CSDN</span><br><span class="hljs-attr">https</span>:<span class="hljs-comment">//blog.csdn.net/weixin_43615570?type=blog</span><br><br>我的掘金<br><span class="hljs-attr">https</span>:<span class="hljs-comment">//juejin.cn/user/1874034273300919/posts</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
